"use strict";var Metamuxer=(()=>{var bt=Object.defineProperty;var Tr=Object.getOwnPropertyDescriptor;var xr=Object.getOwnPropertyNames;var Cr=Object.prototype.hasOwnProperty;var Sr=(i,e)=>{for(var t in e)bt(i,t,{get:e[t],enumerable:!0})},wr=(i,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of xr(e))!Cr.call(i,s)&&s!==t&&bt(i,s,{get:()=>e[s],enumerable:!(r=Tr(e,s))||r.enumerable});return i};var yr=i=>wr(bt({},"__esModule",{value:!0}),i);var Di={};Sr(Di,{ALL_FORMATS:()=>gr,AUDIO_CODECS:()=>J,ArrayBufferSource:()=>rt,ArrayBufferTarget:()=>ce,AudioBufferDrain:()=>ht,AudioBufferSource:()=>Ze,AudioDataDrain:()=>Oe,AudioDataSource:()=>Ye,AudioSource:()=>B,BlobSource:()=>it,CanvasDrain:()=>ft,CanvasSource:()=>qe,EncodedAudioChunkDrain:()=>Ae,EncodedAudioChunkSource:()=>Ge,EncodedVideoChunkDrain:()=>Re,EncodedVideoChunkSource:()=>$e,ISOBMFF:()=>ve,Input:()=>mt,MATROSKA:()=>ut,MKV:()=>Mt,MOV:()=>pr,MP4:()=>hr,MediaSource:()=>te,MediaStreamAudioTrackSource:()=>Je,MediaStreamVideoTrackSource:()=>Xe,MkvOutputFormat:()=>xe,Mp4OutputFormat:()=>Qe,Output:()=>tt,OutputFormat:()=>Q,SUBTITLE_CODECS:()=>ge,Source:()=>me,StreamTarget:()=>Be,SubtitleSource:()=>re,Target:()=>K,TextSubtitleSource:()=>et,VIDEO_CODECS:()=>Z,VideoFrameDrain:()=>Ie,VideoFrameSource:()=>je,VideoSource:()=>U,WEBM:()=>br,WebMOutputFormat:()=>ee});function d(i){if(!i)throw new Error("Assertion failed.")}var A=i=>i&&i[i.length-1],$=i=>i>=0&&i<2**32,O=(i,e,t)=>{let r=0;for(let s=e;s<t;s++){let n=Math.floor(s/8),a=i[n],c=7-(s&7),o=(a&1<<c)>>c;r<<=1,r|=o}return r},Vt=(i,e,t,r)=>{for(let s=e;s<t;s++){let n=Math.floor(s/8),a=i[n],c=7-(s&7);a&=~(1<<c),a|=(r&1<<t-s-1)>>t-s-1<<c,i[n]=a}},j=i=>i instanceof ArrayBuffer?new Uint8Array(i):new Uint8Array(i.buffer,i.byteOffset,i.byteLength),M=new TextEncoder,gt=i=>Object.fromEntries(Object.entries(i).map(([e,t])=>[t,e])),q={bt709:1,bt470bg:5,smpte170m:6},Dt=gt(q),X={bt709:1,smpte170m:6,"iec61966-2-1":13},Pt=gt(X),G={rgb:0,bt709:1,bt470bg:5,smpte170m:6},zt=gt(G),Ee=i=>!!i&&!!i.primaries&&!!i.transfer&&!!i.matrix&&i.fullRange!==void 0,kt=i=>i instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&i instanceof SharedArrayBuffer||ArrayBuffer.isView(i)&&!(i instanceof DataView),H=class{currentPromise=Promise.resolve();async acquire(){let e,t=new Promise(s=>{e=s}),r=this.currentPromise;return this.currentPromise=t,await r,e}},L=i=>{let e=i*(Math.PI/180),t=Math.cos(e),r=Math.sin(e);return[t,r,0,-r,t,0,0,0,1]},Tt=L(0),Ut=i=>[...i].map(e=>e.toString(16).padStart(2,"0")).join(""),Bt=i=>(i=i>>1&1431655765|(i&1431655765)<<1,i=i>>2&858993459|(i&858993459)<<2,i=i>>4&252645135|(i&252645135)<<4,i=i>>8&16711935|(i&16711935)<<8,i=i>>16&65535|(i&65535)<<16,i>>>0),W=(i,e,t)=>{let r=0,s=i.length-1,n=-1;for(;r<=s;){let a=r+s>>1,c=t(i[a]);c===e?(n=a,s=a-1):c<e?r=a+1:s=a-1}return n},I=(i,e,t)=>{let r=-1,s=0,n=i.length-1;for(;s<=n;){let a=s+(n-s+1)/2|0;t(i[a])<=e?(r=a,s=a+1):n=a-1}return r},N=()=>{let i,e;return{promise:new Promise((r,s)=>{i=r,e=s}),resolve:i,reject:e}},Wt=(i,e)=>{let t=i.indexOf(e);t!==-1&&i.splice(t,1)};var fe=/(?:(.+?)\n)?((?:\d{2}:)?\d{2}:\d{2}.\d{3})\s+-->\s+((?:\d{2}:)?\d{2}:\d{2}.\d{3})/g,vr=/^WEBVTT(.|\n)*?\n{2}/,ne=/<(?:(\d{2}):)?(\d{2}):(\d{2}).(\d{3})>/g,Fe=class{options;preambleText=null;preambleEmitted=!1;constructor(e){this.options=e}parse(e){e=e.replaceAll(`\r
`,`
`).replaceAll("\r",`
`),fe.lastIndex=0;let t;if(!this.preambleText){if(!vr.test(e)){let s=new Error("WebVTT preamble incorrect.");throw this.options.error(s),s}t=fe.exec(e);let r=e.slice(0,t?.index??e.length).trimEnd();if(!r){let s=new Error("No WebVTT preamble provided.");throw this.options.error(s),s}this.preambleText=r,t&&(e=e.slice(t.index),fe.lastIndex=0)}for(;t=fe.exec(e);){let r=e.slice(0,t.index),s=t[1],n=t.index+t[0].length,a=e.indexOf(`
`,n)+1,c=e.slice(n,a).trim(),o=e.indexOf(`

`,n);o===-1&&(o=e.length);let u=Me(t[2]),l=Me(t[3])-u,h=e.slice(a,o).trim();e=e.slice(o).trimStart(),fe.lastIndex=0;let p={timestamp:u/1e3,duration:l/1e3,text:h,identifier:s,settings:c,notes:r},b={};this.preambleEmitted||(b.config={description:this.preambleText},this.preambleEmitted=!0),this.options.output(p,b)}}},Rr=/(?:(\d{2}):)?(\d{2}):(\d{2}).(\d{3})/,Me=i=>{let e=Rr.exec(i);if(!e)throw new Error("Expected match.");return 60*60*1e3*Number(e[1]||"0")+60*1e3*Number(e[2])+1e3*Number(e[3])+Number(e[4])},Ve=i=>{let e=Math.floor(i/36e5),t=Math.floor(i%(60*60*1e3)/(60*1e3)),r=Math.floor(i%(60*1e3)/1e3),s=i%1e3;return e.toString().padStart(2,"0")+":"+t.toString().padStart(2,"0")+":"+r.toString().padStart(2,"0")+"."+s.toString().padStart(3,"0")};var he=class{constructor(e){this.writer=e}helper=new Uint8Array(8);helperView=new DataView(this.helper.buffer);offsets=new WeakMap;writeU32(e){this.helperView.setUint32(0,e,!1),this.writer.write(this.helper.subarray(0,4))}writeU64(e){this.helperView.setUint32(0,Math.floor(e/2**32),!1),this.helperView.setUint32(4,e,!1),this.writer.write(this.helper.subarray(0,8))}writeAscii(e){for(let t=0;t<e.length;t++)this.helperView.setUint8(t%8,e.charCodeAt(t)),t%8===7&&this.writer.write(this.helper);e.length%8!==0&&this.writer.write(this.helper.subarray(0,e.length%8))}writeBox(e){if(this.offsets.set(e,this.writer.getPos()),e.contents&&!e.children)this.writeBoxHeader(e,e.size??e.contents.byteLength+8),this.writer.write(e.contents);else{let t=this.writer.getPos();if(this.writeBoxHeader(e,0),e.contents&&this.writer.write(e.contents),e.children)for(let n of e.children)n&&this.writeBox(n);let r=this.writer.getPos(),s=e.size??r-t;this.writer.seek(t),this.writeBoxHeader(e,s),this.writer.seek(r)}}writeBoxHeader(e,t){this.writeU32(e.largeSize?1:t),this.writeAscii(e.type),e.largeSize&&this.writeU64(t)}measureBoxHeader(e){return 8+(e.largeSize?8:0)}patchBox(e){let t=this.offsets.get(e);d(t!==void 0);let r=this.writer.getPos();this.writer.seek(t),this.writeBox(e),this.writer.seek(r)}measureBox(e){if(e.contents&&!e.children)return this.measureBoxHeader(e)+e.contents.byteLength;{let t=this.measureBoxHeader(e);if(e.contents&&(t+=e.contents.byteLength),e.children)for(let r of e.children)r&&(t+=this.measureBox(r));return t}}},T=new Uint8Array(8),z=new DataView(T.buffer),R=i=>[(i%256+256)%256],x=i=>(z.setUint16(0,i,!1),[T[0],T[1]]),Ir=i=>(z.setInt16(0,i,!1),[T[0],T[1]]),Ht=i=>(z.setUint32(0,i,!1),[T[1],T[2],T[3]]),f=i=>(z.setUint32(0,i,!1),[T[0],T[1],T[2],T[3]]),Lt=i=>(z.setInt32(0,i,!1),[T[0],T[1],T[2],T[3]]),Y=i=>(z.setUint32(0,Math.floor(i/2**32),!1),z.setUint32(4,i,!1),[T[0],T[1],T[2],T[3],T[4],T[5],T[6],T[7]]),St=i=>(z.setInt16(0,2**8*i,!1),[T[0],T[1]]),P=i=>(z.setInt32(0,2**16*i,!1),[T[0],T[1],T[2],T[3]]),xt=i=>(z.setInt32(0,2**30*i,!1),[T[0],T[1],T[2],T[3]]),Ct=(i,e)=>{let t=[],r=i;do{let s=r&127;r>>=7,t.length>0&&(s|=128),t.push(s),e!==void 0&&e--}while(r>0||e);return t.reverse()},_=(i,e=!1)=>{let t=Array(i.length).fill(null).map((r,s)=>i.charCodeAt(s));return e&&t.push(0),t},wt=i=>{let e=null;for(let t of i)(!e||t.timestamp>e.timestamp)&&(e=t);return e},Kt=i=>[P(i[0]),P(i[1]),xt(i[2]),P(i[3]),P(i[4]),xt(i[5]),P(i[6]),P(i[7]),xt(i[8])],C=(i,e,t)=>({type:i,contents:e&&new Uint8Array(e.flat(10)),children:t}),S=(i,e,t,r,s)=>C(i,[R(e),Ht(t),r??[]],s),Qt=i=>i.fragmented?C("ftyp",[_("iso5"),f(512),_("iso5"),_("iso6"),_("mp41")]):C("ftyp",[_("isom"),f(512),_("isom"),i.holdsAvc?_("avc1"):[],_("mp41")]),Pe=i=>({type:"mdat",largeSize:i}),$t=i=>({type:"free",size:i}),pe=(i,e,t=!1)=>C("moov",void 0,[Ar(e,i),...i.map(r=>Or(r,e)),t?ci(i):null]),Ar=(i,e)=>{let t=V(Math.max(0,...e.filter(a=>a.samples.length>0).map(a=>{let c=wt(a.samples);return c.timestamp+c.duration})),De),r=Math.max(0,...e.map(a=>a.track.id))+1,s=!$(i)||!$(t),n=s?Y:f;return S("mvhd",+s,0,[n(i),n(i),f(De),n(t),P(1),St(1),Array(10).fill(0),Kt(Tt),Array(24).fill(0),f(r)])},Or=(i,e)=>C("trak",void 0,[_r(i,e),Er(i,e)]),_r=(i,e)=>{let t=wt(i.samples),r=V(t?t.timestamp+t.duration:0,De),s=!$(e)||!$(r),n=s?Y:f,a;if(i.type==="video"){let c=i.track.metadata.rotation;a=c===void 0||typeof c=="number"?L(c??0):c}else a=Tt;return S("tkhd",+s,3,[n(e),n(e),f(i.track.id),f(0),n(r),Array(8).fill(0),x(0),x(i.track.id),St(i.type==="audio"?1:0),x(0),Kt(a),P(i.type==="video"?i.info.width:0),P(i.type==="video"?i.info.height:0)])},Er=(i,e)=>C("mdia",void 0,[Fr(i,e),Dr(i),Pr(i)]),Fr=(i,e)=>{let t=wt(i.samples),r=V(t?t.timestamp+t.duration:0,i.timescale),s=!$(e)||!$(r),n=s?Y:f;return S("mdhd",+s,0,[n(e),n(e),f(i.timescale),n(r),x(21956),x(0)])},Mr={video:"vide",audio:"soun",subtitle:"text"},Vr={video:"VideoHandler",audio:"SoundHandler",subtitle:"TextHandler"},Dr=i=>S("hdlr",0,0,[_("mhlr"),_(Mr[i.type]),f(0),f(0),f(0),_(Vr[i.type],!0)]),Pr=i=>C("minf",void 0,[Wr[i.type](),Nr(),Kr(i)]),zr=()=>S("vmhd",0,1,[x(0),x(0),x(0),x(0)]),Ur=()=>S("smhd",0,0,[x(0),x(0)]),Br=()=>S("nmhd",0,0),Wr={video:zr,audio:Ur,subtitle:Br},Nr=()=>C("dinf",void 0,[Hr()]),Hr=()=>S("dref",0,0,[f(1)],[Lr()]),Lr=()=>S("url ",0,1),Kr=i=>{let e=i.compositionTimeOffsetTable.length>1||i.compositionTimeOffsetTable.some(t=>t.sampleCompositionTimeOffset!==0);return C("stbl",void 0,[Qr(i),ri(i),ii(i),si(i),ni(i),ai(i),e?oi(i):null])},Qr=i=>{let e;return i.type==="video"?e=$r(gi[i.track.source._codec],i):i.type==="audio"?e=Yr(Ti[i.track.source._codec],i):i.type==="subtitle"&&(e=ei(Ci[i.track.source._codec],i)),d(e),S("stsd",0,0,[f(1)],[e])},$r=(i,e)=>C(i,[Array(6).fill(0),x(1),x(0),x(0),Array(12).fill(0),x(e.info.width),x(e.info.height),f(4718592),f(4718592),f(0),x(1),Array(32).fill(0),x(24),Ir(65535)],[ki[e.track.source._codec](e),Ee(e.info.decoderConfig.colorSpace)?jr(e):null]),jr=i=>C("colr",[_("nclx"),x(q[i.info.decoderConfig.colorSpace.primaries]),x(X[i.info.decoderConfig.colorSpace.transfer]),x(G[i.info.decoderConfig.colorSpace.matrix]),R((i.info.decoderConfig.colorSpace.fullRange?1:0)<<7)]),qr=i=>i.info.decoderConfig&&C("avcC",[...j(i.info.decoderConfig.description)]),Xr=i=>i.info.decoderConfig&&C("hvcC",[...j(i.info.decoderConfig.description)]),Nt=i=>{if(!i.info.decoderConfig)return null;let e=i.info.decoderConfig;d(e.colorSpace);let t=e.codec.split("."),r=Number(t[1]),s=Number(t[2]),c=(Number(t[3])<<4)+(0<<1)+Number(e.colorSpace.fullRange);return S("vpcC",1,0,[R(r),R(s),R(c),R(2),R(2),R(2),x(0)])},Gr=()=>C("av1C",[129,0,0,0]),Yr=(i,e)=>C(i,[Array(6).fill(0),x(1),x(0),x(0),f(0),x(e.info.numberOfChannels),x(16),x(0),x(0),P(e.info.sampleRate)],[xi[e.track.source._codec](e)]),Zr=i=>{let t=[...j(i.info.decoderConfig.description??new ArrayBuffer(0))];return t=[...R(64),...R(21),...Ht(0),...f(0),...f(0),...R(5),...Ct(t.length),...t],t=[...x(1),...R(0),...R(4),...Ct(t.length),...t,...R(6),...R(1),...R(2)],t=[...R(3),...Ct(t.length),...t],S("esds",0,0,t)},Jr=i=>{let e=3840,t=0,r=i.info.decoderConfig?.description;if(r){d(r.byteLength>=18);let s=ArrayBuffer.isView(r)?new DataView(r.buffer,r.byteOffset,r.byteLength):new DataView(r);e=s.getUint16(10,!0),t=s.getInt16(14,!0)}return C("dOps",[R(0),R(i.info.numberOfChannels),x(e),f(i.info.sampleRate),St(t),R(0)])},ei=(i,e)=>C(i,[Array(6).fill(0),x(1)],[Si[e.track.source._codec](e)]),ti=i=>C("vttC",[...M.encode(i.info.config.description)]);var ri=i=>S("stts",0,0,[f(i.timeToSampleTable.length),i.timeToSampleTable.map(e=>[f(e.sampleCount),f(e.sampleDelta)])]),ii=i=>{if(i.samples.every(t=>t.type==="key"))return null;let e=[...i.samples.entries()].filter(([,t])=>t.type==="key");return S("stss",0,0,[f(e.length),e.map(([t])=>f(t+1))])},si=i=>S("stsc",0,0,[f(i.compactlyCodedChunkTable.length),i.compactlyCodedChunkTable.map(e=>[f(e.firstChunk),f(e.samplesPerChunk),f(1)])]),ni=i=>S("stsz",0,0,[f(0),f(i.samples.length),i.samples.map(e=>f(e.size))]),ai=i=>i.finalizedChunks.length>0&&A(i.finalizedChunks).offset>=2**32?S("co64",0,0,[f(i.finalizedChunks.length),i.finalizedChunks.map(e=>Y(e.offset))]):S("stco",0,0,[f(i.finalizedChunks.length),i.finalizedChunks.map(e=>f(e.offset))]),oi=i=>S("ctts",0,0,[f(i.compositionTimeOffsetTable.length),i.compositionTimeOffsetTable.map(e=>[f(e.sampleCount),f(e.sampleCompositionTimeOffset)])]),ci=i=>C("mvex",void 0,i.map(ui)),ui=i=>S("trex",0,0,[f(i.track.id),f(1),f(0),f(0),f(0)]),yt=(i,e)=>C("moof",void 0,[mi(i),...e.map(di)]),mi=i=>S("mfhd",0,0,[f(i)]),jt=i=>{let e=0,t=0,r=0,s=0,n=i.type==="delta";return t|=+n,n?e|=1:e|=2,e<<24|t<<16|r<<8|s},di=i=>C("traf",void 0,[li(i),fi(i),hi(i)]),li=i=>{d(i.currentChunk);let e=0;e|=8,e|=16,e|=32,e|=131072;let t=i.currentChunk.samples[1]??i.currentChunk.samples[0],r={duration:t.timescaleUnitsToNextSample,size:t.size,flags:jt(t)};return S("tfhd",0,e,[f(i.track.id),f(r.duration),f(r.size),f(r.flags)])},fi=i=>(d(i.currentChunk),S("tfdt",1,0,[Y(V(i.currentChunk.startTimestamp,i.timescale))])),hi=i=>{d(i.currentChunk);let e=i.currentChunk.samples.map(g=>g.timescaleUnitsToNextSample),t=i.currentChunk.samples.map(g=>g.size),r=i.currentChunk.samples.map(jt),s=i.currentChunk.samples.map(g=>V(g.timestamp-g.decodeTimestamp,i.timescale)),n=new Set(e),a=new Set(t),c=new Set(r),o=new Set(s),u=c.size===2&&r[0]!==r[1],m=n.size>1,l=a.size>1,h=!u&&c.size>1,p=o.size>1||[...o].some(g=>g!==0),b=0;return b|=1,b|=4*+u,b|=256*+m,b|=512*+l,b|=1024*+h,b|=2048*+p,S("trun",1,b,[f(i.currentChunk.samples.length),f(i.currentChunk.offset-i.currentChunk.moofOffset||0),u?f(r[0]):[],i.currentChunk.samples.map((g,k)=>[m?f(e[k]):[],l?f(t[k]):[],h?f(r[k]):[],p?Lt(s[k]):[]])])},qt=i=>C("mfra",void 0,[...i.map(pi),bi()]),pi=(i,e)=>S("tfra",1,0,[f(i.track.id),f(63),f(i.finalizedChunks.length),i.finalizedChunks.map(r=>[Y(V(r.samples[0].timestamp,i.timescale)),Y(r.moofOffset),f(e+1),f(1),f(1)])]),bi=()=>S("mfro",0,0,[f(0)]),Xt=()=>C("vtte"),Gt=(i,e,t,r,s)=>C("vttc",void 0,[s!==null?C("vsid",[Lt(s)]):null,t!==null?C("iden",[...M.encode(t)]):null,e!==null?C("ctim",[...M.encode(Ve(e))]):null,r!==null?C("sttg",[...M.encode(r)]):null,C("payl",[...M.encode(i)])]),Yt=i=>C("vtta",[...M.encode(i)]),gi={avc:"avc1",hevc:"hvc1",vp8:"vp08",vp9:"vp09",av1:"av01"},ki={avc:qr,hevc:Xr,vp8:Nt,vp9:Nt,av1:Gr},Ti={aac:"mp4a",opus:"Opus"},xi={aac:Zr,opus:Jr},Ci={webvtt:"wvtt"},Si={webvtt:ti};var ae=class{output;mutex=new H;constructor(e){this.output=e}beforeTrackAdd(e){}onTrackClose(e){}trackTimestampInfo=new WeakMap;validateAndNormalizeTimestamp(e,t,r){let s=t/1e6,n=this.trackTimestampInfo.get(e);if(!n){if(!r)throw new Error("First frame must be a key frame.");if(this.timestampsMustStartAtZero&&s>0)throw new Error(`Timestamps must start at zero (got ${s}s).`);n={timestampOffset:s,maxTimestamp:e.source._offsetTimestamps?0:s,lastKeyFrameTimestamp:e.source._offsetTimestamps?0:s},this.trackTimestampInfo.set(e,n)}if(e.source._offsetTimestamps&&(s-=n.timestampOffset),s<0)throw new Error(`Timestamps must be non-negative (got ${s}s).`);if(s<n.lastKeyFrameTimestamp)throw new Error(`Timestamp cannot be smaller than last key frame's timestamp (got ${s}s, last key frame at ${n.lastKeyFrameTimestamp}s).`);if(r){if(s<n.maxTimestamp)throw new Error(`Key frame timestamps cannot be smaller than any timestamp that came before (got ${s}s, max timestamp was ${n.maxTimestamp}s).`);n.lastKeyFrameTimestamp=s}return n.maxTimestamp=Math.max(n.maxTimestamp,s),s}};var be=class{ensureMonotonicity=!1;start(){}},oe=class extends be{pos=0;target;buffer=new ArrayBuffer(2**16);bytes=new Uint8Array(this.buffer);maxPos=0;constructor(e){super(),this.target=e}ensureSize(e){let t=this.buffer.byteLength;for(;t<e;)t*=2;if(t===this.buffer.byteLength)return;let r=new ArrayBuffer(t),s=new Uint8Array(r);s.set(this.bytes,0),this.buffer=r,this.bytes=s}write(e){this.ensureSize(this.pos+e.byteLength),this.bytes.set(e,this.pos),this.pos+=e.byteLength,this.maxPos=Math.max(this.maxPos,this.pos)}seek(e){this.pos=e}getPos(){return this.pos}async flush(){}async finalize(){this.ensureSize(this.pos),this.target.buffer=this.buffer.slice(0,Math.max(this.maxPos,this.pos))}getSlice(e,t){return this.bytes.slice(e,t)}},ze=class extends be{pos=0;target;sections=[];lastFlushEnd=0;writer=null;constructor(e){super(),this.target=e}start(){this.writer=this.target._writable.getWriter()}write(e){this.sections.push({data:e.slice(),start:this.pos}),this.pos+=e.byteLength}seek(e){this.pos=e}getPos(){return this.pos}async flush(){if(d(this.writer),this.sections.length===0)return;let e=[],t=[...this.sections].sort((r,s)=>r.start-s.start);e.push({start:t[0].start,size:t[0].data.byteLength});for(let r=1;r<t.length;r++){let s=e[e.length-1],n=t[r];n.start<=s.start+s.size?s.size=Math.max(s.size,n.start+n.data.byteLength-s.start):e.push({start:n.start,size:n.data.byteLength})}for(let r of e){r.data=new Uint8Array(r.size);for(let s of this.sections)r.start<=s.start&&s.start<r.start+r.size&&r.data.set(s.data,s.start-r.start);if(this.ensureMonotonicity&&r.start!==this.lastFlushEnd)throw new Error("Internal error: Monotonicity violation.");this.writer.desiredSize!==null&&this.writer.desiredSize<=0&&await this.writer.ready,this.writer.write({type:"write",data:r.data,position:r.start}),this.lastFlushEnd=r.start+r.data.byteLength}this.sections.length=0}finalize(){return d(this.writer),this.writer.close()}},wi=2**24,yi=2,Ue=class extends be{pos=0;target;chunkSize;chunks=[];lastFlushEnd=0;writer=null;flushedChunkQueue=[];constructor(e){if(super(),this.target=e,this.chunkSize=e._options?.chunkSize??wi,!Number.isInteger(this.chunkSize)||this.chunkSize<2**10)throw new Error("Invalid StreamTarget options: chunkSize must be an integer not smaller than 1024.")}start(){this.writer=this.target._writable.getWriter()}write(e){this.writeDataIntoChunks(e,this.pos),this.queueChunksForFlush(),this.pos+=e.byteLength}seek(e){this.pos=e}getPos(){return this.pos}writeDataIntoChunks(e,t){let r=this.chunks.findIndex(o=>o.start<=t&&t<o.start+this.chunkSize);r===-1&&(r=this.createChunk(t));let s=this.chunks[r],n=t-s.start,a=e.subarray(0,Math.min(this.chunkSize-n,e.byteLength));s.data.set(a,n);let c={start:n,end:n+a.byteLength};if(this.insertSectionIntoChunk(s,c),s.written[0].start===0&&s.written[0].end===this.chunkSize&&(s.shouldFlush=!0),this.chunks.length>yi){for(let o=0;o<this.chunks.length-1;o++)this.chunks[o].shouldFlush=!0;this.queueChunksForFlush()}a.byteLength<e.byteLength&&this.writeDataIntoChunks(e.subarray(a.byteLength),t+a.byteLength)}insertSectionIntoChunk(e,t){let r=0,s=e.written.length-1,n=-1;for(;r<=s;){let a=Math.floor(r+(s-r+1)/2);e.written[a].start<=t.start?(r=a+1,n=a):s=a-1}for(e.written.splice(n+1,0,t),(n===-1||e.written[n].end<t.start)&&n++;n<e.written.length-1&&e.written[n].end>=e.written[n+1].start;)e.written[n].end=Math.max(e.written[n].end,e.written[n+1].end),e.written.splice(n+1,1)}createChunk(e){let r={start:Math.floor(e/this.chunkSize)*this.chunkSize,data:new Uint8Array(this.chunkSize),written:[],shouldFlush:!1};return this.chunks.push(r),this.chunks.sort((s,n)=>s.start-n.start),this.chunks.indexOf(r)}queueChunksForFlush(e=!1){d(this.writer);for(let t=0;t<this.chunks.length;t++){let r=this.chunks[t];if(!(!r.shouldFlush&&!e)){for(let s of r.written){if(this.ensureMonotonicity&&r.start+s.start!==this.lastFlushEnd)throw new Error("Internal error: Monotonicity violation.");this.flushedChunkQueue.push({type:"write",data:r.data.subarray(s.start,s.end),position:r.start+s.start}),this.lastFlushEnd=r.start+s.end}this.chunks.splice(t--,1)}}}async flush(){if(d(this.writer),this.flushedChunkQueue.length!==0){for(let e of this.flushedChunkQueue)this.writer.desiredSize!==null&&this.writer.desiredSize<=0&&await this.writer.ready,this.writer.write(e);this.flushedChunkQueue.length=0}}async finalize(){return d(this.writer),this.queueChunksForFlush(!0),await this.flush(),this.writer.close()}};var K=class{_output=null},ce=class extends K{buffer=null;_createWriter(){return new oe(this)}},Be=class extends K{_writable;_options;constructor(e,t={}){if(super(),!(e instanceof WritableStream))throw new TypeError("StreamTarget requires a WritableStream instance.");if(t!=null&&typeof t!="object")throw new TypeError("StreamTarget options, when provided, must be an object.");if(t.chunked!==void 0&&typeof t.chunked!="boolean")throw new TypeError("options.chunked, when provided, must be a boolean.");if(t.chunkSize!==void 0&&(!Number.isInteger(t.chunkSize)||t.chunkSize<=0))throw new TypeError("options.chunkSize, when provided, must be a positive integer.");this._writable=e,this._options=t}_createWriter(){return this._options.chunked?new Ue(this):new ze(this)}};var Z=["avc","hevc","vp8","vp9","av1"],J=["aac","opus"],ge=["webvtt"],Zt=[{maxMacroblocks:99,maxBitrate:64e3,level:10},{maxMacroblocks:396,maxBitrate:192e3,level:11},{maxMacroblocks:396,maxBitrate:384e3,level:12},{maxMacroblocks:396,maxBitrate:768e3,level:13},{maxMacroblocks:396,maxBitrate:2e6,level:20},{maxMacroblocks:792,maxBitrate:4e6,level:21},{maxMacroblocks:1620,maxBitrate:4e6,level:22},{maxMacroblocks:1620,maxBitrate:1e7,level:30},{maxMacroblocks:3600,maxBitrate:14e6,level:31},{maxMacroblocks:5120,maxBitrate:2e7,level:32},{maxMacroblocks:8192,maxBitrate:2e7,level:40},{maxMacroblocks:8192,maxBitrate:5e7,level:41},{maxMacroblocks:8704,maxBitrate:5e7,level:42},{maxMacroblocks:22080,maxBitrate:135e6,level:50},{maxMacroblocks:36864,maxBitrate:24e7,level:51},{maxMacroblocks:36864,maxBitrate:24e7,level:52},{maxMacroblocks:139264,maxBitrate:24e7,level:60},{maxMacroblocks:139264,maxBitrate:48e7,level:61},{maxMacroblocks:139264,maxBitrate:8e8,level:62}],Jt=[{maxPictureSize:36864,maxBitrate:128e3,tier:"L",level:30},{maxPictureSize:122880,maxBitrate:15e5,tier:"L",level:60},{maxPictureSize:245760,maxBitrate:3e6,tier:"L",level:63},{maxPictureSize:552960,maxBitrate:6e6,tier:"L",level:90},{maxPictureSize:983040,maxBitrate:1e7,tier:"L",level:93},{maxPictureSize:2228224,maxBitrate:12e6,tier:"L",level:120},{maxPictureSize:2228224,maxBitrate:3e7,tier:"H",level:120},{maxPictureSize:2228224,maxBitrate:2e7,tier:"L",level:123},{maxPictureSize:2228224,maxBitrate:5e7,tier:"H",level:123},{maxPictureSize:8912896,maxBitrate:25e6,tier:"L",level:150},{maxPictureSize:8912896,maxBitrate:1e8,tier:"H",level:150},{maxPictureSize:8912896,maxBitrate:4e7,tier:"L",level:153},{maxPictureSize:8912896,maxBitrate:16e7,tier:"H",level:153},{maxPictureSize:8912896,maxBitrate:6e7,tier:"L",level:156},{maxPictureSize:8912896,maxBitrate:24e7,tier:"H",level:156},{maxPictureSize:35651584,maxBitrate:6e7,tier:"L",level:180},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:180},{maxPictureSize:35651584,maxBitrate:12e7,tier:"L",level:183},{maxPictureSize:35651584,maxBitrate:48e7,tier:"H",level:183},{maxPictureSize:35651584,maxBitrate:24e7,tier:"L",level:186},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:186}],er=[{maxPictureSize:36864,maxBitrate:2e5,level:10},{maxPictureSize:73728,maxBitrate:8e5,level:11},{maxPictureSize:122880,maxBitrate:18e5,level:20},{maxPictureSize:245760,maxBitrate:36e5,level:21},{maxPictureSize:552960,maxBitrate:72e5,level:30},{maxPictureSize:983040,maxBitrate:12e6,level:31},{maxPictureSize:2228224,maxBitrate:18e6,level:40},{maxPictureSize:2228224,maxBitrate:3e7,level:41},{maxPictureSize:8912896,maxBitrate:6e7,level:50},{maxPictureSize:8912896,maxBitrate:12e7,level:51},{maxPictureSize:8912896,maxBitrate:18e7,level:52},{maxPictureSize:35651584,maxBitrate:18e7,level:60},{maxPictureSize:35651584,maxBitrate:24e7,level:61},{maxPictureSize:35651584,maxBitrate:48e7,level:62}],tr=[{maxPictureSize:147456,maxBitrate:15e5,tier:"M",level:0},{maxPictureSize:278784,maxBitrate:3e6,tier:"M",level:1},{maxPictureSize:665856,maxBitrate:6e6,tier:"M",level:4},{maxPictureSize:1065024,maxBitrate:1e7,tier:"M",level:5},{maxPictureSize:2359296,maxBitrate:12e6,tier:"M",level:8},{maxPictureSize:2359296,maxBitrate:3e7,tier:"H",level:8},{maxPictureSize:2359296,maxBitrate:2e7,tier:"M",level:9},{maxPictureSize:2359296,maxBitrate:5e7,tier:"H",level:9},{maxPictureSize:8912896,maxBitrate:3e7,tier:"M",level:12},{maxPictureSize:8912896,maxBitrate:1e8,tier:"H",level:12},{maxPictureSize:8912896,maxBitrate:4e7,tier:"M",level:13},{maxPictureSize:8912896,maxBitrate:16e7,tier:"H",level:13},{maxPictureSize:8912896,maxBitrate:6e7,tier:"M",level:14},{maxPictureSize:8912896,maxBitrate:24e7,tier:"H",level:14},{maxPictureSize:35651584,maxBitrate:6e7,tier:"M",level:15},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:15},{maxPictureSize:35651584,maxBitrate:6e7,tier:"M",level:16},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:16},{maxPictureSize:35651584,maxBitrate:1e8,tier:"M",level:17},{maxPictureSize:35651584,maxBitrate:48e7,tier:"H",level:17},{maxPictureSize:35651584,maxBitrate:16e7,tier:"M",level:18},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:18},{maxPictureSize:35651584,maxBitrate:16e7,tier:"M",level:19},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:19}],rr=(i,e,t,r)=>{if(i==="avc"){let n=Math.ceil(e/16)*Math.ceil(t/16),a=Zt.find(l=>n<=l.maxMacroblocks&&r<=l.maxBitrate)??A(Zt),c=a?a.level:0,o="64".padStart(2,"0"),u="00",m=c.toString(16).padStart(2,"0");return`avc1.${o}${u}${m}`}else if(i==="hevc"){let s="",a="6",c=e*t,o=Jt.find(m=>c<=m.maxPictureSize&&r<=m.maxBitrate)??A(Jt);return`hev1.${s}1.${a}.${o.tier}${o.level}.B0`}else{if(i==="vp8")return"vp8";if(i==="vp9"){let s="00",n=e*t,a=er.find(o=>n<=o.maxPictureSize&&r<=o.maxBitrate)??A(er);return`vp09.${s}.${a.level}.08`}else if(i==="av1"){let n=e*t,a=tr.find(o=>n<=o.maxPictureSize&&r<=o.maxBitrate)??A(tr);return`av01.0.${a.level.toString().padStart(2,"0")}${a.tier}.08`}}throw new TypeError(`Unhandled codec '${i}'.`)},ir=(i,e)=>{if(i==="avc"){if(!e||e.byteLength<4)throw new TypeError("AVC description must be at least 4 bytes long.");return`avc1.${Ut(e.subarray(1,4))}`}else if(i==="hevc"){if(!e)throw new TypeError("HEVC description must be provided.");let t=new DataView(e.buffer,e.byteOffset,e.byteLength),r="hev1.",s=e[1]>>6&3,n=e[1]&31;r+=["","A","B","C"][s]+n,r+=".";let a=Bt(t.getUint32(2));r+=a.toString(16),r+=".";let c=e[1]>>5&1,o=e[12];r+=c===0?"L":"H",r+=o,r+=".";let u=[];for(let m=0;m<6;m++){let l=e[m+13];u.push(l)}for(;u[u.length-1]===0;)u.pop();return r+=u.map(m=>m.toString(16)).join("."),r}throw new TypeError(`Unhandled codec '${i}'.`)},sr=(i,e,t)=>{if(i==="aac")return e>=2&&t<=24e3?"mp4a.40.29":t<=24e3?"mp4a.40.5":"mp4a.40.2";if(i==="opus")return"opus";if(i==="vorbis")return"vorbis";throw new TypeError(`Unhandled codec '${i}'.`)},nr=(i,e)=>{if(i==="aac")return`mp4a.40.${vt(e).objectType}`;if(i==="opus")return"opus";if(i==="vorbis")return"vorbis";throw new TypeError(`Unhandled codec '${i}'.`)},vt=i=>{if(!i||i.byteLength<2)throw new TypeError("AAC description must be at least 2 bytes long.");let e=0,t=O(i,e,e+5);e+=5,t===31&&(t=32+O(i,e,e+6),e+=6);let r=O(i,e,e+4);e+=4;let s=null;if(r===15)s=O(i,e,e+24),e+=24;else{let c=[96e3,88200,64e3,48e3,44100,32e3,24e3,22050,16e3,12e3,11025,8e3,7350];r<c.length&&(s=c[r])}let n=O(i,e,e+4);e+=4;let a=null;return n>=1&&n<=7&&(a={1:1,2:2,3:3,4:4,5:5,6:6,7:8}[n]),{objectType:t,frequencyIndex:r,sampleRate:s,channelConfiguration:n,numberOfChannels:a}},ar=i=>i==="avc"?{avc:{format:"avc"}}:i==="hevc"?{hevc:{format:"hevc"}}:{},or=i=>i==="aac"?{aac:{format:"aac"}}:i==="opus"?{opus:{format:"opus"}}:{},We=i=>{if(!i)throw new TypeError("Video chunk metadata must be provided.");if(typeof i!="object")throw new TypeError("Video chunk metadata must be an object.");if(!i.decoderConfig)throw new TypeError("Video chunk metadata must include a decoder configuration.");if(typeof i.decoderConfig!="object")throw new TypeError("Video chunk metadata decoder configuration must be an object.");if(typeof i.decoderConfig.codec!="string")throw new TypeError("Video chunk metadata decoder configuration must specify a codec string.");if(!Number.isInteger(i.decoderConfig.codedWidth)||i.decoderConfig.codedWidth<=0)throw new TypeError("Video chunk metadata decoder configuration must specify a valid codedWidth (positive integer).");if(!Number.isInteger(i.decoderConfig.codedHeight)||i.decoderConfig.codedHeight<=0)throw new TypeError("Video chunk metadata decoder configuration must specify a valid codedHeight (positive integer).");if(i.decoderConfig.description!==void 0&&!kt(i.decoderConfig.description))throw new TypeError("Video chunk metadata decoder configuration description, when defined, must be an ArrayBuffer or an ArrayBuffer view.");if(i.decoderConfig.colorSpace!==void 0){let{colorSpace:e}=i.decoderConfig;if(typeof e!="object")throw new TypeError("Video chunk metadata decoder configuration colorSpace, when provided, must be an object.");let t=Object.keys(q);if(e.primaries!=null&&!t.includes(e.primaries))throw new TypeError(`Video chunk metadata decoder configuration colorSpace primaries, when defined, must be one of ${t.join(", ")}.`);let r=Object.keys(X);if(e.transfer!=null&&!r.includes(e.transfer))throw new TypeError(`Video chunk metadata decoder configuration colorSpace transfer, when defined, must be one of ${r.join(", ")}.`);let s=Object.keys(G);if(e.matrix!=null&&!s.includes(e.matrix))throw new TypeError(`Video chunk metadata decoder configuration colorSpace matrix, when defined, must be one of ${s.join(", ")}.`);if(e.fullRange!=null&&typeof e.fullRange!="boolean")throw new TypeError("Video chunk metadata decoder configuration colorSpace fullRange, when defined, must be a boolean.")}if((i.decoderConfig.codec.startsWith("avc1")||i.decoderConfig.codec.startsWith("avc3"))&&!i.decoderConfig.description)throw new TypeError("Video chunk metadata decoder configuration for AVC must include a description, which is expected to be an AVCDecoderConfigurationRecord as specified in ISO 14496-15.");if((i.decoderConfig.codec.startsWith("hev1")||i.decoderConfig.codec.startsWith("hvc1"))&&!i.decoderConfig.description)throw new TypeError("Video chunk metadata decoder configuration for HEVC must include a description, which is expected to be an HEVCDecoderConfigurationRecord as specified in ISO 14496-15.");if((i.decoderConfig.codec==="vp8"||i.decoderConfig.codec.startsWith("vp09"))&&i.decoderConfig.colorSpace===void 0)throw new TypeError("Video chunk metadata decoder configuration for VP8/VP9 must include a colorSpace.")},Ne=i=>{if(!i)throw new TypeError("Audio chunk metadata must be provided.");if(typeof i!="object")throw new TypeError("Audio chunk metadata must be an object.");if(!i.decoderConfig)throw new TypeError("Audio chunk metadata must include a decoder configuration.");if(typeof i.decoderConfig!="object")throw new TypeError("Audio chunk metadata decoder configuration must be an object.");if(typeof i.decoderConfig.codec!="string")throw new TypeError("Audio chunk metadata decoder configuration must specify a codec string.");if(!Number.isInteger(i.decoderConfig.sampleRate)||i.decoderConfig.sampleRate<=0)throw new TypeError("Audio chunk metadata decoder configuration must specify a valid sampleRate (positive integer).");if(!Number.isInteger(i.decoderConfig.numberOfChannels)||i.decoderConfig.numberOfChannels<=0)throw new TypeError("Audio chunk metadata decoder configuration must specify a valid numberOfChannels (positive integer).");if(i.decoderConfig.description!==void 0&&!kt(i.decoderConfig.description))throw new TypeError("Audio chunk metadata decoder configuration description, when defined, must be an ArrayBuffer or an ArrayBuffer view.");if(i.decoderConfig.codec.startsWith("mp4a")&&!i.decoderConfig.description)throw new TypeError("Audio chunk metadata decoder configuration for AAC must include a description, which is expected to be an AudioSpecificConfig as specified in ISO 14496-3.");if(i.decoderConfig.codec==="opus"&&i.decoderConfig.description&&i.decoderConfig.description.byteLength<18)throw new TypeError("Invalid decoder description provided for Opus; must be at least 18 bytes long.")},He=i=>{if(!i)throw new TypeError("Subtitle metadata must be provided.");if(typeof i!="object")throw new TypeError("Subtitle metadata must be an object.");if(!i.config)throw new TypeError("Subtitle metadata must include a config object.");if(typeof i.config!="object")throw new TypeError("Subtitle metadata config must be an object.");if(typeof i.config.description!="string")throw new TypeError("Subtitle metadata config description must be a string.")};var De=1e3,vi=2082844800,V=(i,e,t=!0)=>{let r=i*e;return t?Math.round(r):r},Le=class extends ae{timestampsMustStartAtZero=!0;writer;boxWriter;fastStart;auxTarget=new ce;auxWriter=this.auxTarget._createWriter();auxBoxWriter=new he(this.auxWriter);ftypSize=null;mdat=null;trackDatas=[];creationTime=Math.floor(Date.now()/1e3)+vi;finalizedChunks=[];nextFragmentNumber=1;constructor(e,t){super(e),this.writer=e._writer,this.boxWriter=new he(this.writer);let r=this.writer instanceof oe?"in-memory":!1;this.fastStart=t._options.fastStart??r,(this.fastStart==="in-memory"||this.fastStart==="fragmented")&&(this.writer.ensureMonotonicity=!0)}async start(){let e=await this.mutex.acquire(),t=this.output._tracks.some(r=>r.type==="video"&&r.source._codec==="avc");this.boxWriter.writeBox(Qt({holdsAvc:t,fragmented:this.fastStart==="fragmented"})),this.ftypSize=this.writer.getPos(),this.fastStart==="in-memory"?this.mdat=Pe(!1):this.fastStart==="fragmented"||(this.mdat=Pe(!0),this.boxWriter.writeBox(this.mdat)),await this.writer.flush(),e()}getVideoTrackData(e,t){let r=this.trackDatas.find(n=>n.track===e);if(r)return r;We(t),d(t),d(t.decoderConfig),d(t.decoderConfig.codedWidth!==void 0),d(t.decoderConfig.codedHeight!==void 0);let s={track:e,type:"video",info:{width:t.decoderConfig.codedWidth,height:t.decoderConfig.codedHeight,decoderConfig:t.decoderConfig},timescale:e.metadata.frameRate??57600,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[]};return this.trackDatas.push(s),this.trackDatas.sort((n,a)=>n.track.id-a.track.id),s}getAudioTrackData(e,t){let r=this.trackDatas.find(n=>n.track===e);if(r)return r;Ne(t),d(t),d(t.decoderConfig);let s={track:e,type:"audio",info:{numberOfChannels:t.decoderConfig.numberOfChannels,sampleRate:t.decoderConfig.sampleRate,decoderConfig:t.decoderConfig},timescale:t.decoderConfig.sampleRate,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[]};return this.trackDatas.push(s),this.trackDatas.sort((n,a)=>n.track.id-a.track.id),s}getSubtitleTrackData(e,t){let r=this.trackDatas.find(n=>n.track===e);if(r)return r;He(t),d(t),d(t.config);let s={track:e,type:"subtitle",info:{config:t.config},timescale:1e3,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[],lastCueEndTimestamp:0,cueQueue:[],nextSourceId:0,cueToSourceId:new WeakMap};return this.trackDatas.push(s),this.trackDatas.sort((n,a)=>n.track.id-a.track.id),this.validateAndNormalizeTimestamp(e,0,!0),s}async addEncodedVideoChunk(e,t,r){let s=await this.mutex.acquire();try{let n=this.getVideoTrackData(e,r),a=new Uint8Array(t.byteLength);t.copyTo(a);let c=this.validateAndNormalizeTimestamp(n.track,t.timestamp,t.type==="key"),o=this.createSampleForTrack(n,a,c,(t.duration??0)/1e6,t.type);await this.registerSample(n,o)}finally{s()}}async addEncodedAudioChunk(e,t,r){let s=await this.mutex.acquire();try{let n=this.getAudioTrackData(e,r),a=new Uint8Array(t.byteLength);t.copyTo(a);let c=t.type,o=this.validateAndNormalizeTimestamp(n.track,t.timestamp,c==="key"),u=this.createSampleForTrack(n,a,o,(t.duration??0)/1e6,c);await this.registerSample(n,u)}finally{s()}}async addSubtitleCue(e,t,r){let s=await this.mutex.acquire();try{let n=this.getSubtitleTrackData(e,r);this.validateAndNormalizeTimestamp(n.track,1e6*t.timestamp,!0),e.source._codec==="webvtt"&&(n.cueQueue.push(t),await this.processWebVTTCues(n,t.timestamp))}finally{s()}}async processWebVTTCues(e,t){for(;e.cueQueue.length>0;){let r=new Set([]);for(let u of e.cueQueue)d(u.timestamp<=t),d(e.lastCueEndTimestamp<=u.timestamp+u.duration),r.add(Math.max(u.timestamp,e.lastCueEndTimestamp)),r.add(u.timestamp+u.duration);let s=[...r].sort((u,m)=>u-m),n=s[0],a=s[1]??n;if(t<a)break;if(e.lastCueEndTimestamp<n){this.auxWriter.seek(0);let u=Xt();this.auxBoxWriter.writeBox(u);let m=this.auxWriter.getSlice(0,this.auxWriter.getPos()),l=this.createSampleForTrack(e,m,e.lastCueEndTimestamp,n-e.lastCueEndTimestamp,"key");await this.registerSample(e,l),e.lastCueEndTimestamp=n}this.auxWriter.seek(0);for(let u=0;u<e.cueQueue.length;u++){let m=e.cueQueue[u];if(m.timestamp>=a)break;ne.lastIndex=0;let l=ne.test(m.text),h=m.timestamp+m.duration,p=e.cueToSourceId.get(m);if(p===void 0&&a<h&&(p=e.nextSourceId++,e.cueToSourceId.set(m,p)),m.notes){let g=Yt(m.notes);this.auxBoxWriter.writeBox(g)}let b=Gt(m.text,l?n:null,m.identifier??null,m.settings??null,p??null);this.auxBoxWriter.writeBox(b),h===a&&e.cueQueue.splice(u--,1)}let c=this.auxWriter.getSlice(0,this.auxWriter.getPos()),o=this.createSampleForTrack(e,c,n,a-n,"key");await this.registerSample(e,o),e.lastCueEndTimestamp=a}}createSampleForTrack(e,t,r,s,n){return{timestamp:r,decodeTimestamp:r,duration:s,data:t,size:t.byteLength,type:n,timescaleUnitsToNextSample:V(s,e.timescale)}}processTimestamps(e){if(e.timestampProcessingQueue.length===0)return;let t=e.timestampProcessingQueue.map(r=>r.timestamp).sort((r,s)=>r-s);for(let r=0;r<e.timestampProcessingQueue.length;r++){let s=e.timestampProcessingQueue[r];s.decodeTimestamp=t[r];let n=V(s.timestamp-s.decodeTimestamp,e.timescale),a=V(s.duration,e.timescale);if(e.lastTimescaleUnits!==null){d(e.lastSample);let c=V(s.decodeTimestamp,e.timescale,!1),o=Math.round(c-e.lastTimescaleUnits);if(e.lastTimescaleUnits+=o,e.lastSample.timescaleUnitsToNextSample=o,this.fastStart!=="fragmented"){let u=A(e.timeToSampleTable);if(d(u),u.sampleCount===1){u.sampleDelta=o;let l=e.timeToSampleTable[e.timeToSampleTable.length-2];l&&l.sampleDelta===o&&(l.sampleCount++,e.timeToSampleTable.pop(),u=l)}else u.sampleDelta!==o&&(u.sampleCount--,e.timeToSampleTable.push(u={sampleCount:1,sampleDelta:o}));u.sampleDelta===a?u.sampleCount++:e.timeToSampleTable.push({sampleCount:1,sampleDelta:a});let m=A(e.compositionTimeOffsetTable);d(m),m.sampleCompositionTimeOffset===n?m.sampleCount++:e.compositionTimeOffsetTable.push({sampleCount:1,sampleCompositionTimeOffset:n})}}else e.lastTimescaleUnits=0,this.fastStart!=="fragmented"&&(e.timeToSampleTable.push({sampleCount:1,sampleDelta:a}),e.compositionTimeOffsetTable.push({sampleCount:1,sampleCompositionTimeOffset:n}));e.lastSample=s}e.timestampProcessingQueue.length=0}async registerSample(e,t){this.fastStart==="fragmented"?(e.sampleQueue.push(t),await this.interleaveSamples()):await this.addSampleToTrack(e,t)}async addSampleToTrack(e,t){t.type==="key"&&this.processTimestamps(e),this.fastStart!=="fragmented"&&e.samples.push(t);let r=!1;if(!e.currentChunk)r=!0;else{let s=t.timestamp-e.currentChunk.startTimestamp;if(this.fastStart==="fragmented"){let n=this.trackDatas.every(a=>{if(e===a)return t.type==="key";let c=a.sampleQueue[0];return c&&c.type==="key"});s>=1&&n&&(r=!0,await this.finalizeFragment())}else r=s>=.5}r&&(e.currentChunk&&await this.finalizeCurrentChunk(e),e.currentChunk={startTimestamp:t.timestamp,samples:[],offset:null,moofOffset:null}),d(e.currentChunk),e.currentChunk.samples.push(t),e.timestampProcessingQueue.push(t)}async finalizeCurrentChunk(e){if(d(this.fastStart!=="fragmented"),!!e.currentChunk){if(e.finalizedChunks.push(e.currentChunk),this.finalizedChunks.push(e.currentChunk),(e.compactlyCodedChunkTable.length===0||A(e.compactlyCodedChunkTable).samplesPerChunk!==e.currentChunk.samples.length)&&e.compactlyCodedChunkTable.push({firstChunk:e.finalizedChunks.length,samplesPerChunk:e.currentChunk.samples.length}),this.fastStart==="in-memory"){e.currentChunk.offset=0;return}e.currentChunk.offset=this.writer.getPos();for(let t of e.currentChunk.samples)d(t.data),this.writer.write(t.data),t.data=null;await this.writer.flush()}}async interleaveSamples(){d(this.fastStart==="fragmented");for(let e of this.output._tracks)if(!e.source._closed&&!this.trackDatas.some(t=>t.track===e))return;e:for(;;){let e=null,t=1/0;for(let s of this.trackDatas){if(s.sampleQueue.length===0&&!s.track.source._closed)break e;s.sampleQueue.length>0&&s.sampleQueue[0].timestamp<t&&(e=s,t=s.sampleQueue[0].timestamp)}if(!e)break;let r=e.sampleQueue.shift();await this.addSampleToTrack(e,r)}}async finalizeFragment(e=!0){d(this.fastStart==="fragmented");let t=this.nextFragmentNumber++;if(t===1){let o=pe(this.trackDatas,this.creationTime,!0);this.boxWriter.writeBox(o)}let r=this.trackDatas.filter(o=>o.currentChunk),s=this.writer.getPos(),n=yt(t,r);this.boxWriter.writeBox(n);{let o=Pe(!1),u=0;for(let l of r)for(let h of l.currentChunk.samples)u+=h.size;let m=this.boxWriter.measureBox(o)+u;m>=2**32&&(o.largeSize=!0,m=this.boxWriter.measureBox(o)+u),o.size=m,this.boxWriter.writeBox(o)}for(let o of r){o.currentChunk.offset=this.writer.getPos(),o.currentChunk.moofOffset=s;for(let u of o.currentChunk.samples)this.writer.write(u.data),u.data=null}let a=this.writer.getPos();this.writer.seek(this.boxWriter.offsets.get(n));let c=yt(t,r);this.boxWriter.writeBox(c),this.writer.seek(a);for(let o of r)o.finalizedChunks.push(o.currentChunk),this.finalizedChunks.push(o.currentChunk),o.currentChunk=null;e&&await this.writer.flush()}async onTrackClose(e){let t=await this.mutex.acquire();if(e.type==="subtitle"&&e.source._codec==="webvtt"){let r=this.trackDatas.find(s=>s.track===e);r&&await this.processWebVTTCues(r,1/0)}this.fastStart==="fragmented"&&await this.interleaveSamples(),t()}async finalize(){let e=await this.mutex.acquire();for(let t of this.trackDatas)t.type==="subtitle"&&t.track.source._codec==="webvtt"&&await this.processWebVTTCues(t,1/0);if(this.fastStart==="fragmented"){for(let t of this.trackDatas){for(let r of t.sampleQueue)await this.addSampleToTrack(t,r);this.processTimestamps(t)}await this.finalizeFragment(!1)}else for(let t of this.trackDatas)this.processTimestamps(t),await this.finalizeCurrentChunk(t);if(this.fastStart==="in-memory"){d(this.mdat);let t;for(let s=0;s<2;s++){let n=pe(this.trackDatas,this.creationTime),a=this.boxWriter.measureBox(n);t=this.boxWriter.measureBox(this.mdat);let c=this.writer.getPos()+a+t;for(let o of this.finalizedChunks){o.offset=c;for(let{data:u}of o.samples)d(u),c+=u.byteLength,t+=u.byteLength}if(c<2**32)break;t>=2**32&&(this.mdat.largeSize=!0)}let r=pe(this.trackDatas,this.creationTime);this.boxWriter.writeBox(r),this.mdat.size=t,this.boxWriter.writeBox(this.mdat);for(let s of this.finalizedChunks)for(let n of s.samples)d(n.data),this.writer.write(n.data),n.data=null}else if(this.fastStart==="fragmented"){let t=this.writer.getPos(),r=qt(this.trackDatas);this.boxWriter.writeBox(r);let s=this.writer.getPos()-t;this.writer.seek(this.writer.getPos()-4),this.boxWriter.writeU32(s)}else{d(this.mdat),d(this.ftypSize!==null);let t=this.boxWriter.offsets.get(this.mdat);d(t!==void 0);let r=this.writer.getPos()-t;this.mdat.size=r,this.mdat.largeSize=r>=2**32,this.boxWriter.patchBox(this.mdat);let s=pe(this.trackDatas,this.creationTime);if(typeof this.fastStart=="object"){this.writer.seek(this.ftypSize),this.boxWriter.writeBox(s);let n=t-this.writer.getPos();this.boxWriter.writeBox($t(n))}else this.boxWriter.writeBox(s)}e()}};var ke=class{value;constructor(e){this.value=e}},ue=class{value;constructor(e){this.value=e}},Te=class{value;constructor(e){this.value=e}};var Rt=i=>i<256?1:i<65536?2:i<1<<24?3:i<2**32?4:i<2**40?5:6,It=i=>i>=-64&&i<64?1:i>=-8192&&i<8192?2:i>=-(1<<20)&&i<1<<20?3:i>=-(1<<27)&&i<1<<27?4:i>=-(2**34)&&i<2**34?5:6,cr=i=>{if(i<127)return 1;if(i<16383)return 2;if(i<(1<<21)-1)return 3;if(i<(1<<28)-1)return 4;if(i<2**35-1)return 5;if(i<2**42-1)return 6;throw new Error("EBML VINT size not supported "+i)};var At=2**15,ur="https://github.com/Vanilagy/webm-muxer",mr=6,dr=5,Ri={avc:"V_MPEG4/ISO/AVC",hevc:"V_MPEGH/ISO/HEVC",vp8:"V_VP8",vp9:"V_VP9",av1:"V_AV1",aac:"A_AAC",opus:"A_OPUS",webvtt:"S_TEXT/WEBVTT"},Ii={video:1,audio:2,subtitle:17},Ke=class extends ae{timestampsMustStartAtZero=!1;writer;format;helper=new Uint8Array(8);helperView=new DataView(this.helper.buffer);offsets=new WeakMap;dataOffsets=new WeakMap;trackDatas=[];segment=null;segmentInfo=null;seekHead=null;tracksElement=null;segmentDuration=null;cues=null;currentCluster=null;currentClusterMsTimestamp=null;trackDatasInCurrentCluster=new Set;duration=0;constructor(e,t){super(e),this.writer=e._writer,this.format=t,this.format._options.streamable&&(this.writer.ensureMonotonicity=!0)}writeByte(e){this.helperView.setUint8(0,e),this.writer.write(this.helper.subarray(0,1))}writeFloat32(e){this.helperView.setFloat32(0,e,!1),this.writer.write(this.helper.subarray(0,4))}writeFloat64(e){this.helperView.setFloat64(0,e,!1),this.writer.write(this.helper)}writeUnsignedInt(e,t=Rt(e)){let r=0;switch(t){case 6:this.helperView.setUint8(r++,e/2**40|0);case 5:this.helperView.setUint8(r++,e/2**32|0);case 4:this.helperView.setUint8(r++,e>>24);case 3:this.helperView.setUint8(r++,e>>16);case 2:this.helperView.setUint8(r++,e>>8);case 1:this.helperView.setUint8(r++,e);break;default:throw new Error("Bad UINT size "+t)}this.writer.write(this.helper.subarray(0,r))}writeSignedInt(e,t=It(e)){e<0&&(e+=2**(t*8)),this.writeUnsignedInt(e,t)}writeEBMLVarInt(e,t=cr(e)){let r=0;switch(t){case 1:this.helperView.setUint8(r++,128|e);break;case 2:this.helperView.setUint8(r++,64|e>>8),this.helperView.setUint8(r++,e);break;case 3:this.helperView.setUint8(r++,32|e>>16),this.helperView.setUint8(r++,e>>8),this.helperView.setUint8(r++,e);break;case 4:this.helperView.setUint8(r++,16|e>>24),this.helperView.setUint8(r++,e>>16),this.helperView.setUint8(r++,e>>8),this.helperView.setUint8(r++,e);break;case 5:this.helperView.setUint8(r++,8|e/2**32&7),this.helperView.setUint8(r++,e>>24),this.helperView.setUint8(r++,e>>16),this.helperView.setUint8(r++,e>>8),this.helperView.setUint8(r++,e);break;case 6:this.helperView.setUint8(r++,4|e/2**40&3),this.helperView.setUint8(r++,e/2**32|0),this.helperView.setUint8(r++,e>>24),this.helperView.setUint8(r++,e>>16),this.helperView.setUint8(r++,e>>8),this.helperView.setUint8(r++,e);break;default:throw new Error("Bad EBML VINT size "+t)}this.writer.write(this.helper.subarray(0,r))}writeString(e){this.writer.write(new Uint8Array(e.split("").map(t=>t.charCodeAt(0))))}writeEBML(e){if(e!==null){if(e instanceof Uint8Array)this.writer.write(e);else if(Array.isArray(e))for(let t of e)this.writeEBML(t);else if(this.offsets.set(e,this.writer.getPos()),this.writeUnsignedInt(e.id),Array.isArray(e.data)){let t=this.writer.getPos(),r=e.size===-1?1:e.size??4;e.size===-1?this.writeByte(255):this.writer.seek(this.writer.getPos()+r);let s=this.writer.getPos();if(this.dataOffsets.set(e,s),this.writeEBML(e.data),e.size!==-1){let n=this.writer.getPos()-s,a=this.writer.getPos();this.writer.seek(t),this.writeEBMLVarInt(n,r),this.writer.seek(a)}}else if(typeof e.data=="number"){let t=e.size??Rt(e.data);this.writeEBMLVarInt(t),this.writeUnsignedInt(e.data,t)}else if(typeof e.data=="string")this.writeEBMLVarInt(e.data.length),this.writeString(e.data);else if(e.data instanceof Uint8Array)this.writeEBMLVarInt(e.data.byteLength,e.size),this.writer.write(e.data);else if(e.data instanceof ke)this.writeEBMLVarInt(4),this.writeFloat32(e.data.value);else if(e.data instanceof ue)this.writeEBMLVarInt(8),this.writeFloat64(e.data.value);else if(e.data instanceof Te){let t=e.size??It(e.data.value);this.writeEBMLVarInt(t),this.writeSignedInt(e.data.value,t)}}}beforeTrackAdd(e){if(this.format instanceof ee)if(e.type==="video"){if(!["vp8","vp9","av1"].includes(e.source._codec))throw new Error("WebM only supports VP8, VP9 and AV1 as video codecs. Switching to MKV removes this restriction.")}else if(e.type==="audio"){if(!["opus","vorbis"].includes(e.source._codec))throw new Error("WebM only supports Opus and Vorbis as audio codecs. Switching to MKV removes this restriction.")}else if(e.type==="subtitle"){if(e.source._codec!=="webvtt")throw new Error("WebM only supports WebVTT as subtitle codec. Switching to MKV removes this restriction.")}else throw new Error("WebM only supports video, audio and subtitle tracks. Switching to MKV removes this restriction.")}async start(){let e=await this.mutex.acquire();this.writeEBMLHeader(),this.format._options.streamable||this.createSeekHead(),this.createSegmentInfo(),this.createCues(),await this.writer.flush(),e()}writeEBMLHeader(){let e={id:440786851,data:[{id:17030,data:1},{id:17143,data:1},{id:17138,data:4},{id:17139,data:8},{id:17026,data:this.format instanceof ee?"webm":"matroska"},{id:17031,data:2},{id:17029,data:2}]};this.writeEBML(e)}createSeekHead(){let e=new Uint8Array([28,83,187,107]),t=new Uint8Array([21,73,169,102]),r=new Uint8Array([22,84,174,107]),s={id:290298740,data:[{id:19899,data:[{id:21419,data:e},{id:21420,size:5,data:0}]},{id:19899,data:[{id:21419,data:t},{id:21420,size:5,data:0}]},{id:19899,data:[{id:21419,data:r},{id:21420,size:5,data:0}]}]};this.seekHead=s}createSegmentInfo(){let e={id:17545,data:new ue(0)};this.segmentDuration=e;let t={id:357149030,data:[{id:2807729,data:1e6},{id:19840,data:ur},{id:22337,data:ur},this.format._options.streamable?null:e]};this.segmentInfo=t}createTracks(){let e={id:374648427,data:[]};this.tracksElement=e;for(let t of this.trackDatas)e.data.push({id:174,data:[{id:215,data:t.track.id},{id:29637,data:t.track.id},{id:131,data:Ii[t.type]},{id:134,data:Ri[t.track.source._codec]},t.type==="video"?this.videoSpecificTrackInfo(t):null,t.type==="audio"?this.audioSpecificTrackInfo(t):null,t.type==="subtitle"?this.subtitleSpecificTrackInfo(t):null]})}videoSpecificTrackInfo(e){let t=[e.info.decoderConfig.description?{id:25506,data:j(e.info.decoderConfig.description)}:null,e.track.metadata.frameRate?{id:2352003,data:1e9/e.track.metadata.frameRate}:null],r=e.info.decoderConfig.colorSpace,s={id:224,data:[{id:176,data:e.info.width},{id:186,data:e.info.height},Ee(r)?{id:21936,data:[{id:21937,data:G[r.matrix]},{id:21946,data:X[r.transfer]},{id:21947,data:q[r.primaries]},{id:21945,data:r.fullRange?2:1}]}:null]};return t.push(s),t}audioSpecificTrackInfo(e){return[e.info.decoderConfig.description?{id:25506,data:j(e.info.decoderConfig.description)}:null,{id:225,data:[{id:181,data:new ke(e.info.sampleRate)},{id:159,data:e.info.numberOfChannels}]}]}subtitleSpecificTrackInfo(e){return[{id:25506,data:M.encode(e.info.config.description)}]}createSegment(){let e={id:408125543,size:this.format._options.streamable?-1:mr,data:[this.format._options.streamable?null:this.seekHead,this.segmentInfo,this.tracksElement]};this.segment=e,this.writeEBML(e)}createCues(){this.cues={id:475249515,data:[]}}get segmentDataOffset(){return d(this.segment),this.dataOffsets.get(this.segment)}getVideoTrackData(e,t){let r=this.trackDatas.find(n=>n.track===e);if(r)return r;We(t),d(t),d(t.decoderConfig),d(t.decoderConfig.codedWidth!==void 0),d(t.decoderConfig.codedHeight!==void 0);let s={track:e,type:"video",info:{width:t.decoderConfig.codedWidth,height:t.decoderConfig.codedHeight,decoderConfig:t.decoderConfig},chunkQueue:[],lastWrittenMsTimestamp:null};return this.trackDatas.push(s),this.trackDatas.sort((n,a)=>n.track.id-a.track.id),s}getAudioTrackData(e,t){let r=this.trackDatas.find(n=>n.track===e);if(r)return r;Ne(t),d(t),d(t.decoderConfig);let s={track:e,type:"audio",info:{numberOfChannels:t.decoderConfig.numberOfChannels,sampleRate:t.decoderConfig.sampleRate,decoderConfig:t.decoderConfig},chunkQueue:[],lastWrittenMsTimestamp:null};return this.trackDatas.push(s),this.trackDatas.sort((n,a)=>n.track.id-a.track.id),s}getSubtitleTrackData(e,t){let r=this.trackDatas.find(n=>n.track===e);if(r)return r;He(t),d(t),d(t.config);let s={track:e,type:"subtitle",info:{config:t.config},chunkQueue:[],lastWrittenMsTimestamp:null};return this.trackDatas.push(s),this.trackDatas.sort((n,a)=>n.track.id-a.track.id),s}async addEncodedVideoChunk(e,t,r){let s=await this.mutex.acquire();try{let n=this.getVideoTrackData(e,r),a=new Uint8Array(t.byteLength);t.copyTo(a);let c=t.type==="key",o=this.validateAndNormalizeTimestamp(n.track,t.timestamp,c),u=this.createInternalChunk(a,o,(t.duration??0)/1e6,t.type);e.source._codec==="vp9"&&this.fixVP9ColorSpace(n,u),n.chunkQueue.push(u),await this.interleaveChunks()}finally{s()}}async addEncodedAudioChunk(e,t,r){let s=await this.mutex.acquire();try{let n=this.getAudioTrackData(e,r),a=new Uint8Array(t.byteLength);t.copyTo(a);let c=t.type,o=c==="key",u=this.validateAndNormalizeTimestamp(n.track,t.timestamp,o),m=this.createInternalChunk(a,u,(t.duration??0)/1e6,c);n.chunkQueue.push(m),await this.interleaveChunks()}finally{s()}}async addSubtitleCue(e,t,r){let s=await this.mutex.acquire();try{let n=this.getSubtitleTrackData(e,r),a=this.validateAndNormalizeTimestamp(n.track,1e6*t.timestamp,!0),c=t.text,o=Math.floor(a*1e3);ne.lastIndex=0,c=c.replace(ne,h=>{let b=Me(h.slice(1,-1))-o;return`<${Ve(b)}>`});let u=M.encode(c),m=`${t.settings??""}
${t.identifier??""}
${t.notes??""}`,l=this.createInternalChunk(u,a,t.duration,"key",m.trim()?M.encode(m):null);n.chunkQueue.push(l),await this.interleaveChunks()}finally{s()}}async interleaveChunks(){for(let e of this.output._tracks)if(!e.source._closed&&!this.trackDatas.some(t=>t.track===e))return;e:for(;;){let e=null,t=1/0;for(let s of this.trackDatas){if(s.chunkQueue.length===0&&!s.track.source._closed)break e;s.chunkQueue.length>0&&s.chunkQueue[0].timestamp<t&&(e=s,t=s.chunkQueue[0].timestamp)}if(!e)break;let r=e.chunkQueue.shift();this.writeBlock(e,r)}await this.writer.flush()}fixVP9ColorSpace(e,t){if(t.type!=="key"||!e.info.decoderConfig.colorSpace||!e.info.decoderConfig.colorSpace.matrix)return;let r=0;if(O(t.data,0,2)!==2)return;r+=2;let s=(O(t.data,r+1,r+2)<<1)+O(t.data,r+0,r+1);r+=2,s===3&&r++;let n=O(t.data,r+0,r+1);if(r++,n)return;let a=O(t.data,r+0,r+1);if(r++,a!==0)return;r+=2;let c=O(t.data,r+0,r+24);if(r+=24,c!==4817730)return;s>=2&&r++;let o={rgb:7,bt709:2,bt470bg:1,smpte170m:3}[e.info.decoderConfig.colorSpace.matrix];Vt(t.data,r+0,r+3,o)}createInternalChunk(e,t,r,s,n=null){return{data:e,type:s,timestamp:t,duration:r,additions:n}}writeBlock(e,t){this.segment||(this.createTracks(),this.createSegment());let r=Math.floor(1e3*t.timestamp),s=this.trackDatas.every(m=>{if(m.track.source._closed)return!0;if(e===m)return t.type==="key";let l=m.chunkQueue[0];return l&&l.type==="key"});(!this.currentCluster||s&&r-this.currentClusterMsTimestamp>=1e3)&&this.createNewCluster(r);let n=r-this.currentClusterMsTimestamp;if(n<0)return;if(n>=At)throw new Error(`Current Matroska cluster exceeded its maximum allowed length of ${At} milliseconds. In order to produce a correct WebM file, you must pass in a key frame at least every ${At} milliseconds.`);let c=new Uint8Array(4),o=new DataView(c.buffer);o.setUint8(0,128|e.track.id),o.setInt16(1,n,!1);let u=Math.floor(1e3*t.duration);if(u===0&&!t.additions){o.setUint8(3,+(t.type==="key")<<7);let m={id:163,data:[c,t.data]};this.writeEBML(m)}else{let m={id:160,data:[{id:161,data:[c,t.data]},t.type==="delta"?{id:251,data:new Te(e.lastWrittenMsTimestamp-r)}:null,t.additions?{id:30113,data:[{id:166,data:[{id:165,data:t.additions},{id:238,data:1}]}]}:null,u>0?{id:155,data:u}:null]};this.writeEBML(m)}this.duration=Math.max(this.duration,r+u),e.lastWrittenMsTimestamp=r,this.trackDatasInCurrentCluster.add(e)}createNewCluster(e){this.currentCluster&&!this.format._options.streamable&&this.finalizeCurrentCluster(),this.currentCluster={id:524531317,size:this.format._options.streamable?-1:dr,data:[{id:231,data:e}]},this.writeEBML(this.currentCluster),this.currentClusterMsTimestamp=e,this.trackDatasInCurrentCluster.clear()}finalizeCurrentCluster(){d(this.currentCluster);let e=this.writer.getPos()-this.dataOffsets.get(this.currentCluster),t=this.writer.getPos();this.writer.seek(this.offsets.get(this.currentCluster)+4),this.writeEBMLVarInt(e,dr),this.writer.seek(t);let r=this.offsets.get(this.currentCluster)-this.segmentDataOffset;d(this.cues),this.cues.data.push({id:187,data:[{id:179,data:this.currentClusterMsTimestamp},...[...this.trackDatasInCurrentCluster].map(s=>({id:183,data:[{id:247,data:s.track.id},{id:241,data:r}]}))]})}async onTrackClose(){let e=await this.mutex.acquire();await this.interleaveChunks(),e()}async finalize(){let e=await this.mutex.acquire();this.segment||(this.createTracks(),this.createSegment());for(let t of this.trackDatas)for(;t.chunkQueue.length>0;)this.writeBlock(t,t.chunkQueue.shift());if(!this.format._options.streamable&&this.currentCluster&&this.finalizeCurrentCluster(),d(this.cues),this.writeEBML(this.cues),!this.format._options.streamable){let t=this.writer.getPos(),r=this.writer.getPos()-this.segmentDataOffset;this.writer.seek(this.offsets.get(this.segment)+4),this.writeEBMLVarInt(r,mr),this.segmentDuration.data=new ue(this.duration),this.writer.seek(this.offsets.get(this.segmentDuration)),this.writeEBML(this.segmentDuration),this.seekHead.data[0].data[1].data=this.offsets.get(this.cues)-this.segmentDataOffset,this.seekHead.data[1].data[1].data=this.offsets.get(this.segmentInfo)-this.segmentDataOffset,this.seekHead.data[2].data[1].data=this.offsets.get(this.tracksElement)-this.segmentDataOffset,this.writer.seek(this.offsets.get(this.seekHead)),this.writeEBML(this.seekHead),this.writer.seek(t)}e()}};var Q=class{},Qe=class extends Q{_options;constructor(e={}){if(!e||typeof e!="object")throw new TypeError("options must be an object.");if(e.fastStart!==void 0&&![!1,"in-memory","fragmented"].includes(e.fastStart))throw new TypeError('options.fastStart, when provided, must be false, "in-memory", or "fragmented".');super(),this._options=e}_createMuxer(e){return new Le(e,this)}},xe=class extends Q{_options;constructor(e={}){if(!e||typeof e!="object")throw new TypeError("options must be an object.");if(e.streamable!==void 0&&typeof e.streamable!="boolean")throw new TypeError("options.streamable, when provided, must be a boolean.");super(),this._options=e}_createMuxer(e){return new Ke(e,this)}},ee=class extends xe{};var te=class{_connectedTrack=null;_closed=!1;_offsetTimestamps=!1;_ensureValidDigest(){if(!this._connectedTrack)throw new Error("Cannot call digest without connecting the source to an output track.");if(!this._connectedTrack.output._started)throw new Error("Cannot call digest before output has been started.");if(this._connectedTrack.output._finalizing)throw new Error("Cannot call digest after output has started finalizing.");if(this._closed)throw new Error("Cannot call digest after source has been closed.")}_start(){}async _flush(){}close(){if(this._closed)throw new Error("Source already closed.");if(!this._connectedTrack)throw new Error("Cannot call close without connecting the source to an output track.");if(!this._connectedTrack.output._started)throw new Error("Cannot call close before output has been started.");this._closed=!0,!this._connectedTrack.output._finalizing&&this._connectedTrack.output._muxer.onTrackClose(this._connectedTrack)}},U=class extends te{_connectedTrack=null;_codec;constructor(e){if(super(),!Z.includes(e))throw new TypeError(`Invalid video codec '${e}'. Must be one of: ${Z.join(", ")}.`);this._codec=e}},$e=class extends U{constructor(e){super(e)}digest(e,t){if(!(e instanceof EncodedVideoChunk))throw new TypeError("chunk must be an EncodedVideoChunk.");return this._ensureValidDigest(),this._connectedTrack.output._muxer.addEncodedVideoChunk(this._connectedTrack,e,t)}},Ai=5,Oi=i=>{if(!i||typeof i!="object")throw new TypeError("Codec config must be an object.");if(!Z.includes(i.codec))throw new TypeError(`Invalid video codec '${i.codec}'. Must be one of: ${Z.join(", ")}.`);if(!Number.isInteger(i.bitrate)||i.bitrate<=0)throw new TypeError("config.bitrate must be a positive integer.");if(i.latencyMode!==void 0&&!["quality","realtime"].includes(i.latencyMode))throw new TypeError("config.latencyMode, when provided, must be 'quality' or 'realtime'.")},Ce=class{constructor(e,t){this.source=e;this.codecConfig=t;Oi(t)}encoder=null;muxer=null;lastMultipleOfKeyFrameInterval=-1;lastWidth=null;lastHeight=null;async digest(e){if(this.source._ensureValidDigest(),this.lastWidth!==null&&this.lastHeight!==null){if(e.codedWidth!==this.lastWidth||e.codedHeight!==this.lastHeight)throw new Error(`Video frame size must remain constant. Expected ${this.lastWidth}x${this.lastHeight}, got ${e.codedWidth}x${e.codedHeight}.`)}else this.lastWidth=e.codedWidth,this.lastHeight=e.codedHeight;this.ensureEncoder(e),d(this.encoder);let t=Math.floor(e.timestamp/1e6/Ai);this.encoder.encode(e,{keyFrame:t!==this.lastMultipleOfKeyFrameInterval}),this.lastMultipleOfKeyFrameInterval=t,this.encoder.encodeQueueSize>=4&&await new Promise(r=>this.encoder.addEventListener("dequeue",r,{once:!0})),await this.muxer.mutex.currentPromise}ensureEncoder(e){this.encoder||(this.encoder=new VideoEncoder({output:(t,r)=>void this.muxer.addEncodedVideoChunk(this.source._connectedTrack,t,r),error:t=>console.error("Video encode error:",t)}),this.encoder.configure({codec:rr(this.codecConfig.codec,e.codedWidth,e.codedHeight,this.codecConfig.bitrate),width:e.codedWidth,height:e.codedHeight,bitrate:this.codecConfig.bitrate,framerate:this.source._connectedTrack?.metadata.frameRate,latencyMode:this.codecConfig.latencyMode,...ar(this.codecConfig.codec)}),d(this.source._connectedTrack),this.muxer=this.source._connectedTrack.output._muxer)}async flush(){this.encoder&&(await this.encoder.flush(),this.encoder.close())}},je=class extends U{_encoder;constructor(e){super(e.codec),this._encoder=new Ce(this,e)}digest(e){if(!(e instanceof VideoFrame))throw new TypeError("videoFrame must be a VideoFrame.");return this._encoder.digest(e)}_flush(){return this._encoder.flush()}},qe=class extends U{_encoder;_canvas;constructor(e,t){if(!(e instanceof HTMLCanvasElement))throw new TypeError("canvas must be an HTMLCanvasElement.");super(t.codec),this._encoder=new Ce(this,t),this._canvas=e}digest(e,t=0){if(!Number.isFinite(e)||e<0)throw new TypeError("timestamp must be a non-negative number.");if(!Number.isFinite(t)||t<0)throw new TypeError("duration must be a non-negative number.");let r=new VideoFrame(this._canvas,{timestamp:Math.round(1e6*e),duration:Math.round(1e6*t),alpha:"discard"}),s=this._encoder.digest(r);return r.close(),s}_flush(){return this._encoder.flush()}},Xe=class extends U{_encoder;_abortController=null;_track;_offsetTimestamps=!0;constructor(e,t){if(!(e instanceof MediaStreamTrack)||e.kind!=="video")throw new TypeError("track must be a video MediaStreamTrack.");t={...t,latencyMode:"realtime"},super(t.codec),this._encoder=new Ce(this,t),this._track=e}_start(){this._abortController=new AbortController;let e=new MediaStreamTrackProcessor({track:this._track}),t=new WritableStream({write:r=>{this._encoder.digest(r),r.close()}});e.readable.pipeTo(t,{signal:this._abortController.signal}).catch(r=>{r instanceof DOMException&&r.name==="AbortError"||console.error("Pipe error:",r)})}async _flush(){this._abortController&&(this._abortController.abort(),this._abortController=null),await this._encoder.flush()}},B=class extends te{_connectedTrack=null;_codec;constructor(e){if(super(),!J.includes(e))throw new TypeError(`Invalid audio codec '${e}'. Must be one of: ${J.join(", ")}.`);this._codec=e}},Ge=class extends B{constructor(e){super(e)}digest(e,t){if(!(e instanceof EncodedAudioChunk))throw new TypeError("chunk must be an EncodedAudioChunk.");return this._ensureValidDigest(),this._connectedTrack.output._muxer.addEncodedAudioChunk(this._connectedTrack,e,t)}},_i=i=>{if(!i||typeof i!="object")throw new TypeError("Codec config must be an object.");if(!J.includes(i.codec))throw new TypeError(`Invalid audio codec '${i.codec}'. Must be one of: ${J.join(", ")}.`);if(!Number.isInteger(i.bitrate)||i.bitrate<=0)throw new TypeError("config.bitrate must be a positive integer.")},Se=class{constructor(e,t){this.source=e;this.codecConfig=t;_i(t)}encoder=null;muxer=null;lastNumberOfChannels=null;lastSampleRate=null;async digest(e){if(this.source._ensureValidDigest(),this.lastNumberOfChannels!==null&&this.lastSampleRate!==null){if(e.numberOfChannels!==this.lastNumberOfChannels||e.sampleRate!==this.lastSampleRate)throw new Error(`Audio parameters must remain constant. Expected ${this.lastNumberOfChannels} channels at ${this.lastSampleRate} Hz, got ${e.numberOfChannels} channels at ${e.sampleRate} Hz.`)}else this.lastNumberOfChannels=e.numberOfChannels,this.lastSampleRate=e.sampleRate;this.ensureEncoder(e),d(this.encoder),this.encoder.encode(e),this.encoder.encodeQueueSize>=4&&await new Promise(t=>this.encoder.addEventListener("dequeue",t,{once:!0})),await this.muxer.mutex.currentPromise}ensureEncoder(e){this.encoder||(this.encoder=new AudioEncoder({output:(t,r)=>void this.muxer.addEncodedAudioChunk(this.source._connectedTrack,t,r),error:t=>console.error("Audio encode error:",t)}),this.encoder.configure({codec:sr(this.codecConfig.codec,e.numberOfChannels,e.sampleRate),numberOfChannels:e.numberOfChannels,sampleRate:e.sampleRate,bitrate:this.codecConfig.bitrate,...or(this.codecConfig.codec)}),d(this.source._connectedTrack),this.muxer=this.source._connectedTrack.output._muxer)}async flush(){this.encoder&&(await this.encoder.flush(),this.encoder.close())}},Ye=class extends B{_encoder;constructor(e){super(e.codec),this._encoder=new Se(this,e)}digest(e){if(!(e instanceof AudioData))throw new TypeError("audioData must be an AudioData.");return this._encoder.digest(e)}_flush(){return this._encoder.flush()}},Ze=class extends B{_encoder;_accumulatedFrameCount=0;constructor(e){super(e.codec),this._encoder=new Se(this,e)}digest(e){if(!(e instanceof AudioBuffer))throw new TypeError("audioBuffer must be an AudioBuffer.");let t=e.numberOfChannels,r=e.sampleRate,s=e.length,n=new Float32Array(t*s);for(let o=0;o<t;o++){let u=e.getChannelData(o);n.set(u,o*s)}let a=new AudioData({format:"f32-planar",sampleRate:r,numberOfFrames:s,numberOfChannels:t,timestamp:Math.round(1e6*this._accumulatedFrameCount/r),data:n}),c=this._encoder.digest(a);return a.close(),this._accumulatedFrameCount+=s,c}_flush(){return this._encoder.flush()}},Je=class extends B{_encoder;_abortController=null;_track;_offsetTimestamps=!0;constructor(e,t){if(!(e instanceof MediaStreamTrack)||e.kind!=="audio")throw new TypeError("track must be an audio MediaStreamTrack.");super(t.codec),this._encoder=new Se(this,t),this._track=e}_start(){this._abortController=new AbortController;let e=new MediaStreamTrackProcessor({track:this._track}),t=new WritableStream({write:r=>{this._encoder.digest(r),r.close()}});e.readable.pipeTo(t,{signal:this._abortController.signal}).catch(r=>{r instanceof DOMException&&r.name==="AbortError"||console.error("Pipe error:",r)})}async _flush(){this._abortController&&(this._abortController.abort(),this._abortController=null),await this._encoder.flush()}},re=class extends te{_connectedTrack=null;_codec;constructor(e){if(super(),!ge.includes(e))throw new TypeError(`Invalid subtitle codec '${e}'. Must be one of: ${ge.join(", ")}.`);this._codec=e}},et=class extends re{_parser;constructor(e){super(e),this._parser=new Fe({codec:e,output:(t,r)=>this._connectedTrack?.output._muxer.addSubtitleCue(this._connectedTrack,t,r),error:t=>console.error("Subtitle parse error:",t)})}digest(e){if(typeof e!="string")throw new TypeError("text must be a string.");return this._ensureValidDigest(),this._parser.parse(e),this._connectedTrack.output._muxer.mutex.currentPromise}};var tt=class{_muxer;_writer;_tracks=[];_started=!1;_finalizing=!1;_mutex=new H;constructor(e){if(!e||typeof e!="object")throw new TypeError("options must be an object.");if(!(e.format instanceof Q))throw new TypeError("options.format must be an OutputFormat.");if(!(e.target instanceof K))throw new TypeError("options.target must be a Target.");if(e.target._output)throw new Error("Target is already used for another output.");e.target._output=this,this._writer=e.target._createWriter(),this._muxer=e.format._createMuxer(this)}addVideoTrack(e,t={}){if(!(e instanceof U))throw new TypeError("source must be a VideoSource.");if(!t||typeof t!="object")throw new TypeError("metadata must be an object.");if(typeof t.rotation=="number"&&![0,90,180,270].includes(t.rotation))throw new TypeError(`Invalid video rotation: ${t.rotation}. Has to be 0, 90, 180 or 270.`);if(Array.isArray(t.rotation)&&(t.rotation.length!==9||t.rotation.some(r=>!Number.isFinite(r))))throw new TypeError(`Invalid video transformation matrix: ${t.rotation.join()}`);if(t.frameRate!==void 0&&(!Number.isInteger(t.frameRate)||t.frameRate<=0))throw new TypeError(`Invalid video frame rate: ${t.frameRate}. Must be a positive integer.`);this._addTrack("video",e,t)}addAudioTrack(e,t={}){if(!(e instanceof B))throw new TypeError("source must be an AudioSource.");if(!t||typeof t!="object")throw new TypeError("metadata must be an object.");this._addTrack("audio",e,t)}addSubtitleTrack(e,t={}){if(!(e instanceof re))throw new TypeError("source must be a SubtitleSource.");if(!t||typeof t!="object")throw new TypeError("metadata must be an object.");this._addTrack("subtitle",e,t)}_addTrack(e,t,r){if(this._started)throw new Error("Cannot add track after output has started.");if(t._connectedTrack)throw new Error("Source is already used for a track.");let s={id:this._tracks.length+1,output:this,type:e,source:t,metadata:r};this._muxer.beforeTrackAdd(s),this._tracks.push(s),t._connectedTrack=s}async start(){if(this._started)throw new Error("Output already started.");this._started=!0,this._writer.start();let e=await this._mutex.acquire();await this._muxer.start();for(let t of this._tracks)t.source._start();e()}async finalize(){if(!this._started)throw new Error("Cannot finalize before starting.");if(this._finalizing)throw new Error("Cannot call finalize twice.");this._finalizing=!0;let e=await this._mutex.acquire(),t=this._tracks.map(r=>r.source._flush());await Promise.all(t),await this._muxer.finalize(),await this._writer.flush(),await this._writer.finalize(),e()}};var me=class{_sizePromise=null;_getSize(){return this._sizePromise??=this._retrieveSize()}},rt=class extends me{constructor(t){super();this.buffer=t}async _read(t,r){return new Uint8Array(this.buffer,t,r-t)}async _retrieveSize(){return this.buffer.byteLength}},it=class extends me{constructor(t){super();this.blob=t}async _read(t,r){let n=await this.blob.slice(t,r).arrayBuffer();return new Uint8Array(n)}async _retrieveSize(){return this.blob.size}};var de=class{input;constructor(e){this.input=e}};var st=class{_backing;constructor(e){this._backing=e}isVideoTrack(){return this instanceof we}isAudioTrack(){return this instanceof ye}computeDuration(){return this._backing.computeDuration()}},we=class extends st{_backing;constructor(e){super(e),this._backing=e}getCodec(){return this._backing.getCodec()}getWidth(){return this._backing.getWidth()}getHeight(){return this._backing.getHeight()}getRotation(){return this._backing.getRotation()}async getRotatedWidth(){return await this._backing.getRotation()%180===0?this._backing.getWidth():this._backing.getHeight()}async getRotatedHeight(){return await this._backing.getRotation()%180===0?this._backing.getHeight():this._backing.getWidth()}getDecoderConfig(){return this._backing.getDecoderConfig()}async getCodecMimeType(){return(await this.getDecoderConfig()).codec}},ye=class extends st{_backing;constructor(e){super(e),this._backing=e}getCodec(){return this._backing.getCodec()}getNumberOfChannels(){return this._backing.getNumberOfChannels()}getSampleRate(){return this._backing.getSampleRate()}getDecoderConfig(){return this._backing.getDecoderConfig()}async getCodecMimeType(){return(await this.getDecoderConfig()).codec}};var le=class{constructor(e,t=1/0){this.source=e;this.maxStorableBytes=t}loadedSegments=[];loadingSegments=[];sourceSizePromise=null;nextAge=0;totalStoredBytes=0;async loadRange(e,t){t=Math.min(t,await this.source._getSize());let r=this.loadingSegments.find(o=>o.start<=e&&o.end>=t);if(r){await r.promise;return}if(this.loadedSegments.some(o=>o.start<=e&&o.end>=t))return;let n=this.source._read(e,t),a={start:e,end:t,promise:n};this.loadingSegments.push(a);let c=await n;Wt(this.loadingSegments,a),this.insertIntoLoadedSegments(e,c)}insertIntoLoadedSegments(e,t){let r={start:e,end:e+t.byteLength,bytes:t,view:new DataView(t.buffer),age:this.nextAge++},s=I(this.loadedSegments,e,n=>n.start);(s===-1||this.loadedSegments[s].start<r.start)&&s++,this.loadedSegments.splice(s,0,r),this.totalStoredBytes+=t.byteLength;for(let n=s+1;n<this.loadedSegments.length;n++){let a=this.loadedSegments[n];if(a.start>=r.end)break;r.start<=a.start&&a.end<=r.end&&(this.loadedSegments.splice(n,1),n--)}for(;this.totalStoredBytes>this.maxStorableBytes&&this.loadedSegments.length>1;){let n=null,a=-1;for(let c=0;c<this.loadedSegments.length;c++){let o=this.loadedSegments[c];(!n||o.age<n.age)&&(n=o,a=c)}d(n),this.totalStoredBytes-=n.bytes.byteLength,this.loadedSegments.splice(a,1)}}getViewAndOffset(e,t){let r=I(this.loadedSegments,e,n=>n.start),s=null;if(r!==-1)for(let n=r;n<this.loadedSegments.length;n++){let a=this.loadedSegments[n];if(a.start>e)break;if(t<=a.end){s=a;break}}if(!s)throw new Error(`No segment loaded for range [${e}, ${t}).`);return s.age=this.nextAge++,{view:s.view,offset:s.bytes.byteOffset+e-s.start}}forgetRange(e,t){if(t<=e)return;let r=I(this.loadedSegments,e,n=>n.start);if(r===-1)return;let s=this.loadedSegments[r];s.start!==e||s.end!==t||(this.loadedSegments.splice(r,1),this.totalStoredBytes-=s.bytes.byteLength)}};var ie=class{constructor(e){this.reader=e}pos=0;readRange(e,t){let{view:r,offset:s}=this.reader.getViewAndOffset(e,t);return new Uint8Array(r.buffer,s,t-e)}readU8(){let{view:e,offset:t}=this.reader.getViewAndOffset(this.pos,this.pos+1);return this.pos++,e.getUint8(t)}readU16(){let{view:e,offset:t}=this.reader.getViewAndOffset(this.pos,this.pos+2);return this.pos+=2,e.getUint16(t,!1)}readU24(){let{view:e,offset:t}=this.reader.getViewAndOffset(this.pos,this.pos+3);this.pos+=3;let r=e.getUint16(t,!1),s=e.getUint8(t+2);return r*256+s}readS32(){let{view:e,offset:t}=this.reader.getViewAndOffset(this.pos,this.pos+4);return this.pos+=4,e.getInt32(t,!1)}readU32(){let{view:e,offset:t}=this.reader.getViewAndOffset(this.pos,this.pos+4);return this.pos+=4,e.getUint32(t,!1)}readI32(){let{view:e,offset:t}=this.reader.getViewAndOffset(this.pos,this.pos+4);return this.pos+=4,e.getInt32(t,!1)}readU64(){let e=this.readU32(),t=this.readU32();return e*4294967296+t}readF64(){let{view:e,offset:t}=this.reader.getViewAndOffset(this.pos,this.pos+8);return this.pos+=8,e.getFloat64(t,!1)}readFixed_16_16(){return this.readS32()/65536}readFixed_2_30(){return this.readS32()/1073741824}readAscii(e){let{view:t,offset:r}=this.reader.getViewAndOffset(this.pos,this.pos+e);this.pos+=e;let s="";for(let n=0;n<e;n++)s+=String.fromCharCode(t.getUint8(r+n));return s}readIsomVariableInteger(){let e=0;for(let t=0;t<4;t++){e<<=7;let r=this.readU8();if(e|=r&127,!(r&128))break}return e}readBoxHeader(){let e=this.readU32(),t=this.readAscii(4),r=8;return e===1&&(e=this.readU64(),r=16),{name:t,totalSize:e,headerSize:r,contentSize:e-r}}};var Ei=[L(0),L(90),L(180),L(270)],nt=class extends de{isobmffReader;currentTrack=null;tracks=[];metadataPromise=null;movieTimescale=-1;movieDurationInTimescale=-1;isFragmented=!1;fragmentTrackDefaults=[];fragments=[];currentFragment=null;fragmentLookupMutex=new H;chunkReader;constructor(e){super(e),this.isobmffReader=new ie(e._mainReader),this.chunkReader=new ie(new le(e._source,64*2**20))}async computeDuration(){let e=await this.getTracks(),t=await Promise.all(e.map(r=>r.computeDuration()));return Math.max(0,...t)}async getTracks(){return await this.readMetadata(),this.tracks.map(e=>e.inputTrack)}async getMimeType(){await this.readMetadata();let e="video/mp4";if(this.tracks.length>0){let t=await Promise.all(this.tracks.map(s=>s.inputTrack.getCodecMimeType())),r=[...new Set(t)];e+=`; codecs="${r.join(", ")}"`}return e}readMetadata(){return this.metadataPromise??=(async()=>{let e=await this.isobmffReader.reader.source._getSize();for(;this.isobmffReader.pos<e;){await this.isobmffReader.reader.loadRange(this.isobmffReader.pos,this.isobmffReader.pos+16);let t=this.isobmffReader.pos,r=this.isobmffReader.readBoxHeader();if(r.name==="moov"){await this.isobmffReader.reader.loadRange(this.isobmffReader.pos,this.isobmffReader.pos+r.contentSize),this.readContiguousBoxes(r.contentSize);break}this.isobmffReader.pos=t+r.totalSize}if(this.isFragmented){await this.isobmffReader.reader.loadRange(e-4,e),this.isobmffReader.pos=e-4;let t=this.isobmffReader.readU32(),r=e-t;if(r>=0&&r<e){await this.isobmffReader.reader.loadRange(r,e),this.isobmffReader.pos=r;let s=this.isobmffReader.readBoxHeader();s.name==="mfra"&&this.readContiguousBoxes(s.contentSize)}}})()}getSampleTableForTrack(e){if(e.sampleTable)return e.sampleTable;let t={sampleTimingEntries:[],sampleCompositionTimeOffsets:[],sampleSizes:[],keySampleIndices:null,chunkOffsets:[],sampleToChunk:[],presentationTimestamps:[]};e.sampleTable=t,this.isobmffReader.pos=e.sampleTableOffset,this.currentTrack=e,this.traverseBox(),this.currentTrack=null;for(let r of t.sampleTimingEntries)for(let s=0;s<r.count;s++)t.presentationTimestamps.push({presentationTimestamp:r.startDecodeTimestamp+s*r.delta,sampleIndex:r.startIndex+s});for(let r of t.sampleCompositionTimeOffsets)for(let s=0;s<r.count;s++){let n=r.startIndex+s,a=t.presentationTimestamps[n];a&&(a.presentationTimestamp+=r.offset)}return t.presentationTimestamps.sort((r,s)=>r.presentationTimestamp-s.presentationTimestamp),e.sampleTable}async readFragment(){let e=this.isobmffReader.pos;await this.isobmffReader.reader.loadRange(this.isobmffReader.pos,this.isobmffReader.pos+16);let t=this.isobmffReader.readBoxHeader();d(t.name==="moof"),await this.isobmffReader.reader.loadRange(e,e+t.totalSize),this.isobmffReader.pos=e,this.traverseBox();let r=W(this.fragments,e,n=>n.moofOffset);d(r!==-1);let s=this.fragments[r];d(s.moofOffset===e),this.isobmffReader.reader.forgetRange(e,e+t.totalSize);for(let[n,a]of s.trackData){if(a.startTimestampIsFinal)continue;let c=this.tracks.find(l=>l.id===n);this.isobmffReader.pos=0;let o=null,u=null,m=I(c.fragments,e-1,l=>l.moofOffset);for(m!==-1&&(o=c.fragments[m],u=o,this.isobmffReader.pos=o.moofOffset+o.moofSize);this.isobmffReader.pos<e;){if(o?.nextFragment)o=o.nextFragment,this.isobmffReader.pos=o.moofOffset+o.moofSize;else{await this.isobmffReader.reader.loadRange(this.isobmffReader.pos,this.isobmffReader.pos+16);let l=this.isobmffReader.pos,h=this.isobmffReader.readBoxHeader();if(h.name==="moof"){let p=W(this.fragments,l,b=>b.moofOffset);if(p===-1){this.isobmffReader.pos=l;let b=await this.readFragment();o&&(o.nextFragment=b),o=b}else{let b=this.fragments[p];o&&(o.nextFragment=b),o=b}}this.isobmffReader.pos=l+h.totalSize}o&&o.trackData.has(n)&&(u=o)}if(u){let l=u.trackData.get(n);d(l.startTimestampIsFinal),fr(a,l.endTimestamp)}a.startTimestampIsFinal=!0}return s}readContiguousBoxes(e){let t=this.isobmffReader.pos;for(;this.isobmffReader.pos-t<e;)this.traverseBox()}traverseBox(){let e=this.isobmffReader.pos,t=this.isobmffReader.readBoxHeader(),r=e+t.totalSize;switch(t.name){case"mdia":case"minf":case"dinf":case"mfra":this.readContiguousBoxes(t.contentSize);break;case"mvhd":{let s=this.isobmffReader.readU8();this.isobmffReader.pos+=3,s===1?(this.isobmffReader.pos+=16,this.movieTimescale=this.isobmffReader.readU32(),this.movieDurationInTimescale=this.isobmffReader.readU64()):(this.isobmffReader.pos+=8,this.movieTimescale=this.isobmffReader.readU32(),this.movieDurationInTimescale=this.isobmffReader.readU32())}break;case"trak":{let s={id:-1,demuxer:this,inputTrack:null,info:null,timescale:-1,durationInTimescale:-1,rotation:0,sampleTableOffset:-1,sampleTable:null,fragmentLookupTable:null,currentFragmentState:null,fragments:[]};if(this.currentTrack=s,this.readContiguousBoxes(t.contentSize),s.id!==-1&&s.timescale!==-1&&s.info!==null){if(s.info.type==="video"&&s.info.codec!==null){let n=s;s.inputTrack=new we(new Ot(n)),this.tracks.push(s)}else if(s.info.type==="audio"&&s.info.codec!==null){let n=s;if(s.inputTrack=new ye(new _t(n)),this.tracks.push(s),s.info.codec==="aac"){let a=vt(s.info.codecDescription);a.numberOfChannels!==null&&(s.info.numberOfChannels=a.numberOfChannels),a.sampleRate!==null&&(s.info.sampleRate=a.sampleRate)}}}this.currentTrack=null}break;case"tkhd":{let s=this.currentTrack;d(s);let n=this.isobmffReader.readU8();if(!((this.isobmffReader.readU24()&1)!==0))break;if(n===0)this.isobmffReader.pos+=8,s.id=this.isobmffReader.readU32(),this.isobmffReader.pos+=8;else if(n===1)this.isobmffReader.pos+=16,s.id=this.isobmffReader.readU32(),this.isobmffReader.pos+=12;else throw new Error(`Incorrect track header version ${n}.`);this.isobmffReader.pos+=2*4+2+2+2+2;let o=[];o.push(this.isobmffReader.readFixed_16_16(),this.isobmffReader.readFixed_16_16()),this.isobmffReader.pos+=4,o.push(this.isobmffReader.readFixed_16_16(),this.isobmffReader.readFixed_16_16());let u=Ei.findIndex(m=>m.every((l,h)=>l===o[h]));u===-1?s.rotation=0:s.rotation=90*u}break;case"mdhd":{let s=this.currentTrack;d(s);let n=this.isobmffReader.readU8();this.isobmffReader.pos+=3,n===0?(this.isobmffReader.pos+=8,s.timescale=this.isobmffReader.readU32(),s.durationInTimescale=this.isobmffReader.readU32()):n===1&&(this.isobmffReader.pos+=16,s.timescale=this.isobmffReader.readU32(),s.durationInTimescale=this.isobmffReader.readU64())}break;case"hdlr":{let s=this.currentTrack;d(s),this.isobmffReader.pos+=8;let n=this.isobmffReader.readAscii(4);n==="vide"?s.info={type:"video",width:-1,height:-1,codec:null,codecDescription:null,colorSpace:null}:n==="soun"&&(s.info={type:"audio",numberOfChannels:-1,sampleRate:-1,codec:null,codecDescription:null})}break;case"stbl":{let s=this.currentTrack;d(s),s.sampleTableOffset=e,this.readContiguousBoxes(t.contentSize)}break;case"stsd":{let s=this.currentTrack;if(d(s),s.info===null||s.sampleTable)break;let n=this.isobmffReader.readU8();this.isobmffReader.pos+=3;let a=this.isobmffReader.readU32();for(let c=0;c<a;c++){let o=this.isobmffReader.readBoxHeader();if(s.info.type==="video"){if(o.name==="avc1")s.info.codec="avc";else if(o.name==="hvc1"||o.name==="hev1")s.info.codec="hevc";else{console.warn(`Unsupported video sample entry type ${o.name}.`);break}this.isobmffReader.pos+=6*1+2+2+2+3*4,s.info.width=this.isobmffReader.readU16(),s.info.height=this.isobmffReader.readU16(),this.isobmffReader.pos+=50,this.readContiguousBoxes(e+o.totalSize-this.isobmffReader.pos)}else{if(o.name==="mp4a")s.info.codec="aac";else if(o.name.toLowerCase()==="opus")s.info.codec="opus";else{console.warn(`Unsupported audio sample entry type ${o.name}.`);break}this.isobmffReader.pos+=6*1+2;let u=this.isobmffReader.readU16();this.isobmffReader.pos+=3*2;let m=this.isobmffReader.readU16();this.isobmffReader.pos+=6;let l=this.isobmffReader.readU32()/65536;if(n===0&&u>0){if(u===1)this.isobmffReader.pos+=4*4;else if(u===2){this.isobmffReader.pos+=4,l=this.isobmffReader.readF64(),m=this.isobmffReader.readU32(),this.isobmffReader.pos+=4;let h=this.isobmffReader.readU32(),p=this.isobmffReader.readU32(),b=this.isobmffReader.readU32(),g=this.isobmffReader.readU32()}}s.info.numberOfChannels=m,s.info.sampleRate=l,this.readContiguousBoxes(e+o.totalSize-this.isobmffReader.pos)}}}break;case"avcC":{let s=this.currentTrack;d(s&&s.info),s.info.codecDescription=this.isobmffReader.readRange(this.isobmffReader.pos,this.isobmffReader.pos+t.contentSize)}break;case"hvcC":{let s=this.currentTrack;d(s&&s.info),s.info.codecDescription=this.isobmffReader.readRange(this.isobmffReader.pos,this.isobmffReader.pos+t.contentSize)}break;case"colr":{let s=this.currentTrack;if(d(s&&s.info?.type==="video"),this.isobmffReader.readAscii(4)!=="nclx")break;let a=this.isobmffReader.readU16(),c=this.isobmffReader.readU16(),o=this.isobmffReader.readU16(),u=!!(this.isobmffReader.readU8()&128);s.info.colorSpace={primaries:Dt[a],transfer:Pt[c],matrix:zt[o],fullRange:u}}break;case"wave":t.totalSize>8&&this.readContiguousBoxes(t.contentSize);break;case"esds":{let s=this.currentTrack;d(s&&s.info),this.isobmffReader.pos+=4;let n=this.isobmffReader.readU8();d(n===3),this.isobmffReader.readIsomVariableInteger(),this.isobmffReader.pos+=2;let a=this.isobmffReader.readU8(),c=(a&128)!==0,o=(a&64)!==0,u=(a&32)!==0;if(c&&(this.isobmffReader.pos+=2),o){let b=this.isobmffReader.readU8();this.isobmffReader.pos+=b}u&&(this.isobmffReader.pos+=2);let m=this.isobmffReader.readU8();d(m===4),this.isobmffReader.readIsomVariableInteger();let l=this.isobmffReader.readU8();d(l===64),this.isobmffReader.pos+=12;let h=this.isobmffReader.readU8();d(h===5);let p=this.isobmffReader.readIsomVariableInteger();s.info.codecDescription=this.isobmffReader.readRange(this.isobmffReader.pos,this.isobmffReader.pos+p)}break;case"stts":{let s=this.currentTrack;if(d(s),!s.sampleTable)break;this.isobmffReader.pos+=4;let n=this.isobmffReader.readU32(),a=0,c=0;for(let o=0;o<n;o++){let u=this.isobmffReader.readU32(),m=this.isobmffReader.readU32();s.sampleTable.sampleTimingEntries.push({startIndex:a,startDecodeTimestamp:c,count:u,delta:m}),a+=u,c+=u*m}}break;case"ctts":{let s=this.currentTrack;if(d(s),!s.sampleTable)break;this.isobmffReader.pos+=4;let n=this.isobmffReader.readU32(),a=0;for(let c=0;c<n;c++){let o=this.isobmffReader.readU32(),u=this.isobmffReader.readI32();s.sampleTable.sampleCompositionTimeOffsets.push({startIndex:a,count:o,offset:u}),a+=o}}break;case"stsz":{let s=this.currentTrack;if(d(s),!s.sampleTable)break;this.isobmffReader.pos+=4;let n=this.isobmffReader.readU32(),a=this.isobmffReader.readU32();if(n===0)for(let c=0;c<a;c++){let o=this.isobmffReader.readU32();s.sampleTable.sampleSizes.push(o)}else s.sampleTable.sampleSizes.push(n)}break;case"stz2":throw new Error("Unsupported.");case"stss":{let s=this.currentTrack;if(d(s),!s.sampleTable)break;this.isobmffReader.pos+=4,s.sampleTable.keySampleIndices=[];let n=this.isobmffReader.readU32();for(let a=0;a<n;a++){let c=this.isobmffReader.readU32()-1;s.sampleTable.keySampleIndices.push(c)}}break;case"stsc":{let s=this.currentTrack;if(d(s),!s.sampleTable)break;this.isobmffReader.pos+=4;let n=this.isobmffReader.readU32();for(let c=0;c<n;c++){let o=this.isobmffReader.readU32()-1,u=this.isobmffReader.readU32(),m=this.isobmffReader.readU32();s.sampleTable.sampleToChunk.push({startSampleIndex:-1,startChunkIndex:o,samplesPerChunk:u,sampleDescriptionIndex:m})}let a=0;for(let c=0;c<s.sampleTable.sampleToChunk.length;c++)if(s.sampleTable.sampleToChunk[c].startSampleIndex=a,c<s.sampleTable.sampleToChunk.length-1){let u=s.sampleTable.sampleToChunk[c+1].startChunkIndex-s.sampleTable.sampleToChunk[c].startChunkIndex;a+=u*s.sampleTable.sampleToChunk[c].samplesPerChunk}}break;case"stco":{let s=this.currentTrack;if(d(s),!s.sampleTable)break;this.isobmffReader.pos+=4;let n=this.isobmffReader.readU32();for(let a=0;a<n;a++){let c=this.isobmffReader.readU32();s.sampleTable.chunkOffsets.push(c)}}break;case"co64":{let s=this.currentTrack;if(d(s),!s.sampleTable)break;this.isobmffReader.pos+=4;let n=this.isobmffReader.readU32();for(let a=0;a<n;a++){let c=this.isobmffReader.readU64();s.sampleTable.chunkOffsets.push(c)}}break;case"mvex":this.isFragmented=!0,this.readContiguousBoxes(t.contentSize);break;case"mehd":{let s=this.isobmffReader.readU8();this.isobmffReader.pos+=3;let n=s===1?this.isobmffReader.readU64():this.isobmffReader.readU32();this.movieDurationInTimescale=n}break;case"trex":{this.isobmffReader.pos+=4;let s=this.isobmffReader.readU32(),n=this.isobmffReader.readU32(),a=this.isobmffReader.readU32(),c=this.isobmffReader.readU32(),o=this.isobmffReader.readU32();this.fragmentTrackDefaults.push({trackId:s,defaultSampleDescriptionIndex:n,defaultSampleDuration:a,defaultSampleSize:c,defaultSampleFlags:o})}break;case"tfra":{let s=this.isobmffReader.readU8();this.isobmffReader.pos+=3;let n=this.isobmffReader.readU32(),a=this.tracks.find(w=>w.id===n);if(!a)break;a.fragmentLookupTable=[];let c=this.isobmffReader.readU32(),o=(c&48)>>4,u=(c&12)>>2,m=c&3,l=this.isobmffReader,h=[l.readU8.bind(l),l.readU16.bind(l),l.readU24.bind(l),l.readU32.bind(l)],p=h[o],b=h[u],g=h[m],k=this.isobmffReader.readU32();for(let w=0;w<k;w++){let y=s===1?this.isobmffReader.readU64():this.isobmffReader.readU32(),v=s===1?this.isobmffReader.readU64():this.isobmffReader.readU32(),D=p(),E=b(),F=g();a.fragmentLookupTable.push({timestamp:y,moofOffset:v})}}break;case"moof":{this.currentFragment={moofOffset:e,moofSize:t.totalSize,implicitBaseDataOffset:e,trackData:new Map,dataStart:1/0,dataEnd:0,nextFragment:null},this.readContiguousBoxes(t.contentSize);let s=I(this.fragments,this.currentFragment.moofOffset,n=>n.moofOffset);this.fragments.splice(s+1,0,this.currentFragment);for(let[,n]of this.currentFragment.trackData){let a=n.samples[0],c=A(n.samples);this.currentFragment.dataStart=Math.min(this.currentFragment.dataStart,a.byteOffset),this.currentFragment.dataEnd=Math.max(this.currentFragment.dataEnd,c.byteOffset+c.byteSize)}this.currentFragment=null}break;case"traf":if(d(this.currentFragment),this.readContiguousBoxes(t.contentSize),this.currentTrack){let s=this.currentFragment.trackData.get(this.currentTrack.id);if(s){let n=I(this.currentTrack.fragments,this.currentFragment.moofOffset,c=>c.moofOffset);this.currentTrack.fragments.splice(n+1,0,this.currentFragment);let{currentFragmentState:a}=this.currentTrack;d(a),a.startTimestamp!==null&&(fr(s,a.startTimestamp),s.startTimestampIsFinal=!0)}this.currentTrack.currentFragmentState=null,this.currentTrack=null}break;case"tfhd":{d(this.currentFragment),this.isobmffReader.pos+=1;let s=this.isobmffReader.readU24(),n=!!(s&1),a=!!(s&2),c=!!(s&8),o=!!(s&16),u=!!(s&32),m=!!(s&65536),l=!!(s&131072),h=this.isobmffReader.readU32(),p=this.tracks.find(g=>g.id===h);if(!p)break;let b=this.fragmentTrackDefaults.find(g=>g.trackId===h);this.currentTrack=p,p.currentFragmentState={baseDataOffset:this.currentFragment.implicitBaseDataOffset,sampleDescriptionIndex:b?.defaultSampleDescriptionIndex??null,defaultSampleDuration:b?.defaultSampleDuration??null,defaultSampleSize:b?.defaultSampleSize??null,defaultSampleFlags:b?.defaultSampleFlags??null,startTimestamp:null},n?p.currentFragmentState.baseDataOffset=this.isobmffReader.readU64():l&&(p.currentFragmentState.baseDataOffset=this.currentFragment.moofOffset),a&&(p.currentFragmentState.sampleDescriptionIndex=this.isobmffReader.readU32()),c&&(p.currentFragmentState.defaultSampleDuration=this.isobmffReader.readU32()),o&&(p.currentFragmentState.defaultSampleSize=this.isobmffReader.readU32()),u&&(p.currentFragmentState.defaultSampleFlags=this.isobmffReader.readU32()),m&&(p.currentFragmentState.defaultSampleDuration=0)}break;case"tfdt":{let s=this.currentTrack;if(!s)break;d(s.currentFragmentState);let n=this.isobmffReader.readU8();this.isobmffReader.pos+=3;let a=n===0?this.isobmffReader.readU32():this.isobmffReader.readU64();s.currentFragmentState.startTimestamp=a}break;case"trun":{let s=this.currentTrack;if(!s)break;if(d(this.currentFragment),d(s.currentFragmentState),this.currentFragment.trackData.has(s.id))throw new Error("Can't have two trun boxes for the same track in one fragment.");let n=this.isobmffReader.readU8(),a=this.isobmffReader.readU24(),c=!!(a&1),o=!!(a&4),u=!!(a&256),m=!!(a&512),l=!!(a&1024),h=!!(a&2048),p=this.isobmffReader.readU32(),b=s.currentFragmentState.baseDataOffset;c&&(b+=this.isobmffReader.readI32());let g=null;o&&(g=this.isobmffReader.readU32());let k=b;if(p===0){this.currentFragment.implicitBaseDataOffset=k;break}let w=0,y={startTimestamp:0,endTimestamp:0,samples:[],presentationTimestamps:[],startTimestampIsFinal:!1};this.currentFragment.trackData.set(s.id,y);for(let E=0;E<p;E++){let F;u?F=this.isobmffReader.readU32():(d(s.currentFragmentState.defaultSampleDuration!==null),F=s.currentFragmentState.defaultSampleDuration);let se;m?se=this.isobmffReader.readU32():(d(s.currentFragmentState.defaultSampleSize!==null),se=s.currentFragmentState.defaultSampleSize);let _e;l?_e=this.isobmffReader.readU32():(d(s.currentFragmentState.defaultSampleFlags!==null),_e=s.currentFragmentState.defaultSampleFlags),E===0&&g!==null&&(_e=g);let pt=0;h&&(n===0?pt=this.isobmffReader.readU32():pt=this.isobmffReader.readI32());let kr=!(_e&65536);y.samples.push({presentationTimestamp:w+pt,duration:F,byteOffset:k,byteSize:se,isKeyFrame:kr}),k+=se,w+=F}y.presentationTimestamps=y.samples.map((E,F)=>({presentationTimestamp:E.presentationTimestamp,sampleIndex:F})).sort((E,F)=>E.presentationTimestamp-F.presentationTimestamp);let v=y.samples[y.presentationTimestamps[0].sampleIndex],D=y.samples[A(y.presentationTimestamps).sampleIndex];y.startTimestamp=v.presentationTimestamp,y.endTimestamp=D.presentationTimestamp+D.duration,this.currentFragment.implicitBaseDataOffset=k}break}this.isobmffReader.pos=r}},at=class{constructor(e){this.internalTrack=e}chunkToSampleIndex=new WeakMap;sampleIndexToChunk=new Map;chunkToFragmentLocation=new WeakMap;fragmentLocationToChunk=new Map;getCodec(){throw new Error("Not implemented on base class.")}async computeDuration(){let t=(await this.getChunk(1/0,{metadataOnly:!0}))?.timestamp;return t?t/1e6:0}async getFirstChunk(e){return this.internalTrack.demuxer.isFragmented?this.performFragmentedLookup(()=>{let t=this.internalTrack.fragments[0];return{fragmentIndex:t?0:-1,sampleIndex:t?0:-1,correctSampleFound:!!t}},0,1/0,e):this.fetchChunkForSampleIndex(0,e)}async getChunk(e,t){let r=e*this.internalTrack.timescale;if(this.internalTrack.demuxer.isFragmented)return this.performFragmentedLookup(()=>this.findSampleInFragmentsForTimestamp(r),r,r,t);{let s=this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack),n=lr(s,r);return this.fetchChunkForSampleIndex(n,t)}}async getNextChunk(e,t){if(this.internalTrack.demuxer.isFragmented){let s=this.chunkToFragmentLocation.get(e);if(s===void 0)throw new Error("Chunk was not created from this track.");let n=s.fragment.trackData.get(this.internalTrack.id),a=n.samples[s.sampleIndex],c=W(this.internalTrack.fragments,s.fragment.moofOffset,o=>o.moofOffset);return d(c!==-1),this.performFragmentedLookup(()=>{if(s.sampleIndex+1<n.samples.length)return{fragmentIndex:c,sampleIndex:s.sampleIndex+1,correctSampleFound:!0};{let o=s.fragment;for(;o.nextFragment;)if(o=o.nextFragment,o.trackData.get(this.internalTrack.id)){let m=W(this.internalTrack.fragments,o.moofOffset,l=>l.moofOffset);return d(m!==-1),{fragmentIndex:m,sampleIndex:0,correctSampleFound:!0}}return{fragmentIndex:c,sampleIndex:-1,correctSampleFound:!1}}},a.presentationTimestamp,1/0,t)}let r=this.chunkToSampleIndex.get(e);if(r===void 0)throw new Error("Chunk was not created from this track.");return this.fetchChunkForSampleIndex(r+1,t)}async getKeyChunk(e,t){let r=e*this.internalTrack.timescale;if(this.internalTrack.demuxer.isFragmented)return this.performFragmentedLookup(()=>this.findKeySampleInFragmentsForTimestamp(r),r,r,t);let s=this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack),n=lr(s,r),a=n===-1?-1:Mi(s,n);return this.fetchChunkForSampleIndex(a,t)}async getNextKeyChunk(e,t){if(this.internalTrack.demuxer.isFragmented){let a=this.chunkToFragmentLocation.get(e);if(a===void 0)throw new Error("Chunk was not created from this track.");let c=a.fragment.trackData.get(this.internalTrack.id),o=c.samples[a.sampleIndex],u=W(this.internalTrack.fragments,a.fragment.moofOffset,m=>m.moofOffset);return d(u!==-1),this.performFragmentedLookup(()=>{let m=c.samples.findIndex((l,h)=>l.isKeyFrame&&h>a.sampleIndex);if(m!==-1)return{fragmentIndex:u,sampleIndex:m,correctSampleFound:!0};{let l=a.fragment;for(;l.nextFragment;){l=l.nextFragment;let h=l.trackData.get(this.internalTrack.id);if(h){let p=W(this.internalTrack.fragments,l.moofOffset,g=>g.moofOffset);d(p!==-1);let b=h.samples.findIndex(g=>g.isKeyFrame);if(b===-1)throw new Error("Not supported: Fragment does not contain key sample.");return{fragmentIndex:p,sampleIndex:b,correctSampleFound:!0}}}return{fragmentIndex:u,sampleIndex:-1,correctSampleFound:!1}}},o.presentationTimestamp,1/0,t)}let r=this.chunkToSampleIndex.get(e);if(r===void 0)throw new Error("Chunk was not created from this track.");let s=this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack),n=Vi(s,r);return this.fetchChunkForSampleIndex(n,t)}async fetchChunkForSampleIndex(e,t){if(e===-1)return null;let r=this.sampleIndexToChunk.get(e)?.deref();if(r)return r;let s=this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack),n=Fi(s,e);if(!n)return null;let a;t.metadataOnly?a=new Uint8Array(0):(await this.internalTrack.demuxer.chunkReader.reader.loadRange(n.chunkOffset,n.chunkOffset+n.chunkSize),a=this.internalTrack.demuxer.chunkReader.readRange(n.sampleOffset,n.sampleOffset+n.sampleSize));let c=1e6*n.presentationTimestamp/this.internalTrack.timescale,o=1e6*n.duration/this.internalTrack.timescale,u=this.createChunk(a,c,o,n.isKeyFrame);return this.chunkToSampleIndex.set(u,e),this.sampleIndexToChunk.set(e,new WeakRef(u)),u}async fetchChunkInFragment(e,t,r){if(t===-1)return null;let s=`${e.moofOffset}:${t}`,n=this.fragmentLocationToChunk.get(s)?.deref();if(n)return n;let c=e.trackData.get(this.internalTrack.id).samples[t];d(c);let o;r.metadataOnly?o=new Uint8Array(0):(await this.internalTrack.demuxer.chunkReader.reader.loadRange(e.dataStart,e.dataEnd),o=this.internalTrack.demuxer.chunkReader.readRange(c.byteOffset,c.byteOffset+c.byteSize));let u=1e6*c.presentationTimestamp/this.internalTrack.timescale,m=1e6*c.duration/this.internalTrack.timescale,l=this.createChunk(o,u,m,c.isKeyFrame);return this.chunkToFragmentLocation.set(l,{fragment:e,sampleIndex:t}),this.fragmentLocationToChunk.set(s,new WeakRef(l)),l}findSampleInFragmentsForTimestamp(e){let t=I(this.internalTrack.fragments,e,n=>n.trackData.get(this.internalTrack.id).startTimestamp),r=-1,s=!1;if(t!==-1){let a=this.internalTrack.fragments[t].trackData.get(this.internalTrack.id),c=I(a.presentationTimestamps,e,o=>o.presentationTimestamp);d(c!==-1),r=a.presentationTimestamps[c].sampleIndex,s=e<a.endTimestamp}return{fragmentIndex:t,sampleIndex:r,correctSampleFound:s}}findKeySampleInFragmentsForTimestamp(e){let t=I(this.internalTrack.fragments,e,n=>n.trackData.get(this.internalTrack.id).startTimestamp),r=-1,s=!1;if(t!==-1){let a=this.internalTrack.fragments[t].trackData.get(this.internalTrack.id),c=a.presentationTimestamps.findLastIndex(u=>a.samples[u.sampleIndex].isKeyFrame&&u.presentationTimestamp<=e);if(c===-1)throw new Error("Not supported: Fragment does not begin with a key sample.");r=a.presentationTimestamps[c].sampleIndex,s=e<a.endTimestamp}return{fragmentIndex:t,sampleIndex:r,correctSampleFound:s}}async performFragmentedLookup(e,t,r,s){let n=this.internalTrack.demuxer,a=await n.fragmentLookupMutex.acquire();try{let{fragmentIndex:c,sampleIndex:o,correctSampleFound:u}=e();if(u){let k=this.internalTrack.fragments[c];return this.fetchChunkInFragment(k,o,s)}let m=n.isobmffReader,l=await m.reader.source._getSize(),h=null,p=c,b=o,g=null;if(this.internalTrack.fragmentLookupTable){let k=I(this.internalTrack.fragmentLookupTable,t,w=>w.timestamp);k!==-1&&(g=this.internalTrack.fragmentLookupTable[k])}if(c===-1)m.pos=g?.moofOffset??0;else{let k=this.internalTrack.fragments[c];!g||k.moofOffset>=k.moofOffset?(m.pos=k.moofOffset+k.moofSize,h=k):m.pos=g.moofOffset}for(;m.pos<l;){if(h){let y=h.trackData.get(this.internalTrack.id);if(y&&y.startTimestamp>r)break;if(h.nextFragment){m.pos=h.nextFragment.moofOffset+h.nextFragment.moofSize,h=h.nextFragment;continue}}await m.reader.loadRange(m.pos,m.pos+16);let k=m.pos,w=m.readBoxHeader();if(w.name==="moof"){let y=W(n.fragments,k,v=>v.moofOffset);if(y===-1){m.pos=k;let v=await n.readFragment();h&&(h.nextFragment=v),h=v;let{fragmentIndex:D,sampleIndex:E,correctSampleFound:F}=e();if(F){let se=this.internalTrack.fragments[D];return this.fetchChunkInFragment(se,E,s)}D!==-1&&(p=D,b=E)}else{let v=n.fragments[y];h&&(h.nextFragment=v),h=v}}m.pos=k+w.totalSize}if(p!==-1){let k=this.internalTrack.fragments[p];return this.fetchChunkInFragment(k,b,s)}return null}finally{a()}}},Ot=class extends at{internalTrack;constructor(e){super(e),this.internalTrack=e}async getCodec(){return this.internalTrack.info.codec}async getWidth(){return this.internalTrack.info.width}async getHeight(){return this.internalTrack.info.height}async getRotation(){return this.internalTrack.rotation}async getDecoderConfig(){return{codec:ir(this.internalTrack.info.codec,this.internalTrack.info.codecDescription),codedWidth:this.internalTrack.info.width,codedHeight:this.internalTrack.info.height,description:this.internalTrack.info.codecDescription??void 0,colorSpace:this.internalTrack.info.colorSpace??void 0}}createChunk(e,t,r,s){return new EncodedVideoChunk({data:e,timestamp:t,duration:r,type:s?"key":"delta"})}},_t=class extends at{internalTrack;constructor(e){super(e),this.internalTrack=e}async getCodec(){return this.internalTrack.info.codec}async getNumberOfChannels(){return this.internalTrack.info.numberOfChannels}async getSampleRate(){return this.internalTrack.info.sampleRate}async getDecoderConfig(){return{codec:nr(this.internalTrack.info.codec,this.internalTrack.info.codecDescription),numberOfChannels:this.internalTrack.info.numberOfChannels,sampleRate:this.internalTrack.info.sampleRate,description:this.internalTrack.info.codecDescription??void 0}}createChunk(e,t,r,s){return new EncodedAudioChunk({data:e,timestamp:t,duration:r,type:s?"key":"delta"})}},lr=(i,e)=>{let t=I(i.presentationTimestamps,e,r=>r.presentationTimestamp);return t===-1?-1:i.presentationTimestamps[t].sampleIndex},Fi=(i,e)=>{let t=I(i.sampleTimingEntries,e,g=>g.startIndex),r=i.sampleTimingEntries[t];if(!r||r.startIndex+r.count<=e)return null;let n=r.startDecodeTimestamp+(e-r.startIndex)*r.delta,a=I(i.sampleCompositionTimeOffsets,e,g=>g.startIndex),c=i.sampleCompositionTimeOffsets[a];c&&(n+=c.offset);let o=i.sampleSizes[Math.min(e,i.sampleSizes.length-1)],u=I(i.sampleToChunk,e,g=>g.startSampleIndex),m=i.sampleToChunk[u];d(m);let l=m.startChunkIndex+Math.floor((e-m.startSampleIndex)/m.samplesPerChunk),h=i.chunkOffsets[l],p=0,b=h;if(i.sampleSizes.length===1)b+=o*(e-m.startSampleIndex),p+=o*m.samplesPerChunk;else{let g=m.startSampleIndex+(l-m.startChunkIndex)*m.samplesPerChunk;for(let k=g;k<g+m.samplesPerChunk;k++){let w=i.sampleSizes[k];k<e&&(b+=w),p+=w}}return{presentationTimestamp:n,duration:r.delta,sampleOffset:b,sampleSize:o,chunkOffset:h,chunkSize:p,isKeyFrame:i.keySampleIndices?W(i.keySampleIndices,e,g=>g)!==-1:!0}},Mi=(i,e)=>{if(!i.keySampleIndices)return e;let t=I(i.keySampleIndices,e,r=>r);return i.keySampleIndices[t]??-1},Vi=(i,e)=>{if(!i.keySampleIndices)return e+1;let t=I(i.keySampleIndices,e,r=>r);return i.keySampleIndices[t+1]??-1},fr=(i,e)=>{i.startTimestamp+=e,i.endTimestamp+=e;for(let t of i.samples)t.presentationTimestamp+=e;for(let t of i.presentationTimestamps)t.presentationTimestamp+=e};var ot=class extends de{};var ct=class{},Et=class extends ct{async _canReadInput(e){if(await e._mainReader.source._getSize()<8)return!1;let r=new ie(e._mainReader);return r.pos=4,r.readAscii(4)==="ftyp"}_createDemuxer(e){return new nt(e)}},Ft=class extends ct{async _canReadInput(){return!1}_createDemuxer(e){return new ot(e)}},ve=new Et,hr=ve,pr=ve,ut=new Ft,Mt=ut,br=ut,gr=[ve,Mt];var mt=class{_source;_formats;_mainReader;_demuxerPromise=null;_format=null;constructor(e){this._formats=e.formats,this._source=e.source,this._mainReader=new le(e.source)}_getDemuxer(){return this._demuxerPromise??=(async()=>{await this._mainReader.loadRange(0,4096);for(let e of this._formats)if(await e._canReadInput(this))return this._format=e,e._createDemuxer(this);throw new Error("Input has an unrecognizable format.")})()}async getFormat(){return await this._getDemuxer(),d(this._format),this._format}async computeDuration(){return(await this._getDemuxer()).computeDuration()}async getTracks(){return(await this._getDemuxer()).getTracks()}async getVideoTracks(){return(await this.getTracks()).filter(t=>t.isVideoTrack())}async getPrimaryVideoTrack(){return(await this.getTracks()).find(t=>t.isVideoTrack())??null}async getAudioTracks(){return(await this.getTracks()).filter(t=>t.isAudioTrack())}async getPrimaryAudioTrack(){return(await this.getTracks()).find(t=>t.isAudioTrack())??null}async getMimeType(){return(await this._getDemuxer()).getMimeType()}};var dt=class{async*chunks(e,t=1/0){let r=[],{promise:s,resolve:n}=N(),{promise:a,resolve:c}=N(),o=!1,u=[],m=()=>Math.max(2,u.length);(async()=>{let l=e??await this.getFirstChunk();for(;l&&!o&&!(l.timestamp/1e6>=t);){if(r.length>m()){({promise:a,resolve:c}=N()),await a;continue}r.push(l),n(),{promise:s,resolve:n}=N(),l=await this.getNextChunk(l)}o=!0,n()})();try{for(;;)if(r.length>0){yield r.shift();let l=performance.now();for(u.push(l);u.length>0&&l-u[0]>=1e3;)u.shift();c()}else if(!o)await s;else break}finally{o=!0,c()}}},lt=class{async getKeyMediaFrame(e){let t=null,r=await this.createDecoder(a=>t=a),n=await this.createChunkDrain().getKeyChunk(e);return n?(r.decode(n),await r.flush(),r.close(),t):null}async getMediaFrame(e){let t=null,r=await this.createDecoder(o=>{o.timestamp/1e6<=e?(t?.close(),t=o):o.close()}),s=this.createChunkDrain(),n=await s.getKeyChunk(e);if(!n)return null;let a=await s.getChunk(e);d(a),r.decode(n);let c=n;for(;c!==a;){let o=await s.getNextChunk(c);d(o),c=o,r.decode(o),r.decodeQueueSize>=10&&await new Promise(u=>r.addEventListener("dequeue",u,{once:!0}))}return await r.flush(),r.close(),t}async*mediaFrames(e=0,t=1/0){let r=[],s=!1,n=null,{promise:a,resolve:c}=N(),{promise:o,resolve:u}=N(),m=!1,l=8,h=await this.createDecoder(k=>{u();let w=k.timestamp/1e6;if(w>=t&&(m=!0),m){k.close();return}n&&(w>e?(r.push(n),s=!0):n.close()),w>=e&&(r.push(k),s=!0),n=s?null:k,r.length>0&&(c(),{promise:a,resolve:c}=N())}),p=this.createChunkDrain(),b=await p.getKeyChunk(e)??await p.getFirstChunk();if(!b)return;let g=!1;(async()=>{let k=b,w=1/0;if(t<1/0){let v=await p.getChunk(t),D=v?v.type==="key"&&v.timestamp/1e6===t?v:await p.getNextKeyChunk(v):null;D&&(w=D.timestamp/1e6)}let y=p.chunks(b,w);for(await y.next();k&&!m;){if(r.length+h.decodeQueueSize>l){({promise:o,resolve:u}=N()),await o;continue}h.decode(k);let v=await y.next();if(v.done)break;k=v.value}await y.return(),await h.flush(),h.close(),!s&&n&&r.push(n),g=!0,c()})();try{for(;;)if(r.length>0)yield r.shift(),u();else if(!g)await a;else break}finally{m=!0,u();for(let k of r)k.close()}}},Re=class extends dt{constructor(t){super();this.videoTrack=t}getFirstChunk(t={}){return this.videoTrack._backing.getFirstChunk(t)}getChunk(t,r={}){return this.videoTrack._backing.getChunk(t,r)}getNextChunk(t,r={}){return this.videoTrack._backing.getNextChunk(t,r)}getKeyChunk(t,r={}){return this.videoTrack._backing.getKeyChunk(t,r)}getNextKeyChunk(t,r={}){return this.videoTrack._backing.getNextKeyChunk(t,r)}},Ie=class extends lt{constructor(t){super();this.videoTrack=t}decoderConfig=null;async createDecoder(t){this.decoderConfig??=await this.videoTrack.getDecoderConfig();let r=new VideoDecoder({output:t,error:s=>console.error(s)});return r.configure(this.decoderConfig),r}createChunkDrain(){return new Re(this.videoTrack)}getKeyFrame(t){return this.getKeyMediaFrame(t)}getFrame(t){return this.getMediaFrame(t)}frames(t=0,r=1/0){return this.mediaFrames(t,r)}},ft=class{constructor(e,t){this.videoTrack=e;this.dimensions=t;this.videoFrameDrain=new Ie(e)}videoFrameDrain;async videoFrameToWrappedCanvas(e){let t=this.dimensions?.width??await this.videoTrack.getRotatedWidth(),r=this.dimensions?.height??await this.videoTrack.getRotatedHeight(),s=await this.videoTrack.getRotation(),n=document.createElement("canvas");n.width=t,n.height=r;let a=n.getContext("2d",{alpha:!1});d(a),a.translate(t/2,r/2),a.rotate(s*Math.PI/180),a.translate(-t/2,-r/2);let[c,o]=s%180===0?[t,r]:[r,t];a.drawImage(e,(t-c)/2,(r-o)/2,c,o);let u={canvas:n,timestamp:e.timestamp/1e6,duration:(e.duration??0)/1e6};return e.close(),u}async getCanvas(e){let t=await this.videoFrameDrain.getFrame(e);return t&&this.videoFrameToWrappedCanvas(t)}async*canvases(e=0,t=1/0){for await(let r of this.videoFrameDrain.frames(e,t))yield this.videoFrameToWrappedCanvas(r)}},Ae=class extends dt{constructor(t){super();this.audioTrack=t}getFirstChunk(t={}){return this.audioTrack._backing.getFirstChunk(t)}getChunk(t,r={}){return this.audioTrack._backing.getChunk(t,r)}getNextChunk(t,r={}){return this.audioTrack._backing.getNextChunk(t,r)}getKeyChunk(t,r={}){return this.audioTrack._backing.getKeyChunk(t,r)}getNextKeyChunk(t,r={}){return this.audioTrack._backing.getNextKeyChunk(t,r)}},Oe=class extends lt{constructor(t){super();this.audioTrack=t}decoderConfig=null;async createDecoder(t){this.decoderConfig??=await this.audioTrack.getDecoderConfig();let r=new AudioDecoder({output:t,error:s=>console.error(s)});return r.configure(this.decoderConfig),r}createChunkDrain(){return new Ae(this.audioTrack)}getKeyData(t){return this.getKeyMediaFrame(t)}getData(t){return this.getMediaFrame(t)}data(t=0,r=1/0){return this.mediaFrames(t,r)}},ht=class{constructor(e){this.audioTrack=e;this.audioDataDrain=new Oe(e)}audioDataDrain;audioDataToWrappedArrayBuffer(e){let t=new AudioBuffer({numberOfChannels:e.numberOfChannels,length:e.numberOfFrames,sampleRate:e.sampleRate}),r=new Float32Array(e.allocationSize({planeIndex:0,format:"f32-planar"})/4);for(let a=0;a<e.numberOfChannels;a++)e.copyTo(r,{planeIndex:a,format:"f32-planar"}),t.copyToChannel(r,a);let s=1/e.sampleRate,n={buffer:t,timestamp:Math.round(e.timestamp/1e6/s)*s};return e.close(),n}async getBuffer(e){let t=await this.audioDataDrain.getData(e);return t&&this.audioDataToWrappedArrayBuffer(t)}async*buffers(e=0,t=1/0){for await(let r of this.audioDataDrain.data(e,t))yield this.audioDataToWrappedArrayBuffer(r)}};return yr(Di);})();
if (typeof module === "object" && typeof module.exports === "object") Object.assign(module.exports, Metamuxer)
