"use strict";var Metamuxer=(()=>{var Ct=Object.defineProperty;var vr=Object.getOwnPropertyDescriptor;var _r=Object.getOwnPropertyNames;var Ar=Object.prototype.hasOwnProperty;var Ir=(i,t)=>{for(var e in t)Ct(i,e,{get:t[e],enumerable:!0})},Er=(i,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of _r(t))!Ar.call(i,a)&&a!==e&&Ct(i,a,{get:()=>t[a],enumerable:!(r=vr(t,a))||r.enumerable});return i};var Rr=i=>Er(Ct({},"__esModule",{value:!0}),i);var Wi={};Ir(Wi,{ALL_FORMATS:()=>yr,AUDIO_CODECS:()=>se,ArrayBufferTarget:()=>he,AudioBufferDrain:()=>Tt,AudioBufferSource:()=>st,AudioDataDrain:()=>Pe,AudioDataSource:()=>at,AudioSource:()=>Q,BaseChunkDrain:()=>ge,BaseMediaFrameDrain:()=>Te,BlobSource:()=>lt,BufferSource:()=>dt,CanvasDrain:()=>gt,CanvasSource:()=>rt,EncodedAudioChunkDrain:()=>De,EncodedAudioChunkSource:()=>nt,EncodedVideoChunkDrain:()=>Ve,EncodedVideoChunkSource:()=>et,ISOBMFF:()=>Fe,Input:()=>kt,InputAudioTrack:()=>B,InputFormat:()=>Z,InputTrack:()=>be,InputVideoTrack:()=>U,IsobmffInputFormat:()=>Re,MATROSKA:()=>bt,MKV:()=>Pt,MOV:()=>Cr,MP4:()=>xr,MatroskaInputFormat:()=>Oe,MediaSource:()=>ce,MediaStreamAudioTrackSource:()=>ot,MediaStreamVideoTrackSource:()=>it,MkvOutputFormat:()=>Ae,Mp4OutputFormat:()=>Je,Output:()=>ut,OutputFormat:()=>Y,SUBTITLE_CODECS:()=>Se,Source:()=>j,StreamTarget:()=>je,SubtitleSource:()=>ue,Target:()=>G,TextSubtitleSource:()=>ct,UrlSource:()=>mt,VIDEO_CODECS:()=>ae,VideoFrameDrain:()=>Me,VideoFrameSource:()=>tt,VideoSource:()=>L,WEBM:()=>wr,WebMOutputFormat:()=>oe});function l(i){if(!i)throw new Error("Assertion failed.")}var F=i=>i&&i[i.length-1],J=i=>i>=0&&i<2**32,V=(i,t,e)=>{let r=0;for(let a=t;a<e;a++){let n=Math.floor(a/8),s=i[n],o=7-(a&7),c=(s&1<<o)>>o;r<<=1,r|=c}return r},zt=(i,t,e,r)=>{for(let a=t;a<e;a++){let n=Math.floor(a/8),s=i[n],o=7-(a&7);s&=~(1<<o),s|=(r&1<<e-a-1)>>e-a-1<<o,i[n]=s}},ee=i=>i instanceof ArrayBuffer?new Uint8Array(i):new Uint8Array(i.buffer,i.byteOffset,i.byteLength),P=new TextEncoder,wt=i=>Object.fromEntries(Object.entries(i).map(([t,e])=>[e,t])),te={bt709:1,bt470bg:5,smpte170m:6},Ut=wt(te),re={bt709:1,smpte170m:6,"iec61966-2-1":13},Bt=wt(re),ie={rgb:0,bt709:1,bt470bg:5,smpte170m:6},Nt=wt(ie),Be=i=>!!i&&!!i.primaries&&!!i.transfer&&!!i.matrix&&i.fullRange!==void 0,yt=i=>i instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&i instanceof SharedArrayBuffer||ArrayBuffer.isView(i)&&!(i instanceof DataView),q=class{constructor(){this.currentPromise=Promise.resolve()}async acquire(){let t,e=new Promise(a=>{t=a}),r=this.currentPromise;return this.currentPromise=e,await r,t}},X=i=>{let t=i*(Math.PI/180),e=Math.cos(t),r=Math.sin(t);return[e,r,0,-r,e,0,0,0,1]},St=X(0),Wt=i=>[...i].map(t=>t.toString(16).padStart(2,"0")).join(""),Ht=i=>(i=i>>1&1431655765|(i&1431655765)<<1,i=i>>2&858993459|(i&858993459)<<2,i=i>>4&252645135|(i&252645135)<<4,i=i>>8&16711935|(i&16711935)<<8,i=i>>16&65535|(i&65535)<<16,i>>>0),K=(i,t,e)=>{let r=0,a=i.length-1,n=-1;for(;r<=a;){let s=r+a>>1,o=e(i[s]);o===t?(n=s,a=s-1):o<t?r=s+1:a=s-1}return n},E=(i,t,e)=>{let r=-1,a=0,n=i.length-1;for(;a<=n;){let s=a+(n-a+1)/2|0;e(i[s])<=t?(r=s,a=s+1):n=s-1}return r},M=()=>{let i,t;return{promise:new Promise((r,a)=>{i=r,t=a}),resolve:i,reject:t}},Lt=(i,t)=>{let e=i.indexOf(t);e!==-1&&i.splice(e,1)},Qt=(i,t)=>{for(let e=i.length-1;e>=0;e--)if(t(i[e]))return e;return-1},$t=async function*(i){Symbol.iterator in i?yield*i[Symbol.iterator]():yield*i[Symbol.asyncIterator]()},Kt=i=>{if(!(Symbol.iterator in i)&&!(Symbol.asyncIterator in i))throw new TypeError("Argument must be an iterable or async iterable.")};var xe=/(?:(.+?)\n)?((?:\d{2}:)?\d{2}:\d{2}.\d{3})\s+-->\s+((?:\d{2}:)?\d{2}:\d{2}.\d{3})/g,Or=/^WEBVTT(.|\n)*?\n{2}/,le=/<(?:(\d{2}):)?(\d{2}):(\d{2}).(\d{3})>/g,Ne=class{constructor(t){this.preambleText=null;this.preambleEmitted=!1;this.options=t}parse(t){t=t.replaceAll(`\r
`,`
`).replaceAll("\r",`
`),xe.lastIndex=0;let e;if(!this.preambleText){if(!Or.test(t))throw new Error("WebVTT preamble incorrect.");e=xe.exec(t);let r=t.slice(0,e?.index??t.length).trimEnd();if(!r)throw new Error("No WebVTT preamble provided.");this.preambleText=r,e&&(t=t.slice(e.index),xe.lastIndex=0)}for(;e=xe.exec(t);){let r=t.slice(0,e.index),a=e[1],n=e.index+e[0].length,s=t.indexOf(`
`,n)+1,o=t.slice(n,s).trim(),c=t.indexOf(`

`,n);c===-1&&(c=t.length);let u=We(e[2]),f=We(e[3])-u,m=t.slice(s,c).trim();t=t.slice(c).trimStart(),xe.lastIndex=0;let g={timestamp:u/1e3,duration:f/1e3,text:m,identifier:a,settings:o,notes:r},b={};this.preambleEmitted||(b.config={description:this.preambleText},this.preambleEmitted=!0),this.options.output(g,b)}}},Fr=/(?:(\d{2}):)?(\d{2}):(\d{2}).(\d{3})/,We=i=>{let t=Fr.exec(i);if(!t)throw new Error("Expected match.");return 60*60*1e3*Number(t[1]||"0")+60*1e3*Number(t[2])+1e3*Number(t[3])+Number(t[4])},He=i=>{let t=Math.floor(i/36e5),e=Math.floor(i%(60*60*1e3)/(60*1e3)),r=Math.floor(i%(60*1e3)/1e3),a=i%1e3;return t.toString().padStart(2,"0")+":"+e.toString().padStart(2,"0")+":"+r.toString().padStart(2,"0")+"."+a.toString().padStart(3,"0")};var Ce=class{constructor(t){this.writer=t;this.helper=new Uint8Array(8);this.helperView=new DataView(this.helper.buffer);this.offsets=new WeakMap}writeU32(t){this.helperView.setUint32(0,t,!1),this.writer.write(this.helper.subarray(0,4))}writeU64(t){this.helperView.setUint32(0,Math.floor(t/2**32),!1),this.helperView.setUint32(4,t,!1),this.writer.write(this.helper.subarray(0,8))}writeAscii(t){for(let e=0;e<t.length;e++)this.helperView.setUint8(e%8,t.charCodeAt(e)),e%8===7&&this.writer.write(this.helper);t.length%8!==0&&this.writer.write(this.helper.subarray(0,t.length%8))}writeBox(t){if(this.offsets.set(t,this.writer.getPos()),t.contents&&!t.children)this.writeBoxHeader(t,t.size??t.contents.byteLength+8),this.writer.write(t.contents);else{let e=this.writer.getPos();if(this.writeBoxHeader(t,0),t.contents&&this.writer.write(t.contents),t.children)for(let n of t.children)n&&this.writeBox(n);let r=this.writer.getPos(),a=t.size??r-e;this.writer.seek(e),this.writeBoxHeader(t,a),this.writer.seek(r)}}writeBoxHeader(t,e){this.writeU32(t.largeSize?1:e),this.writeAscii(t.type),t.largeSize&&this.writeU64(e)}measureBoxHeader(t){return 8+(t.largeSize?8:0)}patchBox(t){let e=this.offsets.get(t);l(e!==void 0);let r=this.writer.getPos();this.writer.seek(e),this.writeBox(t),this.writer.seek(r)}measureBox(t){if(t.contents&&!t.children)return this.measureBoxHeader(t)+t.contents.byteLength;{let e=this.measureBoxHeader(t);if(t.contents&&(e+=t.contents.byteLength),t.children)for(let r of t.children)r&&(e+=this.measureBox(r));return e}}},w=new Uint8Array(8),H=new DataView(w.buffer),A=i=>[(i%256+256)%256],y=i=>(H.setUint16(0,i,!1),[w[0],w[1]]),Vr=i=>(H.setInt16(0,i,!1),[w[0],w[1]]),qt=i=>(H.setUint32(0,i,!1),[w[1],w[2],w[3]]),h=i=>(H.setUint32(0,i,!1),[w[0],w[1],w[2],w[3]]),Xt=i=>(H.setInt32(0,i,!1),[w[0],w[1],w[2],w[3]]),ne=i=>(H.setUint32(0,Math.floor(i/2**32),!1),H.setUint32(4,i,!1),[w[0],w[1],w[2],w[3],w[4],w[5],w[6],w[7]]),At=i=>(H.setInt16(0,2**8*i,!1),[w[0],w[1]]),W=i=>(H.setInt32(0,2**16*i,!1),[w[0],w[1],w[2],w[3]]),vt=i=>(H.setInt32(0,2**30*i,!1),[w[0],w[1],w[2],w[3]]),_t=(i,t)=>{let e=[],r=i;do{let a=r&127;r>>=7,e.length>0&&(a|=128),e.push(a),t!==void 0&&t--}while(r>0||t);return e.reverse()},D=(i,t=!1)=>{let e=Array(i.length).fill(null).map((r,a)=>i.charCodeAt(a));return t&&e.push(0),e},It=i=>{let t=null;for(let e of i)(!t||e.timestamp>t.timestamp)&&(t=e);return t},Gt=i=>[W(i[0]),W(i[1]),vt(i[2]),W(i[3]),W(i[4]),vt(i[5]),W(i[6]),W(i[7]),vt(i[8])],S=(i,t,e)=>({type:i,contents:t&&new Uint8Array(t.flat(10)),children:e}),v=(i,t,e,r,a)=>S(i,[A(t),qt(e),r??[]],a),Yt=i=>i.fragmented?S("ftyp",[D("iso5"),h(512),D("iso5"),D("iso6"),D("mp41")]):S("ftyp",[D("isom"),h(512),D("isom"),i.holdsAvc?D("avc1"):[],D("mp41")]),Qe=i=>({type:"mdat",largeSize:i}),Zt=i=>({type:"free",size:i}),we=(i,t,e=!1)=>S("moov",void 0,[Mr(t,i),...i.map(r=>Dr(r,t)),e?hi(i):null]),Mr=(i,t)=>{let e=z(Math.max(0,...t.filter(s=>s.samples.length>0).map(s=>{let o=It(s.samples);return o.timestamp+o.duration})),Le),r=Math.max(0,...t.map(s=>s.track.id))+1,a=!J(i)||!J(e),n=a?ne:h;return v("mvhd",+a,0,[n(i),n(i),h(Le),n(e),W(1),At(1),Array(10).fill(0),Gt(St),Array(24).fill(0),h(r)])},Dr=(i,t)=>S("trak",void 0,[Pr(i,t),zr(i,t)]),Pr=(i,t)=>{let e=It(i.samples),r=z(e?e.timestamp+e.duration:0,Le),a=!J(t)||!J(r),n=a?ne:h,s;if(i.type==="video"){let o=i.track.metadata.rotation;s=o===void 0||typeof o=="number"?X(o??0):o}else s=St;return v("tkhd",+a,3,[n(t),n(t),h(i.track.id),h(0),n(r),Array(8).fill(0),y(0),y(i.track.id),At(i.type==="audio"?1:0),y(0),Gt(s),W(i.type==="video"?i.info.width:0),W(i.type==="video"?i.info.height:0)])},zr=(i,t)=>S("mdia",void 0,[Ur(i,t),Wr(i),Hr(i)]),Ur=(i,t)=>{let e=It(i.samples),r=z(e?e.timestamp+e.duration:0,i.timescale),a=!J(t)||!J(r),n=a?ne:h;return v("mdhd",+a,0,[n(t),n(t),h(i.timescale),n(r),y(21956),y(0)])},Br={video:"vide",audio:"soun",subtitle:"text"},Nr={video:"VideoHandler",audio:"SoundHandler",subtitle:"TextHandler"},Wr=i=>v("hdlr",0,0,[D("mhlr"),D(Br[i.type]),h(0),h(0),h(0),D(Nr[i.type],!0)]),Hr=i=>S("minf",void 0,[Kr[i.type](),jr(),Gr(i)]),Lr=()=>v("vmhd",0,1,[y(0),y(0),y(0),y(0)]),Qr=()=>v("smhd",0,0,[y(0),y(0)]),$r=()=>v("nmhd",0,0),Kr={video:Lr,audio:Qr,subtitle:$r},jr=()=>S("dinf",void 0,[qr()]),qr=()=>v("dref",0,0,[h(1)],[Xr()]),Xr=()=>v("url ",0,1),Gr=i=>{let t=i.compositionTimeOffsetTable.length>1||i.compositionTimeOffsetTable.some(e=>e.sampleCompositionTimeOffset!==0);return S("stbl",void 0,[Yr(i),ci(i),ui(i),di(i),li(i),mi(i),t?fi(i):null])},Yr=i=>{let t;return i.type==="video"?t=Zr(yi[i.track.source._codec],i):i.type==="audio"?t=ii(vi[i.track.source._codec],i):i.type==="subtitle"&&(t=si(Ai[i.track.source._codec],i)),l(t),v("stsd",0,0,[h(1)],[t])},Zr=(i,t)=>S(i,[Array(6).fill(0),y(1),y(0),y(0),Array(12).fill(0),y(t.info.width),y(t.info.height),h(4718592),h(4718592),h(0),y(1),Array(32).fill(0),y(24),Vr(65535)],[Si[t.track.source._codec](t),Be(t.info.decoderConfig.colorSpace)?Jr(t):null]),Jr=i=>S("colr",[D("nclx"),y(te[i.info.decoderConfig.colorSpace.primaries]),y(re[i.info.decoderConfig.colorSpace.transfer]),y(ie[i.info.decoderConfig.colorSpace.matrix]),A((i.info.decoderConfig.colorSpace.fullRange?1:0)<<7)]),ei=i=>i.info.decoderConfig&&S("avcC",[...ee(i.info.decoderConfig.description)]),ti=i=>i.info.decoderConfig&&S("hvcC",[...ee(i.info.decoderConfig.description)]),jt=i=>{if(!i.info.decoderConfig)return null;let t=i.info.decoderConfig;l(t.colorSpace);let e=t.codec.split("."),r=Number(e[1]),a=Number(e[2]),o=(Number(e[3])<<4)+(0<<1)+Number(t.colorSpace.fullRange);return v("vpcC",1,0,[A(r),A(a),A(o),A(2),A(2),A(2),y(0)])},ri=()=>S("av1C",[129,0,0,0]),ii=(i,t)=>S(i,[Array(6).fill(0),y(1),y(0),y(0),h(0),y(t.info.numberOfChannels),y(16),y(0),y(0),W(t.info.sampleRate)],[_i[t.track.source._codec](t)]),ni=i=>{let e=[...ee(i.info.decoderConfig.description??new ArrayBuffer(0))];return e=[...A(64),...A(21),...qt(0),...h(0),...h(0),...A(5),..._t(e.length),...e],e=[...y(1),...A(0),...A(4),..._t(e.length),...e,...A(6),...A(1),...A(2)],e=[...A(3),..._t(e.length),...e],v("esds",0,0,e)},ai=i=>{let t=3840,e=0,r=i.info.decoderConfig?.description;if(r){l(r.byteLength>=18);let a=ArrayBuffer.isView(r)?new DataView(r.buffer,r.byteOffset,r.byteLength):new DataView(r);t=a.getUint16(10,!0),e=a.getInt16(14,!0)}return S("dOps",[A(0),A(i.info.numberOfChannels),y(t),h(i.info.sampleRate),At(e),A(0)])},si=(i,t)=>S(i,[Array(6).fill(0),y(1)],[Ii[t.track.source._codec](t)]),oi=i=>S("vttC",[...P.encode(i.info.config.description)]);var ci=i=>v("stts",0,0,[h(i.timeToSampleTable.length),i.timeToSampleTable.map(t=>[h(t.sampleCount),h(t.sampleDelta)])]),ui=i=>{if(i.samples.every(e=>e.type==="key"))return null;let t=[...i.samples.entries()].filter(([,e])=>e.type==="key");return v("stss",0,0,[h(t.length),t.map(([e])=>h(e+1))])},di=i=>v("stsc",0,0,[h(i.compactlyCodedChunkTable.length),i.compactlyCodedChunkTable.map(t=>[h(t.firstChunk),h(t.samplesPerChunk),h(1)])]),li=i=>v("stsz",0,0,[h(0),h(i.samples.length),i.samples.map(t=>h(t.size))]),mi=i=>i.finalizedChunks.length>0&&F(i.finalizedChunks).offset>=2**32?v("co64",0,0,[h(i.finalizedChunks.length),i.finalizedChunks.map(t=>ne(t.offset))]):v("stco",0,0,[h(i.finalizedChunks.length),i.finalizedChunks.map(t=>h(t.offset))]),fi=i=>v("ctts",0,0,[h(i.compositionTimeOffsetTable.length),i.compositionTimeOffsetTable.map(t=>[h(t.sampleCount),h(t.sampleCompositionTimeOffset)])]),hi=i=>S("mvex",void 0,i.map(pi)),pi=i=>v("trex",0,0,[h(i.track.id),h(1),h(0),h(0),h(0)]),Et=(i,t)=>S("moof",void 0,[bi(i),...t.map(ki)]),bi=i=>v("mfhd",0,0,[h(i)]),Jt=i=>{let t=0,e=0,r=0,a=0,n=i.type==="delta";return e|=+n,n?t|=1:t|=2,t<<24|e<<16|r<<8|a},ki=i=>S("traf",void 0,[gi(i),Ti(i),xi(i)]),gi=i=>{l(i.currentChunk);let t=0;t|=8,t|=16,t|=32,t|=131072;let e=i.currentChunk.samples[1]??i.currentChunk.samples[0],r={duration:e.timescaleUnitsToNextSample,size:e.size,flags:Jt(e)};return v("tfhd",0,t,[h(i.track.id),h(r.duration),h(r.size),h(r.flags)])},Ti=i=>(l(i.currentChunk),v("tfdt",1,0,[ne(z(i.currentChunk.startTimestamp,i.timescale))])),xi=i=>{l(i.currentChunk);let t=i.currentChunk.samples.map(p=>p.timescaleUnitsToNextSample),e=i.currentChunk.samples.map(p=>p.size),r=i.currentChunk.samples.map(Jt),a=i.currentChunk.samples.map(p=>z(p.timestamp-p.decodeTimestamp,i.timescale)),n=new Set(t),s=new Set(e),o=new Set(r),c=new Set(a),u=o.size===2&&r[0]!==r[1],d=n.size>1,f=s.size>1,m=!u&&o.size>1,g=c.size>1||[...c].some(p=>p!==0),b=0;return b|=1,b|=4*+u,b|=256*+d,b|=512*+f,b|=1024*+m,b|=2048*+g,v("trun",1,b,[h(i.currentChunk.samples.length),h(i.currentChunk.offset-i.currentChunk.moofOffset||0),u?h(r[0]):[],i.currentChunk.samples.map((p,k)=>[d?h(t[k]):[],f?h(e[k]):[],m?h(r[k]):[],g?Xt(a[k]):[]])])},er=i=>S("mfra",void 0,[...i.map(Ci),wi()]),Ci=(i,t)=>v("tfra",1,0,[h(i.track.id),h(63),h(i.finalizedChunks.length),i.finalizedChunks.map(r=>[ne(z(r.samples[0].timestamp,i.timescale)),ne(r.moofOffset),h(t+1),h(1),h(1)])]),wi=()=>v("mfro",0,0,[h(0)]),tr=()=>S("vtte"),rr=(i,t,e,r,a)=>S("vttc",void 0,[a!==null?S("vsid",[Xt(a)]):null,e!==null?S("iden",[...P.encode(e)]):null,t!==null?S("ctim",[...P.encode(He(t))]):null,r!==null?S("sttg",[...P.encode(r)]):null,S("payl",[...P.encode(i)])]),ir=i=>S("vtta",[...P.encode(i)]),yi={avc:"avc1",hevc:"hvc1",vp8:"vp08",vp9:"vp09",av1:"av01"},Si={avc:ei,hevc:ti,vp8:jt,vp9:jt,av1:ri},vi={aac:"mp4a",opus:"Opus"},_i={aac:ni,opus:ai},Ai={webvtt:"wvtt"},Ii={webvtt:oi};var me=class{constructor(t){this.mutex=new q;this.trackTimestampInfo=new WeakMap;this.output=t}beforeTrackAdd(t){}onTrackClose(t){}validateAndNormalizeTimestamp(t,e,r){let a=e/1e6,n=this.trackTimestampInfo.get(t);if(!n){if(!r)throw new Error("First frame must be a key frame.");if(this.timestampsMustStartAtZero&&a>0)throw new Error(`Timestamps must start at zero (got ${a}s).`);n={timestampOffset:a,maxTimestamp:t.source._offsetTimestamps?0:a,lastKeyFrameTimestamp:t.source._offsetTimestamps?0:a},this.trackTimestampInfo.set(t,n)}if(t.source._offsetTimestamps&&(a-=n.timestampOffset),a<0)throw new Error(`Timestamps must be non-negative (got ${a}s).`);if(a<n.lastKeyFrameTimestamp)throw new Error(`Timestamp cannot be smaller than last key frame's timestamp (got ${a}s, last key frame at ${n.lastKeyFrameTimestamp}s).`);if(r){if(a<n.maxTimestamp)throw new Error(`Key frame timestamps cannot be smaller than any timestamp that came before (got ${a}s, max timestamp was ${n.maxTimestamp}s).`);n.lastKeyFrameTimestamp=a}return n.maxTimestamp=Math.max(n.maxTimestamp,a),a}};var ye=class{constructor(){this.ensureMonotonicity=!1}start(){}},fe=class extends ye{constructor(e){super();this.pos=0;this.buffer=new ArrayBuffer(2**16);this.bytes=new Uint8Array(this.buffer);this.maxPos=0;this.target=e}ensureSize(e){let r=this.buffer.byteLength;for(;r<e;)r*=2;if(r===this.buffer.byteLength)return;let a=new ArrayBuffer(r),n=new Uint8Array(a);n.set(this.bytes,0),this.buffer=a,this.bytes=n}write(e){this.ensureSize(this.pos+e.byteLength),this.bytes.set(e,this.pos),this.pos+=e.byteLength,this.maxPos=Math.max(this.maxPos,this.pos)}seek(e){this.pos=e}getPos(){return this.pos}async flush(){}async finalize(){this.ensureSize(this.pos),this.target.buffer=this.buffer.slice(0,Math.max(this.maxPos,this.pos))}getSlice(e,r){return this.bytes.slice(e,r)}},$e=class extends ye{constructor(e){super();this.pos=0;this.sections=[];this.lastFlushEnd=0;this.writer=null;this.target=e}start(){this.writer=this.target._writable.getWriter()}write(e){this.sections.push({data:e.slice(),start:this.pos}),this.pos+=e.byteLength}seek(e){this.pos=e}getPos(){return this.pos}async flush(){if(l(this.writer),this.sections.length===0)return;let e=[],r=[...this.sections].sort((a,n)=>a.start-n.start);e.push({start:r[0].start,size:r[0].data.byteLength});for(let a=1;a<r.length;a++){let n=e[e.length-1],s=r[a];s.start<=n.start+n.size?n.size=Math.max(n.size,s.start+s.data.byteLength-n.start):e.push({start:s.start,size:s.data.byteLength})}for(let a of e){a.data=new Uint8Array(a.size);for(let n of this.sections)a.start<=n.start&&n.start<a.start+a.size&&a.data.set(n.data,n.start-a.start);if(this.ensureMonotonicity&&a.start!==this.lastFlushEnd)throw new Error("Internal error: Monotonicity violation.");this.writer.desiredSize!==null&&this.writer.desiredSize<=0&&await this.writer.ready,this.writer.write({type:"write",data:a.data,position:a.start}),this.lastFlushEnd=a.start+a.data.byteLength}this.sections.length=0}finalize(){return l(this.writer),this.writer.close()}},Ei=2**24,Ri=2,Ke=class extends ye{constructor(e){super();this.pos=0;this.chunks=[];this.lastFlushEnd=0;this.writer=null;this.flushedChunkQueue=[];if(this.target=e,this.chunkSize=e._options?.chunkSize??Ei,!Number.isInteger(this.chunkSize)||this.chunkSize<2**10)throw new Error("Invalid StreamTarget options: chunkSize must be an integer not smaller than 1024.")}start(){this.writer=this.target._writable.getWriter()}write(e){this.writeDataIntoChunks(e,this.pos),this.queueChunksForFlush(),this.pos+=e.byteLength}seek(e){this.pos=e}getPos(){return this.pos}writeDataIntoChunks(e,r){let a=this.chunks.findIndex(u=>u.start<=r&&r<u.start+this.chunkSize);a===-1&&(a=this.createChunk(r));let n=this.chunks[a],s=r-n.start,o=e.subarray(0,Math.min(this.chunkSize-s,e.byteLength));n.data.set(o,s);let c={start:s,end:s+o.byteLength};if(this.insertSectionIntoChunk(n,c),n.written[0].start===0&&n.written[0].end===this.chunkSize&&(n.shouldFlush=!0),this.chunks.length>Ri){for(let u=0;u<this.chunks.length-1;u++)this.chunks[u].shouldFlush=!0;this.queueChunksForFlush()}o.byteLength<e.byteLength&&this.writeDataIntoChunks(e.subarray(o.byteLength),r+o.byteLength)}insertSectionIntoChunk(e,r){let a=0,n=e.written.length-1,s=-1;for(;a<=n;){let o=Math.floor(a+(n-a+1)/2);e.written[o].start<=r.start?(a=o+1,s=o):n=o-1}for(e.written.splice(s+1,0,r),(s===-1||e.written[s].end<r.start)&&s++;s<e.written.length-1&&e.written[s].end>=e.written[s+1].start;)e.written[s].end=Math.max(e.written[s].end,e.written[s+1].end),e.written.splice(s+1,1)}createChunk(e){let a={start:Math.floor(e/this.chunkSize)*this.chunkSize,data:new Uint8Array(this.chunkSize),written:[],shouldFlush:!1};return this.chunks.push(a),this.chunks.sort((n,s)=>n.start-s.start),this.chunks.indexOf(a)}queueChunksForFlush(e=!1){l(this.writer);for(let r=0;r<this.chunks.length;r++){let a=this.chunks[r];if(!(!a.shouldFlush&&!e)){for(let n of a.written){if(this.ensureMonotonicity&&a.start+n.start!==this.lastFlushEnd)throw new Error("Internal error: Monotonicity violation.");this.flushedChunkQueue.push({type:"write",data:a.data.subarray(n.start,n.end),position:a.start+n.start}),this.lastFlushEnd=a.start+n.end}this.chunks.splice(r--,1)}}}async flush(){if(l(this.writer),this.flushedChunkQueue.length!==0){for(let e of this.flushedChunkQueue)this.writer.desiredSize!==null&&this.writer.desiredSize<=0&&await this.writer.ready,this.writer.write(e);this.flushedChunkQueue.length=0}}async finalize(){return l(this.writer),this.queueChunksForFlush(!0),await this.flush(),this.writer.close()}};var G=class{constructor(){this._output=null}},he=class extends G{constructor(){super(...arguments);this.buffer=null}_createWriter(){return new fe(this)}},je=class extends G{constructor(t,e={}){if(super(),!(t instanceof WritableStream))throw new TypeError("StreamTarget requires a WritableStream instance.");if(e!=null&&typeof e!="object")throw new TypeError("StreamTarget options, when provided, must be an object.");if(e.chunked!==void 0&&typeof e.chunked!="boolean")throw new TypeError("options.chunked, when provided, must be a boolean.");if(e.chunkSize!==void 0&&(!Number.isInteger(e.chunkSize)||e.chunkSize<=0))throw new TypeError("options.chunkSize, when provided, must be a positive integer.");this._writable=t,this._options=e}_createWriter(){return this._options.chunked?new Ke(this):new $e(this)}};var ae=["avc","hevc","vp8","vp9","av1"],se=["aac","opus"],Se=["webvtt"],nr=[{maxMacroblocks:99,maxBitrate:64e3,level:10},{maxMacroblocks:396,maxBitrate:192e3,level:11},{maxMacroblocks:396,maxBitrate:384e3,level:12},{maxMacroblocks:396,maxBitrate:768e3,level:13},{maxMacroblocks:396,maxBitrate:2e6,level:20},{maxMacroblocks:792,maxBitrate:4e6,level:21},{maxMacroblocks:1620,maxBitrate:4e6,level:22},{maxMacroblocks:1620,maxBitrate:1e7,level:30},{maxMacroblocks:3600,maxBitrate:14e6,level:31},{maxMacroblocks:5120,maxBitrate:2e7,level:32},{maxMacroblocks:8192,maxBitrate:2e7,level:40},{maxMacroblocks:8192,maxBitrate:5e7,level:41},{maxMacroblocks:8704,maxBitrate:5e7,level:42},{maxMacroblocks:22080,maxBitrate:135e6,level:50},{maxMacroblocks:36864,maxBitrate:24e7,level:51},{maxMacroblocks:36864,maxBitrate:24e7,level:52},{maxMacroblocks:139264,maxBitrate:24e7,level:60},{maxMacroblocks:139264,maxBitrate:48e7,level:61},{maxMacroblocks:139264,maxBitrate:8e8,level:62}],ar=[{maxPictureSize:36864,maxBitrate:128e3,tier:"L",level:30},{maxPictureSize:122880,maxBitrate:15e5,tier:"L",level:60},{maxPictureSize:245760,maxBitrate:3e6,tier:"L",level:63},{maxPictureSize:552960,maxBitrate:6e6,tier:"L",level:90},{maxPictureSize:983040,maxBitrate:1e7,tier:"L",level:93},{maxPictureSize:2228224,maxBitrate:12e6,tier:"L",level:120},{maxPictureSize:2228224,maxBitrate:3e7,tier:"H",level:120},{maxPictureSize:2228224,maxBitrate:2e7,tier:"L",level:123},{maxPictureSize:2228224,maxBitrate:5e7,tier:"H",level:123},{maxPictureSize:8912896,maxBitrate:25e6,tier:"L",level:150},{maxPictureSize:8912896,maxBitrate:1e8,tier:"H",level:150},{maxPictureSize:8912896,maxBitrate:4e7,tier:"L",level:153},{maxPictureSize:8912896,maxBitrate:16e7,tier:"H",level:153},{maxPictureSize:8912896,maxBitrate:6e7,tier:"L",level:156},{maxPictureSize:8912896,maxBitrate:24e7,tier:"H",level:156},{maxPictureSize:35651584,maxBitrate:6e7,tier:"L",level:180},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:180},{maxPictureSize:35651584,maxBitrate:12e7,tier:"L",level:183},{maxPictureSize:35651584,maxBitrate:48e7,tier:"H",level:183},{maxPictureSize:35651584,maxBitrate:24e7,tier:"L",level:186},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:186}],sr=[{maxPictureSize:36864,maxBitrate:2e5,level:10},{maxPictureSize:73728,maxBitrate:8e5,level:11},{maxPictureSize:122880,maxBitrate:18e5,level:20},{maxPictureSize:245760,maxBitrate:36e5,level:21},{maxPictureSize:552960,maxBitrate:72e5,level:30},{maxPictureSize:983040,maxBitrate:12e6,level:31},{maxPictureSize:2228224,maxBitrate:18e6,level:40},{maxPictureSize:2228224,maxBitrate:3e7,level:41},{maxPictureSize:8912896,maxBitrate:6e7,level:50},{maxPictureSize:8912896,maxBitrate:12e7,level:51},{maxPictureSize:8912896,maxBitrate:18e7,level:52},{maxPictureSize:35651584,maxBitrate:18e7,level:60},{maxPictureSize:35651584,maxBitrate:24e7,level:61},{maxPictureSize:35651584,maxBitrate:48e7,level:62}],or=[{maxPictureSize:147456,maxBitrate:15e5,tier:"M",level:0},{maxPictureSize:278784,maxBitrate:3e6,tier:"M",level:1},{maxPictureSize:665856,maxBitrate:6e6,tier:"M",level:4},{maxPictureSize:1065024,maxBitrate:1e7,tier:"M",level:5},{maxPictureSize:2359296,maxBitrate:12e6,tier:"M",level:8},{maxPictureSize:2359296,maxBitrate:3e7,tier:"H",level:8},{maxPictureSize:2359296,maxBitrate:2e7,tier:"M",level:9},{maxPictureSize:2359296,maxBitrate:5e7,tier:"H",level:9},{maxPictureSize:8912896,maxBitrate:3e7,tier:"M",level:12},{maxPictureSize:8912896,maxBitrate:1e8,tier:"H",level:12},{maxPictureSize:8912896,maxBitrate:4e7,tier:"M",level:13},{maxPictureSize:8912896,maxBitrate:16e7,tier:"H",level:13},{maxPictureSize:8912896,maxBitrate:6e7,tier:"M",level:14},{maxPictureSize:8912896,maxBitrate:24e7,tier:"H",level:14},{maxPictureSize:35651584,maxBitrate:6e7,tier:"M",level:15},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:15},{maxPictureSize:35651584,maxBitrate:6e7,tier:"M",level:16},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:16},{maxPictureSize:35651584,maxBitrate:1e8,tier:"M",level:17},{maxPictureSize:35651584,maxBitrate:48e7,tier:"H",level:17},{maxPictureSize:35651584,maxBitrate:16e7,tier:"M",level:18},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:18},{maxPictureSize:35651584,maxBitrate:16e7,tier:"M",level:19},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:19}],cr=(i,t,e,r)=>{if(i==="avc"){let n=Math.ceil(t/16)*Math.ceil(e/16),s=nr.find(f=>n<=f.maxMacroblocks&&r<=f.maxBitrate)??F(nr),o=s?s.level:0,c="64".padStart(2,"0"),u="00",d=o.toString(16).padStart(2,"0");return`avc1.${c}${u}${d}`}else if(i==="hevc"){let a="",s="6",o=t*e,c=ar.find(d=>o<=d.maxPictureSize&&r<=d.maxBitrate)??F(ar);return`hev1.${a}1.${s}.${c.tier}${c.level}.B0`}else{if(i==="vp8")return"vp8";if(i==="vp9"){let a="00",n=t*e,s=sr.find(c=>n<=c.maxPictureSize&&r<=c.maxBitrate)??F(sr);return`vp09.${a}.${s.level}.08`}else if(i==="av1"){let n=t*e,s=or.find(c=>n<=c.maxPictureSize&&r<=c.maxBitrate)??F(or);return`av01.0.${s.level.toString().padStart(2,"0")}${s.tier}.08`}}throw new TypeError(`Unhandled codec '${i}'.`)},ur=(i,t)=>{if(i==="avc"){if(!t||t.byteLength<4)throw new TypeError("AVC description must be at least 4 bytes long.");return`avc1.${Wt(t.subarray(1,4))}`}else if(i==="hevc"){if(!t)throw new TypeError("HEVC description must be provided.");let e=new DataView(t.buffer,t.byteOffset,t.byteLength),r="hev1.",a=t[1]>>6&3,n=t[1]&31;r+=["","A","B","C"][a]+n,r+=".";let s=Ht(e.getUint32(2));r+=s.toString(16),r+=".";let o=t[1]>>5&1,c=t[12];r+=o===0?"L":"H",r+=c,r+=".";let u=[];for(let d=0;d<6;d++){let f=t[d+13];u.push(f)}for(;u[u.length-1]===0;)u.pop();return r+=u.map(d=>d.toString(16)).join("."),r}throw new TypeError(`Unhandled codec '${i}'.`)},dr=(i,t,e)=>{if(i==="aac")return t>=2&&e<=24e3?"mp4a.40.29":e<=24e3?"mp4a.40.5":"mp4a.40.2";if(i==="opus")return"opus";if(i==="vorbis")return"vorbis";throw new TypeError(`Unhandled codec '${i}'.`)},lr=(i,t)=>{if(i==="aac")return`mp4a.40.${Rt(t).objectType}`;if(i==="opus")return"opus";if(i==="vorbis")return"vorbis";throw new TypeError(`Unhandled codec '${i}'.`)},Rt=i=>{if(!i||i.byteLength<2)throw new TypeError("AAC description must be at least 2 bytes long.");let t=0,e=V(i,t,t+5);t+=5,e===31&&(e=32+V(i,t,t+6),t+=6);let r=V(i,t,t+4);t+=4;let a=null;if(r===15)a=V(i,t,t+24),t+=24;else{let o=[96e3,88200,64e3,48e3,44100,32e3,24e3,22050,16e3,12e3,11025,8e3,7350];r<o.length&&(a=o[r])}let n=V(i,t,t+4);t+=4;let s=null;return n>=1&&n<=7&&(s={1:1,2:2,3:3,4:4,5:5,6:6,7:8}[n]),{objectType:e,frequencyIndex:r,sampleRate:a,channelConfiguration:n,numberOfChannels:s}},mr=i=>i==="avc"?{avc:{format:"avc"}}:i==="hevc"?{hevc:{format:"hevc"}}:{},fr=i=>i==="aac"?{aac:{format:"aac"}}:i==="opus"?{opus:{format:"opus"}}:{},qe=i=>{if(!i)throw new TypeError("Video chunk metadata must be provided.");if(typeof i!="object")throw new TypeError("Video chunk metadata must be an object.");if(!i.decoderConfig)throw new TypeError("Video chunk metadata must include a decoder configuration.");if(typeof i.decoderConfig!="object")throw new TypeError("Video chunk metadata decoder configuration must be an object.");if(typeof i.decoderConfig.codec!="string")throw new TypeError("Video chunk metadata decoder configuration must specify a codec string.");if(!Number.isInteger(i.decoderConfig.codedWidth)||i.decoderConfig.codedWidth<=0)throw new TypeError("Video chunk metadata decoder configuration must specify a valid codedWidth (positive integer).");if(!Number.isInteger(i.decoderConfig.codedHeight)||i.decoderConfig.codedHeight<=0)throw new TypeError("Video chunk metadata decoder configuration must specify a valid codedHeight (positive integer).");if(i.decoderConfig.description!==void 0&&!yt(i.decoderConfig.description))throw new TypeError("Video chunk metadata decoder configuration description, when defined, must be an ArrayBuffer or an ArrayBuffer view.");if(i.decoderConfig.colorSpace!==void 0){let{colorSpace:t}=i.decoderConfig;if(typeof t!="object")throw new TypeError("Video chunk metadata decoder configuration colorSpace, when provided, must be an object.");let e=Object.keys(te);if(t.primaries!=null&&!e.includes(t.primaries))throw new TypeError(`Video chunk metadata decoder configuration colorSpace primaries, when defined, must be one of ${e.join(", ")}.`);let r=Object.keys(re);if(t.transfer!=null&&!r.includes(t.transfer))throw new TypeError(`Video chunk metadata decoder configuration colorSpace transfer, when defined, must be one of ${r.join(", ")}.`);let a=Object.keys(ie);if(t.matrix!=null&&!a.includes(t.matrix))throw new TypeError(`Video chunk metadata decoder configuration colorSpace matrix, when defined, must be one of ${a.join(", ")}.`);if(t.fullRange!=null&&typeof t.fullRange!="boolean")throw new TypeError("Video chunk metadata decoder configuration colorSpace fullRange, when defined, must be a boolean.")}if((i.decoderConfig.codec.startsWith("avc1")||i.decoderConfig.codec.startsWith("avc3"))&&!i.decoderConfig.description)throw new TypeError("Video chunk metadata decoder configuration for AVC must include a description, which is expected to be an AVCDecoderConfigurationRecord as specified in ISO 14496-15.");if((i.decoderConfig.codec.startsWith("hev1")||i.decoderConfig.codec.startsWith("hvc1"))&&!i.decoderConfig.description)throw new TypeError("Video chunk metadata decoder configuration for HEVC must include a description, which is expected to be an HEVCDecoderConfigurationRecord as specified in ISO 14496-15.");if((i.decoderConfig.codec==="vp8"||i.decoderConfig.codec.startsWith("vp09"))&&i.decoderConfig.colorSpace===void 0)throw new TypeError("Video chunk metadata decoder configuration for VP8/VP9 must include a colorSpace.")},Xe=i=>{if(!i)throw new TypeError("Audio chunk metadata must be provided.");if(typeof i!="object")throw new TypeError("Audio chunk metadata must be an object.");if(!i.decoderConfig)throw new TypeError("Audio chunk metadata must include a decoder configuration.");if(typeof i.decoderConfig!="object")throw new TypeError("Audio chunk metadata decoder configuration must be an object.");if(typeof i.decoderConfig.codec!="string")throw new TypeError("Audio chunk metadata decoder configuration must specify a codec string.");if(!Number.isInteger(i.decoderConfig.sampleRate)||i.decoderConfig.sampleRate<=0)throw new TypeError("Audio chunk metadata decoder configuration must specify a valid sampleRate (positive integer).");if(!Number.isInteger(i.decoderConfig.numberOfChannels)||i.decoderConfig.numberOfChannels<=0)throw new TypeError("Audio chunk metadata decoder configuration must specify a valid numberOfChannels (positive integer).");if(i.decoderConfig.description!==void 0&&!yt(i.decoderConfig.description))throw new TypeError("Audio chunk metadata decoder configuration description, when defined, must be an ArrayBuffer or an ArrayBuffer view.");if(i.decoderConfig.codec.startsWith("mp4a")&&!i.decoderConfig.description)throw new TypeError("Audio chunk metadata decoder configuration for AAC must include a description, which is expected to be an AudioSpecificConfig as specified in ISO 14496-3.");if(i.decoderConfig.codec==="opus"&&i.decoderConfig.description&&i.decoderConfig.description.byteLength<18)throw new TypeError("Invalid decoder description provided for Opus; must be at least 18 bytes long.")},Ge=i=>{if(!i)throw new TypeError("Subtitle metadata must be provided.");if(typeof i!="object")throw new TypeError("Subtitle metadata must be an object.");if(!i.config)throw new TypeError("Subtitle metadata must include a config object.");if(typeof i.config!="object")throw new TypeError("Subtitle metadata config must be an object.");if(typeof i.config.description!="string")throw new TypeError("Subtitle metadata config description must be a string.")};var Le=1e3,Oi=2082844800,z=(i,t,e=!0)=>{let r=i*t;return e?Math.round(r):r},Ye=class extends me{constructor(e,r){super(e);this.timestampsMustStartAtZero=!0;this.auxTarget=new he;this.auxWriter=this.auxTarget._createWriter();this.auxBoxWriter=new Ce(this.auxWriter);this.ftypSize=null;this.mdat=null;this.trackDatas=[];this.creationTime=Math.floor(Date.now()/1e3)+Oi;this.finalizedChunks=[];this.nextFragmentNumber=1;this.writer=e._writer,this.boxWriter=new Ce(this.writer);let a=this.writer instanceof fe?"in-memory":!1;this.fastStart=r._options.fastStart??a,(this.fastStart==="in-memory"||this.fastStart==="fragmented")&&(this.writer.ensureMonotonicity=!0)}async start(){let e=await this.mutex.acquire(),r=this.output._tracks.some(a=>a.type==="video"&&a.source._codec==="avc");this.boxWriter.writeBox(Yt({holdsAvc:r,fragmented:this.fastStart==="fragmented"})),this.ftypSize=this.writer.getPos(),this.fastStart==="in-memory"?this.mdat=Qe(!1):this.fastStart==="fragmented"||(this.mdat=Qe(!0),this.boxWriter.writeBox(this.mdat)),await this.writer.flush(),e()}getVideoTrackData(e,r){let a=this.trackDatas.find(s=>s.track===e);if(a)return a;qe(r),l(r),l(r.decoderConfig),l(r.decoderConfig.codedWidth!==void 0),l(r.decoderConfig.codedHeight!==void 0);let n={track:e,type:"video",info:{width:r.decoderConfig.codedWidth,height:r.decoderConfig.codedHeight,decoderConfig:r.decoderConfig},timescale:e.metadata.frameRate??57600,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[]};return this.trackDatas.push(n),this.trackDatas.sort((s,o)=>s.track.id-o.track.id),n}getAudioTrackData(e,r){let a=this.trackDatas.find(s=>s.track===e);if(a)return a;Xe(r),l(r),l(r.decoderConfig);let n={track:e,type:"audio",info:{numberOfChannels:r.decoderConfig.numberOfChannels,sampleRate:r.decoderConfig.sampleRate,decoderConfig:r.decoderConfig},timescale:r.decoderConfig.sampleRate,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[]};return this.trackDatas.push(n),this.trackDatas.sort((s,o)=>s.track.id-o.track.id),n}getSubtitleTrackData(e,r){let a=this.trackDatas.find(s=>s.track===e);if(a)return a;Ge(r),l(r),l(r.config);let n={track:e,type:"subtitle",info:{config:r.config},timescale:1e3,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[],lastCueEndTimestamp:0,cueQueue:[],nextSourceId:0,cueToSourceId:new WeakMap};return this.trackDatas.push(n),this.trackDatas.sort((s,o)=>s.track.id-o.track.id),this.validateAndNormalizeTimestamp(e,0,!0),n}async addEncodedVideoChunk(e,r,a){let n=await this.mutex.acquire();try{let s=this.getVideoTrackData(e,a),o=new Uint8Array(r.byteLength);r.copyTo(o);let c=this.validateAndNormalizeTimestamp(s.track,r.timestamp,r.type==="key"),u=this.createSampleForTrack(s,o,c,(r.duration??0)/1e6,r.type);await this.registerSample(s,u)}finally{n()}}async addEncodedAudioChunk(e,r,a){let n=await this.mutex.acquire();try{let s=this.getAudioTrackData(e,a),o=new Uint8Array(r.byteLength);r.copyTo(o);let c=r.type,u=this.validateAndNormalizeTimestamp(s.track,r.timestamp,c==="key"),d=this.createSampleForTrack(s,o,u,(r.duration??0)/1e6,c);await this.registerSample(s,d)}finally{n()}}async addSubtitleCue(e,r,a){let n=await this.mutex.acquire();try{let s=this.getSubtitleTrackData(e,a);this.validateAndNormalizeTimestamp(s.track,1e6*r.timestamp,!0),e.source._codec==="webvtt"&&(s.cueQueue.push(r),await this.processWebVTTCues(s,r.timestamp))}finally{n()}}async processWebVTTCues(e,r){for(;e.cueQueue.length>0;){let a=new Set([]);for(let d of e.cueQueue)l(d.timestamp<=r),l(e.lastCueEndTimestamp<=d.timestamp+d.duration),a.add(Math.max(d.timestamp,e.lastCueEndTimestamp)),a.add(d.timestamp+d.duration);let n=[...a].sort((d,f)=>d-f),s=n[0],o=n[1]??s;if(r<o)break;if(e.lastCueEndTimestamp<s){this.auxWriter.seek(0);let d=tr();this.auxBoxWriter.writeBox(d);let f=this.auxWriter.getSlice(0,this.auxWriter.getPos()),m=this.createSampleForTrack(e,f,e.lastCueEndTimestamp,s-e.lastCueEndTimestamp,"key");await this.registerSample(e,m),e.lastCueEndTimestamp=s}this.auxWriter.seek(0);for(let d=0;d<e.cueQueue.length;d++){let f=e.cueQueue[d];if(f.timestamp>=o)break;le.lastIndex=0;let m=le.test(f.text),g=f.timestamp+f.duration,b=e.cueToSourceId.get(f);if(b===void 0&&o<g&&(b=e.nextSourceId++,e.cueToSourceId.set(f,b)),f.notes){let k=ir(f.notes);this.auxBoxWriter.writeBox(k)}let p=rr(f.text,m?s:null,f.identifier??null,f.settings??null,b??null);this.auxBoxWriter.writeBox(p),g===o&&e.cueQueue.splice(d--,1)}let c=this.auxWriter.getSlice(0,this.auxWriter.getPos()),u=this.createSampleForTrack(e,c,s,o-s,"key");await this.registerSample(e,u),e.lastCueEndTimestamp=o}}createSampleForTrack(e,r,a,n,s){return{timestamp:a,decodeTimestamp:a,duration:n,data:r,size:r.byteLength,type:s,timescaleUnitsToNextSample:z(n,e.timescale)}}processTimestamps(e){if(e.timestampProcessingQueue.length===0)return;let r=e.timestampProcessingQueue.map(a=>a.timestamp).sort((a,n)=>a-n);for(let a=0;a<e.timestampProcessingQueue.length;a++){let n=e.timestampProcessingQueue[a];n.decodeTimestamp=r[a];let s=z(n.timestamp-n.decodeTimestamp,e.timescale),o=z(n.duration,e.timescale);if(e.lastTimescaleUnits!==null){l(e.lastSample);let c=z(n.decodeTimestamp,e.timescale,!1),u=Math.round(c-e.lastTimescaleUnits);if(e.lastTimescaleUnits+=u,e.lastSample.timescaleUnitsToNextSample=u,this.fastStart!=="fragmented"){let d=F(e.timeToSampleTable);if(l(d),d.sampleCount===1){d.sampleDelta=u;let m=e.timeToSampleTable[e.timeToSampleTable.length-2];m&&m.sampleDelta===u&&(m.sampleCount++,e.timeToSampleTable.pop(),d=m)}else d.sampleDelta!==u&&(d.sampleCount--,e.timeToSampleTable.push(d={sampleCount:1,sampleDelta:u}));d.sampleDelta===o?d.sampleCount++:e.timeToSampleTable.push({sampleCount:1,sampleDelta:o});let f=F(e.compositionTimeOffsetTable);l(f),f.sampleCompositionTimeOffset===s?f.sampleCount++:e.compositionTimeOffsetTable.push({sampleCount:1,sampleCompositionTimeOffset:s})}}else e.lastTimescaleUnits=0,this.fastStart!=="fragmented"&&(e.timeToSampleTable.push({sampleCount:1,sampleDelta:o}),e.compositionTimeOffsetTable.push({sampleCount:1,sampleCompositionTimeOffset:s}));e.lastSample=n}e.timestampProcessingQueue.length=0}async registerSample(e,r){this.fastStart==="fragmented"?(e.sampleQueue.push(r),await this.interleaveSamples()):await this.addSampleToTrack(e,r)}async addSampleToTrack(e,r){r.type==="key"&&this.processTimestamps(e),this.fastStart!=="fragmented"&&e.samples.push(r);let a=!1;if(!e.currentChunk)a=!0;else{let n=r.timestamp-e.currentChunk.startTimestamp;if(this.fastStart==="fragmented"){let s=this.trackDatas.every(o=>{if(e===o)return r.type==="key";let c=o.sampleQueue[0];return c&&c.type==="key"});n>=1&&s&&(a=!0,await this.finalizeFragment())}else a=n>=.5}a&&(e.currentChunk&&await this.finalizeCurrentChunk(e),e.currentChunk={startTimestamp:r.timestamp,samples:[],offset:null,moofOffset:null}),l(e.currentChunk),e.currentChunk.samples.push(r),e.timestampProcessingQueue.push(r)}async finalizeCurrentChunk(e){if(l(this.fastStart!=="fragmented"),!!e.currentChunk){if(e.finalizedChunks.push(e.currentChunk),this.finalizedChunks.push(e.currentChunk),(e.compactlyCodedChunkTable.length===0||F(e.compactlyCodedChunkTable).samplesPerChunk!==e.currentChunk.samples.length)&&e.compactlyCodedChunkTable.push({firstChunk:e.finalizedChunks.length,samplesPerChunk:e.currentChunk.samples.length}),this.fastStart==="in-memory"){e.currentChunk.offset=0;return}e.currentChunk.offset=this.writer.getPos();for(let r of e.currentChunk.samples)l(r.data),this.writer.write(r.data),r.data=null;await this.writer.flush()}}async interleaveSamples(){l(this.fastStart==="fragmented");for(let e of this.output._tracks)if(!e.source._closed&&!this.trackDatas.some(r=>r.track===e))return;e:for(;;){let e=null,r=1/0;for(let n of this.trackDatas){if(n.sampleQueue.length===0&&!n.track.source._closed)break e;n.sampleQueue.length>0&&n.sampleQueue[0].timestamp<r&&(e=n,r=n.sampleQueue[0].timestamp)}if(!e)break;let a=e.sampleQueue.shift();await this.addSampleToTrack(e,a)}}async finalizeFragment(e=!0){l(this.fastStart==="fragmented");let r=this.nextFragmentNumber++;if(r===1){let u=we(this.trackDatas,this.creationTime,!0);this.boxWriter.writeBox(u)}let a=this.trackDatas.filter(u=>u.currentChunk),n=this.writer.getPos(),s=Et(r,a);this.boxWriter.writeBox(s);{let u=Qe(!1),d=0;for(let m of a)for(let g of m.currentChunk.samples)d+=g.size;let f=this.boxWriter.measureBox(u)+d;f>=2**32&&(u.largeSize=!0,f=this.boxWriter.measureBox(u)+d),u.size=f,this.boxWriter.writeBox(u)}for(let u of a){u.currentChunk.offset=this.writer.getPos(),u.currentChunk.moofOffset=n;for(let d of u.currentChunk.samples)this.writer.write(d.data),d.data=null}let o=this.writer.getPos();this.writer.seek(this.boxWriter.offsets.get(s));let c=Et(r,a);this.boxWriter.writeBox(c),this.writer.seek(o);for(let u of a)u.finalizedChunks.push(u.currentChunk),this.finalizedChunks.push(u.currentChunk),u.currentChunk=null;e&&await this.writer.flush()}async onTrackClose(e){let r=await this.mutex.acquire();if(e.type==="subtitle"&&e.source._codec==="webvtt"){let a=this.trackDatas.find(n=>n.track===e);a&&await this.processWebVTTCues(a,1/0)}this.fastStart==="fragmented"&&await this.interleaveSamples(),r()}async finalize(){let e=await this.mutex.acquire();for(let r of this.trackDatas)r.type==="subtitle"&&r.track.source._codec==="webvtt"&&await this.processWebVTTCues(r,1/0);if(this.fastStart==="fragmented"){for(let r of this.trackDatas){for(let a of r.sampleQueue)await this.addSampleToTrack(r,a);this.processTimestamps(r)}await this.finalizeFragment(!1)}else for(let r of this.trackDatas)this.processTimestamps(r),await this.finalizeCurrentChunk(r);if(this.fastStart==="in-memory"){l(this.mdat);let r;for(let n=0;n<2;n++){let s=we(this.trackDatas,this.creationTime),o=this.boxWriter.measureBox(s);r=this.boxWriter.measureBox(this.mdat);let c=this.writer.getPos()+o+r;for(let u of this.finalizedChunks){u.offset=c;for(let{data:d}of u.samples)l(d),c+=d.byteLength,r+=d.byteLength}if(c<2**32)break;r>=2**32&&(this.mdat.largeSize=!0)}let a=we(this.trackDatas,this.creationTime);this.boxWriter.writeBox(a),this.mdat.size=r,this.boxWriter.writeBox(this.mdat);for(let n of this.finalizedChunks)for(let s of n.samples)l(s.data),this.writer.write(s.data),s.data=null}else if(this.fastStart==="fragmented"){let r=this.writer.getPos(),a=er(this.trackDatas);this.boxWriter.writeBox(a);let n=this.writer.getPos()-r;this.writer.seek(this.writer.getPos()-4),this.boxWriter.writeU32(n)}else{l(this.mdat),l(this.ftypSize!==null);let r=this.boxWriter.offsets.get(this.mdat);l(r!==void 0);let a=this.writer.getPos()-r;this.mdat.size=a,this.mdat.largeSize=a>=2**32,this.boxWriter.patchBox(this.mdat);let n=we(this.trackDatas,this.creationTime);if(typeof this.fastStart=="object"){this.writer.seek(this.ftypSize),this.boxWriter.writeBox(n);let s=r-this.writer.getPos();this.boxWriter.writeBox(Zt(s))}else this.boxWriter.writeBox(n)}e()}};var ve=class{constructor(t){this.value=t}},pe=class{constructor(t){this.value=t}},_e=class{constructor(t){this.value=t}};var Ot=i=>i<256?1:i<65536?2:i<1<<24?3:i<2**32?4:i<2**40?5:6,Ft=i=>i>=-64&&i<64?1:i>=-8192&&i<8192?2:i>=-(1<<20)&&i<1<<20?3:i>=-(1<<27)&&i<1<<27?4:i>=-(2**34)&&i<2**34?5:6,hr=i=>{if(i<127)return 1;if(i<16383)return 2;if(i<(1<<21)-1)return 3;if(i<(1<<28)-1)return 4;if(i<2**35-1)return 5;if(i<2**42-1)return 6;throw new Error("EBML VINT size not supported "+i)};var Vt=2**15,pr="https://github.com/Vanilagy/webm-muxer",br=6,kr=5,Fi={avc:"V_MPEG4/ISO/AVC",hevc:"V_MPEGH/ISO/HEVC",vp8:"V_VP8",vp9:"V_VP9",av1:"V_AV1",aac:"A_AAC",opus:"A_OPUS",webvtt:"S_TEXT/WEBVTT"},Vi={video:1,audio:2,subtitle:17},Ze=class extends me{constructor(e,r){super(e);this.timestampsMustStartAtZero=!1;this.helper=new Uint8Array(8);this.helperView=new DataView(this.helper.buffer);this.offsets=new WeakMap;this.dataOffsets=new WeakMap;this.trackDatas=[];this.segment=null;this.segmentInfo=null;this.seekHead=null;this.tracksElement=null;this.segmentDuration=null;this.cues=null;this.currentCluster=null;this.currentClusterMsTimestamp=null;this.trackDatasInCurrentCluster=new Set;this.duration=0;this.writer=e._writer,this.format=r,this.format._options.streamable&&(this.writer.ensureMonotonicity=!0)}writeByte(e){this.helperView.setUint8(0,e),this.writer.write(this.helper.subarray(0,1))}writeFloat32(e){this.helperView.setFloat32(0,e,!1),this.writer.write(this.helper.subarray(0,4))}writeFloat64(e){this.helperView.setFloat64(0,e,!1),this.writer.write(this.helper)}writeUnsignedInt(e,r=Ot(e)){let a=0;switch(r){case 6:this.helperView.setUint8(a++,e/2**40|0);case 5:this.helperView.setUint8(a++,e/2**32|0);case 4:this.helperView.setUint8(a++,e>>24);case 3:this.helperView.setUint8(a++,e>>16);case 2:this.helperView.setUint8(a++,e>>8);case 1:this.helperView.setUint8(a++,e);break;default:throw new Error("Bad UINT size "+r)}this.writer.write(this.helper.subarray(0,a))}writeSignedInt(e,r=Ft(e)){e<0&&(e+=2**(r*8)),this.writeUnsignedInt(e,r)}writeEBMLVarInt(e,r=hr(e)){let a=0;switch(r){case 1:this.helperView.setUint8(a++,128|e);break;case 2:this.helperView.setUint8(a++,64|e>>8),this.helperView.setUint8(a++,e);break;case 3:this.helperView.setUint8(a++,32|e>>16),this.helperView.setUint8(a++,e>>8),this.helperView.setUint8(a++,e);break;case 4:this.helperView.setUint8(a++,16|e>>24),this.helperView.setUint8(a++,e>>16),this.helperView.setUint8(a++,e>>8),this.helperView.setUint8(a++,e);break;case 5:this.helperView.setUint8(a++,8|e/2**32&7),this.helperView.setUint8(a++,e>>24),this.helperView.setUint8(a++,e>>16),this.helperView.setUint8(a++,e>>8),this.helperView.setUint8(a++,e);break;case 6:this.helperView.setUint8(a++,4|e/2**40&3),this.helperView.setUint8(a++,e/2**32|0),this.helperView.setUint8(a++,e>>24),this.helperView.setUint8(a++,e>>16),this.helperView.setUint8(a++,e>>8),this.helperView.setUint8(a++,e);break;default:throw new Error("Bad EBML VINT size "+r)}this.writer.write(this.helper.subarray(0,a))}writeString(e){this.writer.write(new Uint8Array(e.split("").map(r=>r.charCodeAt(0))))}writeEBML(e){if(e!==null){if(e instanceof Uint8Array)this.writer.write(e);else if(Array.isArray(e))for(let r of e)this.writeEBML(r);else if(this.offsets.set(e,this.writer.getPos()),this.writeUnsignedInt(e.id),Array.isArray(e.data)){let r=this.writer.getPos(),a=e.size===-1?1:e.size??4;e.size===-1?this.writeByte(255):this.writer.seek(this.writer.getPos()+a);let n=this.writer.getPos();if(this.dataOffsets.set(e,n),this.writeEBML(e.data),e.size!==-1){let s=this.writer.getPos()-n,o=this.writer.getPos();this.writer.seek(r),this.writeEBMLVarInt(s,a),this.writer.seek(o)}}else if(typeof e.data=="number"){let r=e.size??Ot(e.data);this.writeEBMLVarInt(r),this.writeUnsignedInt(e.data,r)}else if(typeof e.data=="string")this.writeEBMLVarInt(e.data.length),this.writeString(e.data);else if(e.data instanceof Uint8Array)this.writeEBMLVarInt(e.data.byteLength,e.size),this.writer.write(e.data);else if(e.data instanceof ve)this.writeEBMLVarInt(4),this.writeFloat32(e.data.value);else if(e.data instanceof pe)this.writeEBMLVarInt(8),this.writeFloat64(e.data.value);else if(e.data instanceof _e){let r=e.size??Ft(e.data.value);this.writeEBMLVarInt(r),this.writeSignedInt(e.data.value,r)}}}beforeTrackAdd(e){if(this.format instanceof oe)if(e.type==="video"){if(!["vp8","vp9","av1"].includes(e.source._codec))throw new Error("WebM only supports VP8, VP9 and AV1 as video codecs. Switching to MKV removes this restriction.")}else if(e.type==="audio"){if(!["opus","vorbis"].includes(e.source._codec))throw new Error("WebM only supports Opus and Vorbis as audio codecs. Switching to MKV removes this restriction.")}else if(e.type==="subtitle"){if(e.source._codec!=="webvtt")throw new Error("WebM only supports WebVTT as subtitle codec. Switching to MKV removes this restriction.")}else throw new Error("WebM only supports video, audio and subtitle tracks. Switching to MKV removes this restriction.")}async start(){let e=await this.mutex.acquire();this.writeEBMLHeader(),this.format._options.streamable||this.createSeekHead(),this.createSegmentInfo(),this.createCues(),await this.writer.flush(),e()}writeEBMLHeader(){let e={id:440786851,data:[{id:17030,data:1},{id:17143,data:1},{id:17138,data:4},{id:17139,data:8},{id:17026,data:this.format instanceof oe?"webm":"matroska"},{id:17031,data:2},{id:17029,data:2}]};this.writeEBML(e)}createSeekHead(){let e=new Uint8Array([28,83,187,107]),r=new Uint8Array([21,73,169,102]),a=new Uint8Array([22,84,174,107]),n={id:290298740,data:[{id:19899,data:[{id:21419,data:e},{id:21420,size:5,data:0}]},{id:19899,data:[{id:21419,data:r},{id:21420,size:5,data:0}]},{id:19899,data:[{id:21419,data:a},{id:21420,size:5,data:0}]}]};this.seekHead=n}createSegmentInfo(){let e={id:17545,data:new pe(0)};this.segmentDuration=e;let r={id:357149030,data:[{id:2807729,data:1e6},{id:19840,data:pr},{id:22337,data:pr},this.format._options.streamable?null:e]};this.segmentInfo=r}createTracks(){let e={id:374648427,data:[]};this.tracksElement=e;for(let r of this.trackDatas)e.data.push({id:174,data:[{id:215,data:r.track.id},{id:29637,data:r.track.id},{id:131,data:Vi[r.type]},{id:134,data:Fi[r.track.source._codec]},r.type==="video"?this.videoSpecificTrackInfo(r):null,r.type==="audio"?this.audioSpecificTrackInfo(r):null,r.type==="subtitle"?this.subtitleSpecificTrackInfo(r):null]})}videoSpecificTrackInfo(e){let r=[e.info.decoderConfig.description?{id:25506,data:ee(e.info.decoderConfig.description)}:null,e.track.metadata.frameRate?{id:2352003,data:1e9/e.track.metadata.frameRate}:null],a=e.info.decoderConfig.colorSpace,n={id:224,data:[{id:176,data:e.info.width},{id:186,data:e.info.height},Be(a)?{id:21936,data:[{id:21937,data:ie[a.matrix]},{id:21946,data:re[a.transfer]},{id:21947,data:te[a.primaries]},{id:21945,data:a.fullRange?2:1}]}:null]};return r.push(n),r}audioSpecificTrackInfo(e){return[e.info.decoderConfig.description?{id:25506,data:ee(e.info.decoderConfig.description)}:null,{id:225,data:[{id:181,data:new ve(e.info.sampleRate)},{id:159,data:e.info.numberOfChannels}]}]}subtitleSpecificTrackInfo(e){return[{id:25506,data:P.encode(e.info.config.description)}]}createSegment(){let e={id:408125543,size:this.format._options.streamable?-1:br,data:[this.format._options.streamable?null:this.seekHead,this.segmentInfo,this.tracksElement]};this.segment=e,this.writeEBML(e)}createCues(){this.cues={id:475249515,data:[]}}get segmentDataOffset(){return l(this.segment),this.dataOffsets.get(this.segment)}getVideoTrackData(e,r){let a=this.trackDatas.find(s=>s.track===e);if(a)return a;qe(r),l(r),l(r.decoderConfig),l(r.decoderConfig.codedWidth!==void 0),l(r.decoderConfig.codedHeight!==void 0);let n={track:e,type:"video",info:{width:r.decoderConfig.codedWidth,height:r.decoderConfig.codedHeight,decoderConfig:r.decoderConfig},chunkQueue:[],lastWrittenMsTimestamp:null};return this.trackDatas.push(n),this.trackDatas.sort((s,o)=>s.track.id-o.track.id),n}getAudioTrackData(e,r){let a=this.trackDatas.find(s=>s.track===e);if(a)return a;Xe(r),l(r),l(r.decoderConfig);let n={track:e,type:"audio",info:{numberOfChannels:r.decoderConfig.numberOfChannels,sampleRate:r.decoderConfig.sampleRate,decoderConfig:r.decoderConfig},chunkQueue:[],lastWrittenMsTimestamp:null};return this.trackDatas.push(n),this.trackDatas.sort((s,o)=>s.track.id-o.track.id),n}getSubtitleTrackData(e,r){let a=this.trackDatas.find(s=>s.track===e);if(a)return a;Ge(r),l(r),l(r.config);let n={track:e,type:"subtitle",info:{config:r.config},chunkQueue:[],lastWrittenMsTimestamp:null};return this.trackDatas.push(n),this.trackDatas.sort((s,o)=>s.track.id-o.track.id),n}async addEncodedVideoChunk(e,r,a){let n=await this.mutex.acquire();try{let s=this.getVideoTrackData(e,a),o=new Uint8Array(r.byteLength);r.copyTo(o);let c=r.type==="key",u=this.validateAndNormalizeTimestamp(s.track,r.timestamp,c),d=this.createInternalChunk(o,u,(r.duration??0)/1e6,r.type);e.source._codec==="vp9"&&this.fixVP9ColorSpace(s,d),s.chunkQueue.push(d),await this.interleaveChunks()}finally{n()}}async addEncodedAudioChunk(e,r,a){let n=await this.mutex.acquire();try{let s=this.getAudioTrackData(e,a),o=new Uint8Array(r.byteLength);r.copyTo(o);let c=r.type,u=c==="key",d=this.validateAndNormalizeTimestamp(s.track,r.timestamp,u),f=this.createInternalChunk(o,d,(r.duration??0)/1e6,c);s.chunkQueue.push(f),await this.interleaveChunks()}finally{n()}}async addSubtitleCue(e,r,a){let n=await this.mutex.acquire();try{let s=this.getSubtitleTrackData(e,a),o=this.validateAndNormalizeTimestamp(s.track,1e6*r.timestamp,!0),c=r.text,u=Math.floor(o*1e3);le.lastIndex=0,c=c.replace(le,g=>{let p=We(g.slice(1,-1))-u;return`<${He(p)}>`});let d=P.encode(c),f=`${r.settings??""}
${r.identifier??""}
${r.notes??""}`,m=this.createInternalChunk(d,o,r.duration,"key",f.trim()?P.encode(f):null);s.chunkQueue.push(m),await this.interleaveChunks()}finally{n()}}async interleaveChunks(){for(let e of this.output._tracks)if(!e.source._closed&&!this.trackDatas.some(r=>r.track===e))return;e:for(;;){let e=null,r=1/0;for(let n of this.trackDatas){if(n.chunkQueue.length===0&&!n.track.source._closed)break e;n.chunkQueue.length>0&&n.chunkQueue[0].timestamp<r&&(e=n,r=n.chunkQueue[0].timestamp)}if(!e)break;let a=e.chunkQueue.shift();this.writeBlock(e,a)}await this.writer.flush()}fixVP9ColorSpace(e,r){if(r.type!=="key"||!e.info.decoderConfig.colorSpace||!e.info.decoderConfig.colorSpace.matrix)return;let a=0;if(V(r.data,0,2)!==2)return;a+=2;let n=(V(r.data,a+1,a+2)<<1)+V(r.data,a+0,a+1);a+=2,n===3&&a++;let s=V(r.data,a+0,a+1);if(a++,s)return;let o=V(r.data,a+0,a+1);if(a++,o!==0)return;a+=2;let c=V(r.data,a+0,a+24);if(a+=24,c!==4817730)return;n>=2&&a++;let u={rgb:7,bt709:2,bt470bg:1,smpte170m:3}[e.info.decoderConfig.colorSpace.matrix];zt(r.data,a+0,a+3,u)}createInternalChunk(e,r,a,n,s=null){return{data:e,type:n,timestamp:r,duration:a,additions:s}}writeBlock(e,r){this.segment||(this.createTracks(),this.createSegment());let a=Math.floor(1e3*r.timestamp),n=this.trackDatas.every(f=>{if(f.track.source._closed)return!0;if(e===f)return r.type==="key";let m=f.chunkQueue[0];return m&&m.type==="key"});(!this.currentCluster||n&&a-this.currentClusterMsTimestamp>=1e3)&&this.createNewCluster(a);let s=a-this.currentClusterMsTimestamp;if(s<0)return;if(s>=Vt)throw new Error(`Current Matroska cluster exceeded its maximum allowed length of ${Vt} milliseconds. In order to produce a correct WebM file, you must pass in a key frame at least every ${Vt} milliseconds.`);let c=new Uint8Array(4),u=new DataView(c.buffer);u.setUint8(0,128|e.track.id),u.setInt16(1,s,!1);let d=Math.floor(1e3*r.duration);if(d===0&&!r.additions){u.setUint8(3,+(r.type==="key")<<7);let f={id:163,data:[c,r.data]};this.writeEBML(f)}else{let f={id:160,data:[{id:161,data:[c,r.data]},r.type==="delta"?{id:251,data:new _e(e.lastWrittenMsTimestamp-a)}:null,r.additions?{id:30113,data:[{id:166,data:[{id:165,data:r.additions},{id:238,data:1}]}]}:null,d>0?{id:155,data:d}:null]};this.writeEBML(f)}this.duration=Math.max(this.duration,a+d),e.lastWrittenMsTimestamp=a,this.trackDatasInCurrentCluster.add(e)}createNewCluster(e){this.currentCluster&&!this.format._options.streamable&&this.finalizeCurrentCluster(),this.currentCluster={id:524531317,size:this.format._options.streamable?-1:kr,data:[{id:231,data:e}]},this.writeEBML(this.currentCluster),this.currentClusterMsTimestamp=e,this.trackDatasInCurrentCluster.clear()}finalizeCurrentCluster(){l(this.currentCluster);let e=this.writer.getPos()-this.dataOffsets.get(this.currentCluster),r=this.writer.getPos();this.writer.seek(this.offsets.get(this.currentCluster)+4),this.writeEBMLVarInt(e,kr),this.writer.seek(r);let a=this.offsets.get(this.currentCluster)-this.segmentDataOffset;l(this.cues),this.cues.data.push({id:187,data:[{id:179,data:this.currentClusterMsTimestamp},...[...this.trackDatasInCurrentCluster].map(n=>({id:183,data:[{id:247,data:n.track.id},{id:241,data:a}]}))]})}async onTrackClose(){let e=await this.mutex.acquire();await this.interleaveChunks(),e()}async finalize(){let e=await this.mutex.acquire();this.segment||(this.createTracks(),this.createSegment());for(let r of this.trackDatas)for(;r.chunkQueue.length>0;)this.writeBlock(r,r.chunkQueue.shift());if(!this.format._options.streamable&&this.currentCluster&&this.finalizeCurrentCluster(),l(this.cues),this.writeEBML(this.cues),!this.format._options.streamable){let r=this.writer.getPos(),a=this.writer.getPos()-this.segmentDataOffset;this.writer.seek(this.offsets.get(this.segment)+4),this.writeEBMLVarInt(a,br),this.segmentDuration.data=new pe(this.duration),this.writer.seek(this.offsets.get(this.segmentDuration)),this.writeEBML(this.segmentDuration),this.seekHead.data[0].data[1].data=this.offsets.get(this.cues)-this.segmentDataOffset,this.seekHead.data[1].data[1].data=this.offsets.get(this.segmentInfo)-this.segmentDataOffset,this.seekHead.data[2].data[1].data=this.offsets.get(this.tracksElement)-this.segmentDataOffset,this.writer.seek(this.offsets.get(this.seekHead)),this.writeEBML(this.seekHead),this.writer.seek(r)}e()}};var Y=class{},Je=class extends Y{constructor(t={}){if(!t||typeof t!="object")throw new TypeError("options must be an object.");if(t.fastStart!==void 0&&![!1,"in-memory","fragmented"].includes(t.fastStart))throw new TypeError('options.fastStart, when provided, must be false, "in-memory", or "fragmented".');super(),this._options=t}_createMuxer(t){return new Ye(t,this)}},Ae=class extends Y{constructor(t={}){if(!t||typeof t!="object")throw new TypeError("options must be an object.");if(t.streamable!==void 0&&typeof t.streamable!="boolean")throw new TypeError("options.streamable, when provided, must be a boolean.");super(),this._options=t}_createMuxer(t){return new Ze(t,this)}},oe=class extends Ae{};var ce=class{constructor(){this._connectedTrack=null;this._closed=!1;this._offsetTimestamps=!1}_ensureValidDigest(){if(!this._connectedTrack)throw new Error("Cannot call digest without connecting the source to an output track.");if(!this._connectedTrack.output._started)throw new Error("Cannot call digest before output has been started.");if(this._connectedTrack.output._finalizing)throw new Error("Cannot call digest after output has started finalizing.");if(this._closed)throw new Error("Cannot call digest after source has been closed.")}_start(){}async _flush(){}close(){if(this._closed)throw new Error("Source already closed.");if(!this._connectedTrack)throw new Error("Cannot call close without connecting the source to an output track.");if(!this._connectedTrack.output._started)throw new Error("Cannot call close before output has been started.");this._closed=!0,!this._connectedTrack.output._finalizing&&this._connectedTrack.output._muxer.onTrackClose(this._connectedTrack)}},L=class extends ce{constructor(e){super();this._connectedTrack=null;if(!ae.includes(e))throw new TypeError(`Invalid video codec '${e}'. Must be one of: ${ae.join(", ")}.`);this._codec=e}},et=class extends L{constructor(t){super(t)}digest(t,e){if(!(t instanceof EncodedVideoChunk))throw new TypeError("chunk must be an EncodedVideoChunk.");return this._ensureValidDigest(),this._connectedTrack.output._muxer.addEncodedVideoChunk(this._connectedTrack,t,e)}},Mi=5,Di=i=>{if(!i||typeof i!="object")throw new TypeError("Codec config must be an object.");if(!ae.includes(i.codec))throw new TypeError(`Invalid video codec '${i.codec}'. Must be one of: ${ae.join(", ")}.`);if(!Number.isInteger(i.bitrate)||i.bitrate<=0)throw new TypeError("config.bitrate must be a positive integer.");if(i.latencyMode!==void 0&&!["quality","realtime"].includes(i.latencyMode))throw new TypeError("config.latencyMode, when provided, must be 'quality' or 'realtime'.");if(i.onEncodingError!==void 0&&typeof i.onEncodingError!="function")throw new TypeError("config.onEncodingError, when provided, must be a function.")},Ie=class{constructor(t,e){this.source=t;this.codecConfig=e;this.encoder=null;this.muxer=null;this.lastMultipleOfKeyFrameInterval=-1;this.lastWidth=null;this.lastHeight=null;Di(e)}async digest(t){if(this.source._ensureValidDigest(),this.lastWidth!==null&&this.lastHeight!==null){if(t.codedWidth!==this.lastWidth||t.codedHeight!==this.lastHeight)throw new Error(`Video frame size must remain constant. Expected ${this.lastWidth}x${this.lastHeight}, got ${t.codedWidth}x${t.codedHeight}.`)}else this.lastWidth=t.codedWidth,this.lastHeight=t.codedHeight;this.ensureEncoder(t),l(this.encoder);let e=Math.floor(t.timestamp/1e6/Mi);this.encoder.encode(t,{keyFrame:e!==this.lastMultipleOfKeyFrameInterval}),this.lastMultipleOfKeyFrameInterval=e,this.encoder.encodeQueueSize>=4&&await new Promise(r=>this.encoder.addEventListener("dequeue",r,{once:!0})),await this.muxer.mutex.currentPromise}ensureEncoder(t){this.encoder||(this.encoder=new VideoEncoder({output:(e,r)=>void this.muxer.addEncodedVideoChunk(this.source._connectedTrack,e,r),error:this.codecConfig.onEncodingError??(e=>console.error("VideoEncoder error:",e))}),this.encoder.configure({codec:cr(this.codecConfig.codec,t.codedWidth,t.codedHeight,this.codecConfig.bitrate),width:t.codedWidth,height:t.codedHeight,bitrate:this.codecConfig.bitrate,framerate:this.source._connectedTrack?.metadata.frameRate,latencyMode:this.codecConfig.latencyMode,...mr(this.codecConfig.codec)}),l(this.source._connectedTrack),this.muxer=this.source._connectedTrack.output._muxer)}async flush(){this.encoder&&(await this.encoder.flush(),this.encoder.close())}},tt=class extends L{constructor(t){super(t.codec),this._encoder=new Ie(this,t)}digest(t){if(!(t instanceof VideoFrame))throw new TypeError("videoFrame must be a VideoFrame.");return this._encoder.digest(t)}_flush(){return this._encoder.flush()}},rt=class extends L{constructor(t,e){if(!(t instanceof HTMLCanvasElement))throw new TypeError("canvas must be an HTMLCanvasElement.");super(e.codec),this._encoder=new Ie(this,e),this._canvas=t}digest(t,e=0){if(!Number.isFinite(t)||t<0)throw new TypeError("timestamp must be a non-negative number.");if(!Number.isFinite(e)||e<0)throw new TypeError("duration must be a non-negative number.");let r=new VideoFrame(this._canvas,{timestamp:Math.round(1e6*t),duration:Math.round(1e6*e),alpha:"discard"}),a=this._encoder.digest(r);return r.close(),a}_flush(){return this._encoder.flush()}},it=class extends L{constructor(e,r){if(!(e instanceof MediaStreamTrack)||e.kind!=="video")throw new TypeError("track must be a video MediaStreamTrack.");r={...r,latencyMode:"realtime"};super(r.codec);this._abortController=null;this._offsetTimestamps=!0;this._encoder=new Ie(this,r),this._track=e}_start(){this._abortController=new AbortController;let e=new MediaStreamTrackProcessor({track:this._track}),r=new WritableStream({write:a=>{this._encoder.digest(a),a.close()}});e.readable.pipeTo(r,{signal:this._abortController.signal}).catch(a=>{a instanceof DOMException&&a.name==="AbortError"||console.error("Pipe error:",a)})}async _flush(){this._abortController&&(this._abortController.abort(),this._abortController=null),await this._encoder.flush()}},Q=class extends ce{constructor(e){super();this._connectedTrack=null;if(!se.includes(e))throw new TypeError(`Invalid audio codec '${e}'. Must be one of: ${se.join(", ")}.`);this._codec=e}},nt=class extends Q{constructor(t){super(t)}digest(t,e){if(!(t instanceof EncodedAudioChunk))throw new TypeError("chunk must be an EncodedAudioChunk.");return this._ensureValidDigest(),this._connectedTrack.output._muxer.addEncodedAudioChunk(this._connectedTrack,t,e)}},Pi=i=>{if(!i||typeof i!="object")throw new TypeError("Codec config must be an object.");if(!se.includes(i.codec))throw new TypeError(`Invalid audio codec '${i.codec}'. Must be one of: ${se.join(", ")}.`);if(!Number.isInteger(i.bitrate)||i.bitrate<=0)throw new TypeError("config.bitrate must be a positive integer.");if(i.onEncodingError!==void 0&&typeof i.onEncodingError!="function")throw new TypeError("config.onEncodingError, when provided, must be a function.")},Ee=class{constructor(t,e){this.source=t;this.codecConfig=e;this.encoder=null;this.muxer=null;this.lastNumberOfChannels=null;this.lastSampleRate=null;Pi(e)}async digest(t){if(this.source._ensureValidDigest(),this.lastNumberOfChannels!==null&&this.lastSampleRate!==null){if(t.numberOfChannels!==this.lastNumberOfChannels||t.sampleRate!==this.lastSampleRate)throw new Error(`Audio parameters must remain constant. Expected ${this.lastNumberOfChannels} channels at ${this.lastSampleRate} Hz, got ${t.numberOfChannels} channels at ${t.sampleRate} Hz.`)}else this.lastNumberOfChannels=t.numberOfChannels,this.lastSampleRate=t.sampleRate;this.ensureEncoder(t),l(this.encoder),this.encoder.encode(t),this.encoder.encodeQueueSize>=4&&await new Promise(e=>this.encoder.addEventListener("dequeue",e,{once:!0})),await this.muxer.mutex.currentPromise}ensureEncoder(t){this.encoder||(this.encoder=new AudioEncoder({output:(e,r)=>void this.muxer.addEncodedAudioChunk(this.source._connectedTrack,e,r),error:this.codecConfig.onEncodingError??(e=>console.error("AudioEncoder error:",e))}),this.encoder.configure({codec:dr(this.codecConfig.codec,t.numberOfChannels,t.sampleRate),numberOfChannels:t.numberOfChannels,sampleRate:t.sampleRate,bitrate:this.codecConfig.bitrate,...fr(this.codecConfig.codec)}),l(this.source._connectedTrack),this.muxer=this.source._connectedTrack.output._muxer)}async flush(){this.encoder&&(await this.encoder.flush(),this.encoder.close())}},at=class extends Q{constructor(t){super(t.codec),this._encoder=new Ee(this,t)}digest(t){if(!(t instanceof AudioData))throw new TypeError("audioData must be an AudioData.");return this._encoder.digest(t)}_flush(){return this._encoder.flush()}},st=class extends Q{constructor(e){super(e.codec);this._accumulatedFrameCount=0;this._encoder=new Ee(this,e)}digest(e){if(!(e instanceof AudioBuffer))throw new TypeError("audioBuffer must be an AudioBuffer.");let r=e.numberOfChannels,a=e.sampleRate,n=e.length,s=new Float32Array(r*n);for(let u=0;u<r;u++){let d=e.getChannelData(u);s.set(d,u*n)}let o=new AudioData({format:"f32-planar",sampleRate:a,numberOfFrames:n,numberOfChannels:r,timestamp:Math.round(1e6*this._accumulatedFrameCount/a),data:s}),c=this._encoder.digest(o);return o.close(),this._accumulatedFrameCount+=n,c}_flush(){return this._encoder.flush()}},ot=class extends Q{constructor(e,r){if(!(e instanceof MediaStreamTrack)||e.kind!=="audio")throw new TypeError("track must be an audio MediaStreamTrack.");super(r.codec);this._abortController=null;this._offsetTimestamps=!0;this._encoder=new Ee(this,r),this._track=e}_start(){this._abortController=new AbortController;let e=new MediaStreamTrackProcessor({track:this._track}),r=new WritableStream({write:a=>{this._encoder.digest(a),a.close()}});e.readable.pipeTo(r,{signal:this._abortController.signal}).catch(a=>{a instanceof DOMException&&a.name==="AbortError"||console.error("Pipe error:",a)})}async _flush(){this._abortController&&(this._abortController.abort(),this._abortController=null),await this._encoder.flush()}},ue=class extends ce{constructor(e){super();this._connectedTrack=null;if(!Se.includes(e))throw new TypeError(`Invalid subtitle codec '${e}'. Must be one of: ${Se.join(", ")}.`);this._codec=e}},ct=class extends ue{constructor(t){super(t),this._parser=new Ne({codec:t,output:(e,r)=>this._connectedTrack?.output._muxer.addSubtitleCue(this._connectedTrack,e,r)})}digest(t){if(typeof t!="string")throw new TypeError("text must be a string.");return this._ensureValidDigest(),this._parser.parse(t),this._connectedTrack.output._muxer.mutex.currentPromise}};var ut=class{constructor(t){this._tracks=[];this._started=!1;this._finalizing=!1;this._mutex=new q;if(!t||typeof t!="object")throw new TypeError("options must be an object.");if(!(t.format instanceof Y))throw new TypeError("options.format must be an OutputFormat.");if(!(t.target instanceof G))throw new TypeError("options.target must be a Target.");if(t.target._output)throw new Error("Target is already used for another output.");t.target._output=this,this._writer=t.target._createWriter(),this._muxer=t.format._createMuxer(this)}addVideoTrack(t,e={}){if(!(t instanceof L))throw new TypeError("source must be a VideoSource.");if(!e||typeof e!="object")throw new TypeError("metadata must be an object.");if(typeof e.rotation=="number"&&![0,90,180,270].includes(e.rotation))throw new TypeError(`Invalid video rotation: ${e.rotation}. Has to be 0, 90, 180 or 270.`);if(Array.isArray(e.rotation)&&(e.rotation.length!==9||e.rotation.some(r=>!Number.isFinite(r))))throw new TypeError(`Invalid video transformation matrix: ${e.rotation.join()}`);if(e.frameRate!==void 0&&(!Number.isInteger(e.frameRate)||e.frameRate<=0))throw new TypeError(`Invalid video frame rate: ${e.frameRate}. Must be a positive integer.`);this._addTrack("video",t,e)}addAudioTrack(t,e={}){if(!(t instanceof Q))throw new TypeError("source must be an AudioSource.");if(!e||typeof e!="object")throw new TypeError("metadata must be an object.");this._addTrack("audio",t,e)}addSubtitleTrack(t,e={}){if(!(t instanceof ue))throw new TypeError("source must be a SubtitleSource.");if(!e||typeof e!="object")throw new TypeError("metadata must be an object.");this._addTrack("subtitle",t,e)}_addTrack(t,e,r){if(this._started)throw new Error("Cannot add track after output has started.");if(e._connectedTrack)throw new Error("Source is already used for a track.");let a={id:this._tracks.length+1,output:this,type:t,source:e,metadata:r};this._muxer.beforeTrackAdd(a),this._tracks.push(a),e._connectedTrack=a}async start(){if(this._started)throw new Error("Output already started.");this._started=!0,this._writer.start();let t=await this._mutex.acquire();await this._muxer.start();for(let e of this._tracks)e.source._start();t()}async finalize(){if(!this._started)throw new Error("Cannot finalize before starting.");if(this._finalizing)throw new Error("Cannot call finalize twice.");this._finalizing=!0;let t=await this._mutex.acquire(),e=this._tracks.map(r=>r.source._flush());await Promise.all(e),await this._muxer.finalize(),await this._writer.flush(),await this._writer.finalize(),t()}};var j=class{constructor(){this._sizePromise=null}_getSize(){return this._sizePromise??=this._retrieveSize()}},dt=class extends j{constructor(t){if(!(t instanceof ArrayBuffer)&&!(t instanceof Uint8Array))throw new TypeError("buffer must be an ArrayBuffer or Uint8Array.");super(),this._bytes=t instanceof Uint8Array?t:new Uint8Array(t)}async _read(t,e){return this._bytes.subarray(t,e)}async _retrieveSize(){return this._bytes.byteLength}},lt=class extends j{constructor(t){if(!(t instanceof Blob))throw new TypeError("blob must be a Blob.");super(),this._blob=t}async _read(t,e){let a=await this._blob.slice(t,e).arrayBuffer();return new Uint8Array(a)}async _retrieveSize(){return this._blob.size}},mt=class extends j{constructor(e,r={}){if(typeof e!="string")throw new TypeError("url must be a string.");if(!r||typeof r!="object")throw new TypeError("options must be an object.");if(r.withCredentials!==void 0&&typeof r.withCredentials!="boolean")throw new TypeError("options.withCredentials, when specified, must be a boolean.");super();this._fullData=null;this._url=e,this._withCredentials=r.withCredentials??!1}_makeRequest(e){return new Promise((r,a)=>{let n=new XMLHttpRequest;n.open("GET",this._url,!0),n.responseType="arraybuffer",n.withCredentials=this._withCredentials,e&&n.setRequestHeader("Range",`bytes=${e.start}-${e.end-1}`),n.onload=()=>{if(n.status>=200&&n.status<300){let s=n.response;e||(this._fullData=s),r({response:s,statusCode:n.status})}else a(new Error(`Error fetching ${this._url}: ${n.status} ${n.statusText}`))},n.onerror=()=>{a(new Error("Network error occurred."))},n.ontimeout=()=>{a(new Error("Request timed out."))},n.send()})}async _read(e,r){if(this._fullData)return new Uint8Array(this._fullData,e,r-e);let{response:a,statusCode:n}=await this._makeRequest({start:e,end:r});return n===200?new Uint8Array(a).subarray(e,r):new Uint8Array(a)}async _retrieveSize(){if(this._fullData)return this._fullData.byteLength;let e=new XMLHttpRequest;e.open("HEAD",this._url,!0),e.withCredentials=this._withCredentials,await new Promise((a,n)=>{e.onload=()=>{e.status>=200&&e.status<300?a():n(new Error(`Error fetching ${this._url} (HEAD): ${e.status} ${e.statusText}`))},e.onerror=()=>{a()},e.send()});let r=e.getResponseHeader("Content-Length");if(!r){let{response:a}=await this._makeRequest();return a.byteLength}return parseInt(r,10)}};var ft=class{constructor(t){this.input=t}};var be=class{constructor(t){this._backing=t}isVideoTrack(){return this instanceof U}isAudioTrack(){return this instanceof B}computeDuration(){return this._backing.computeDuration()}},U=class extends be{constructor(t){super(t),this._backing=t}getCodec(){return this._backing.getCodec()}getCodedWidth(){return this._backing.getCodedWidth()}getCodedHeight(){return this._backing.getCodedHeight()}getRotation(){return this._backing.getRotation()}async getDisplayWidth(){return await this._backing.getRotation()%180===0?this._backing.getCodedWidth():this._backing.getCodedHeight()}async getDisplayHeight(){return await this._backing.getRotation()%180===0?this._backing.getCodedHeight():this._backing.getCodedWidth()}getDecoderConfig(){return this._backing.getDecoderConfig()}async getCodecMimeType(){return(await this.getDecoderConfig()).codec}},B=class extends be{constructor(t){super(t),this._backing=t}getCodec(){return this._backing.getCodec()}getNumberOfChannels(){return this._backing.getNumberOfChannels()}getSampleRate(){return this._backing.getSampleRate()}getDecoderConfig(){return this._backing.getDecoderConfig()}async getCodecMimeType(){return(await this.getDecoderConfig()).codec}};var ke=class{constructor(t,e=1/0){this.source=t;this.maxStorableBytes=e;this.loadedSegments=[];this.loadingSegments=[];this.sourceSizePromise=null;this.nextAge=0;this.totalStoredBytes=0}async loadRange(t,e){e=Math.min(e,await this.source._getSize());let r=this.loadingSegments.find(c=>c.start<=t&&c.end>=e);if(r){await r.promise;return}if(this.loadedSegments.some(c=>c.start<=t&&c.end>=e))return;let n=this.source._read(t,e),s={start:t,end:e,promise:n};this.loadingSegments.push(s);let o=await n;Lt(this.loadingSegments,s),this.insertIntoLoadedSegments(t,o)}insertIntoLoadedSegments(t,e){let r={start:t,end:t+e.byteLength,bytes:e,view:new DataView(e.buffer),age:this.nextAge++},a=E(this.loadedSegments,t,n=>n.start);(a===-1||this.loadedSegments[a].start<r.start)&&a++,this.loadedSegments.splice(a,0,r),this.totalStoredBytes+=e.byteLength;for(let n=a+1;n<this.loadedSegments.length;n++){let s=this.loadedSegments[n];if(s.start>=r.end)break;r.start<=s.start&&s.end<=r.end&&(this.loadedSegments.splice(n,1),n--)}for(;this.totalStoredBytes>this.maxStorableBytes&&this.loadedSegments.length>1;){let n=null,s=-1;for(let o=0;o<this.loadedSegments.length;o++){let c=this.loadedSegments[o];(!n||c.age<n.age)&&(n=c,s=o)}l(n),this.totalStoredBytes-=n.bytes.byteLength,this.loadedSegments.splice(s,1)}}getViewAndOffset(t,e){let r=E(this.loadedSegments,t,n=>n.start),a=null;if(r!==-1)for(let n=r;n<this.loadedSegments.length;n++){let s=this.loadedSegments[n];if(s.start>t)break;if(e<=s.end){a=s;break}}if(!a)throw new Error(`No segment loaded for range [${t}, ${e}).`);return a.age=this.nextAge++,{view:a.view,offset:a.bytes.byteOffset+t-a.start}}forgetRange(t,e){if(e<=t)return;let r=E(this.loadedSegments,t,n=>n.start);if(r===-1)return;let a=this.loadedSegments[r];a.start!==t||a.end!==e||(this.loadedSegments.splice(r,1),this.totalStoredBytes-=a.bytes.byteLength)}};var de=class{constructor(t){this.reader=t;this.pos=0}readRange(t,e){let{view:r,offset:a}=this.reader.getViewAndOffset(t,e);return new Uint8Array(r.buffer,a,e-t)}readU8(){let{view:t,offset:e}=this.reader.getViewAndOffset(this.pos,this.pos+1);return this.pos++,t.getUint8(e)}readU16(){let{view:t,offset:e}=this.reader.getViewAndOffset(this.pos,this.pos+2);return this.pos+=2,t.getUint16(e,!1)}readU24(){let{view:t,offset:e}=this.reader.getViewAndOffset(this.pos,this.pos+3);this.pos+=3;let r=t.getUint16(e,!1),a=t.getUint8(e+2);return r*256+a}readS32(){let{view:t,offset:e}=this.reader.getViewAndOffset(this.pos,this.pos+4);return this.pos+=4,t.getInt32(e,!1)}readU32(){let{view:t,offset:e}=this.reader.getViewAndOffset(this.pos,this.pos+4);return this.pos+=4,t.getUint32(e,!1)}readI32(){let{view:t,offset:e}=this.reader.getViewAndOffset(this.pos,this.pos+4);return this.pos+=4,t.getInt32(e,!1)}readU64(){let t=this.readU32(),e=this.readU32();return t*4294967296+e}readF64(){let{view:t,offset:e}=this.reader.getViewAndOffset(this.pos,this.pos+8);return this.pos+=8,t.getFloat64(e,!1)}readFixed_16_16(){return this.readS32()/65536}readFixed_2_30(){return this.readS32()/1073741824}readAscii(t){let{view:e,offset:r}=this.reader.getViewAndOffset(this.pos,this.pos+t);this.pos+=t;let a="";for(let n=0;n<t;n++)a+=String.fromCharCode(e.getUint8(r+n));return a}readIsomVariableInteger(){let t=0;for(let e=0;e<4;e++){t<<=7;let r=this.readU8();if(t|=r&127,!(r&128))break}return t}readBoxHeader(){let t=this.readU32(),e=this.readAscii(4),r=8;return t===1&&(t=this.readU64(),r=16),{name:e,totalSize:t,headerSize:r,contentSize:t-r}}};var zi=[X(0),X(90),X(180),X(270)],ht=class extends ft{constructor(e){super(e);this.currentTrack=null;this.tracks=[];this.metadataPromise=null;this.movieTimescale=-1;this.movieDurationInTimescale=-1;this.isFragmented=!1;this.fragmentTrackDefaults=[];this.fragments=[];this.currentFragment=null;this.fragmentLookupMutex=new q;this.isobmffReader=new de(e._mainReader),this.chunkReader=new de(new ke(e._source,64*2**20))}async computeDuration(){let e=await this.getTracks(),r=await Promise.all(e.map(a=>a.computeDuration()));return Math.max(0,...r)}async getTracks(){return await this.readMetadata(),this.tracks.map(e=>e.inputTrack)}async getMimeType(){await this.readMetadata();let e="video/mp4";if(this.tracks.length>0){let r=await Promise.all(this.tracks.map(n=>n.inputTrack.getCodecMimeType())),a=[...new Set(r)];e+=`; codecs="${a.join(", ")}"`}return e}readMetadata(){return this.metadataPromise??=(async()=>{let e=await this.isobmffReader.reader.source._getSize();for(;this.isobmffReader.pos<e;){await this.isobmffReader.reader.loadRange(this.isobmffReader.pos,this.isobmffReader.pos+16);let r=this.isobmffReader.pos,a=this.isobmffReader.readBoxHeader();if(a.name==="moov"){await this.isobmffReader.reader.loadRange(this.isobmffReader.pos,this.isobmffReader.pos+a.contentSize),this.readContiguousBoxes(a.contentSize);break}this.isobmffReader.pos=r+a.totalSize}if(this.isFragmented){await this.isobmffReader.reader.loadRange(e-4,e),this.isobmffReader.pos=e-4;let r=this.isobmffReader.readU32(),a=e-r;if(a>=0&&a<e){await this.isobmffReader.reader.loadRange(a,e),this.isobmffReader.pos=a;let n=this.isobmffReader.readBoxHeader();n.name==="mfra"&&this.readContiguousBoxes(n.contentSize)}}})()}getSampleTableForTrack(e){if(e.sampleTable)return e.sampleTable;let r={sampleTimingEntries:[],sampleCompositionTimeOffsets:[],sampleSizes:[],keySampleIndices:null,chunkOffsets:[],sampleToChunk:[],presentationTimestamps:[]};e.sampleTable=r,this.isobmffReader.pos=e.sampleTableOffset,this.currentTrack=e,this.traverseBox(),this.currentTrack=null;for(let a of r.sampleTimingEntries)for(let n=0;n<a.count;n++)r.presentationTimestamps.push({presentationTimestamp:a.startDecodeTimestamp+n*a.delta,sampleIndex:a.startIndex+n});for(let a of r.sampleCompositionTimeOffsets)for(let n=0;n<a.count;n++){let s=a.startIndex+n,o=r.presentationTimestamps[s];o&&(o.presentationTimestamp+=a.offset)}return r.presentationTimestamps.sort((a,n)=>a.presentationTimestamp-n.presentationTimestamp),e.sampleTable}async readFragment(){let e=this.isobmffReader.pos;await this.isobmffReader.reader.loadRange(this.isobmffReader.pos,this.isobmffReader.pos+16);let r=this.isobmffReader.readBoxHeader();l(r.name==="moof"),await this.isobmffReader.reader.loadRange(e,e+r.totalSize),this.isobmffReader.pos=e,this.traverseBox();let a=K(this.fragments,e,s=>s.moofOffset);l(a!==-1);let n=this.fragments[a];l(n.moofOffset===e),this.isobmffReader.reader.forgetRange(e,e+r.totalSize);for(let[s,o]of n.trackData){if(o.startTimestampIsFinal)continue;let c=this.tracks.find(m=>m.id===s);this.isobmffReader.pos=0;let u=null,d=null,f=E(c.fragments,e-1,m=>m.moofOffset);for(f!==-1&&(u=c.fragments[f],d=u,this.isobmffReader.pos=u.moofOffset+u.moofSize);this.isobmffReader.pos<e;){if(u?.nextFragment)u=u.nextFragment,this.isobmffReader.pos=u.moofOffset+u.moofSize;else{await this.isobmffReader.reader.loadRange(this.isobmffReader.pos,this.isobmffReader.pos+16);let m=this.isobmffReader.pos,g=this.isobmffReader.readBoxHeader();if(g.name==="moof"){let b=K(this.fragments,m,p=>p.moofOffset);if(b===-1){this.isobmffReader.pos=m;let p=await this.readFragment();u&&(u.nextFragment=p),u=p}else{let p=this.fragments[b];u&&(u.nextFragment=p),u=p}}this.isobmffReader.pos=m+g.totalSize}u&&u.trackData.has(s)&&(d=u)}if(d){let m=d.trackData.get(s);l(m.startTimestampIsFinal),Tr(o,m.endTimestamp)}o.startTimestampIsFinal=!0}return n}readContiguousBoxes(e){let r=this.isobmffReader.pos;for(;this.isobmffReader.pos-r<e;)this.traverseBox()}traverseBox(){let e=this.isobmffReader.pos,r=this.isobmffReader.readBoxHeader(),a=e+r.totalSize;switch(r.name){case"mdia":case"minf":case"dinf":case"mfra":this.readContiguousBoxes(r.contentSize);break;case"mvhd":{let n=this.isobmffReader.readU8();this.isobmffReader.pos+=3,n===1?(this.isobmffReader.pos+=16,this.movieTimescale=this.isobmffReader.readU32(),this.movieDurationInTimescale=this.isobmffReader.readU64()):(this.isobmffReader.pos+=8,this.movieTimescale=this.isobmffReader.readU32(),this.movieDurationInTimescale=this.isobmffReader.readU32())}break;case"trak":{let n={id:-1,demuxer:this,inputTrack:null,info:null,timescale:-1,durationInTimescale:-1,rotation:0,sampleTableOffset:-1,sampleTable:null,fragmentLookupTable:null,currentFragmentState:null,fragments:[]};if(this.currentTrack=n,this.readContiguousBoxes(r.contentSize),n.id!==-1&&n.timescale!==-1&&n.info!==null){if(n.info.type==="video"&&n.info.codec!==null){let s=n;n.inputTrack=new U(new Mt(s)),this.tracks.push(n)}else if(n.info.type==="audio"&&n.info.codec!==null){let s=n;if(n.inputTrack=new B(new Dt(s)),this.tracks.push(n),n.info.codec==="aac"){let o=Rt(n.info.codecDescription);o.numberOfChannels!==null&&(n.info.numberOfChannels=o.numberOfChannels),o.sampleRate!==null&&(n.info.sampleRate=o.sampleRate)}}}this.currentTrack=null}break;case"tkhd":{let n=this.currentTrack;l(n);let s=this.isobmffReader.readU8();if(!((this.isobmffReader.readU24()&1)!==0))break;if(s===0)this.isobmffReader.pos+=8,n.id=this.isobmffReader.readU32(),this.isobmffReader.pos+=8;else if(s===1)this.isobmffReader.pos+=16,n.id=this.isobmffReader.readU32(),this.isobmffReader.pos+=12;else throw new Error(`Incorrect track header version ${s}.`);this.isobmffReader.pos+=2*4+2+2+2+2;let u=[];u.push(this.isobmffReader.readFixed_16_16(),this.isobmffReader.readFixed_16_16()),this.isobmffReader.pos+=4,u.push(this.isobmffReader.readFixed_16_16(),this.isobmffReader.readFixed_16_16());let d=zi.findIndex(f=>f.every((m,g)=>m===u[g]));d===-1?n.rotation=0:n.rotation=90*d}break;case"mdhd":{let n=this.currentTrack;l(n);let s=this.isobmffReader.readU8();this.isobmffReader.pos+=3,s===0?(this.isobmffReader.pos+=8,n.timescale=this.isobmffReader.readU32(),n.durationInTimescale=this.isobmffReader.readU32()):s===1&&(this.isobmffReader.pos+=16,n.timescale=this.isobmffReader.readU32(),n.durationInTimescale=this.isobmffReader.readU64())}break;case"hdlr":{let n=this.currentTrack;l(n),this.isobmffReader.pos+=8;let s=this.isobmffReader.readAscii(4);s==="vide"?n.info={type:"video",width:-1,height:-1,codec:null,codecDescription:null,colorSpace:null}:s==="soun"&&(n.info={type:"audio",numberOfChannels:-1,sampleRate:-1,codec:null,codecDescription:null})}break;case"stbl":{let n=this.currentTrack;l(n),n.sampleTableOffset=e,this.readContiguousBoxes(r.contentSize)}break;case"stsd":{let n=this.currentTrack;if(l(n),n.info===null||n.sampleTable)break;let s=this.isobmffReader.readU8();this.isobmffReader.pos+=3;let o=this.isobmffReader.readU32();for(let c=0;c<o;c++){let u=this.isobmffReader.readBoxHeader();if(n.info.type==="video"){if(u.name==="avc1")n.info.codec="avc";else if(u.name==="hvc1"||u.name==="hev1")n.info.codec="hevc";else{console.warn(`Unsupported video sample entry type ${u.name}.`);break}this.isobmffReader.pos+=6*1+2+2+2+3*4,n.info.width=this.isobmffReader.readU16(),n.info.height=this.isobmffReader.readU16(),this.isobmffReader.pos+=50,this.readContiguousBoxes(e+u.totalSize-this.isobmffReader.pos)}else{if(u.name==="mp4a")n.info.codec="aac";else if(u.name.toLowerCase()==="opus")n.info.codec="opus";else{console.warn(`Unsupported audio sample entry type ${u.name}.`);break}this.isobmffReader.pos+=6*1+2;let d=this.isobmffReader.readU16();this.isobmffReader.pos+=3*2;let f=this.isobmffReader.readU16();this.isobmffReader.pos+=6;let m=this.isobmffReader.readU32()/65536;if(s===0&&d>0){if(d===1)this.isobmffReader.pos+=4*4;else if(d===2){this.isobmffReader.pos+=4,m=this.isobmffReader.readF64(),f=this.isobmffReader.readU32(),this.isobmffReader.pos+=4;let g=this.isobmffReader.readU32(),b=this.isobmffReader.readU32(),p=this.isobmffReader.readU32(),k=this.isobmffReader.readU32()}}n.info.numberOfChannels=f,n.info.sampleRate=m,this.readContiguousBoxes(e+u.totalSize-this.isobmffReader.pos)}}}break;case"avcC":{let n=this.currentTrack;l(n&&n.info),n.info.codecDescription=this.isobmffReader.readRange(this.isobmffReader.pos,this.isobmffReader.pos+r.contentSize)}break;case"hvcC":{let n=this.currentTrack;l(n&&n.info),n.info.codecDescription=this.isobmffReader.readRange(this.isobmffReader.pos,this.isobmffReader.pos+r.contentSize)}break;case"colr":{let n=this.currentTrack;if(l(n&&n.info?.type==="video"),this.isobmffReader.readAscii(4)!=="nclx")break;let o=this.isobmffReader.readU16(),c=this.isobmffReader.readU16(),u=this.isobmffReader.readU16(),d=!!(this.isobmffReader.readU8()&128);n.info.colorSpace={primaries:Ut[o],transfer:Bt[c],matrix:Nt[u],fullRange:d}}break;case"wave":r.totalSize>8&&this.readContiguousBoxes(r.contentSize);break;case"esds":{let n=this.currentTrack;l(n&&n.info),this.isobmffReader.pos+=4;let s=this.isobmffReader.readU8();l(s===3),this.isobmffReader.readIsomVariableInteger(),this.isobmffReader.pos+=2;let o=this.isobmffReader.readU8(),c=(o&128)!==0,u=(o&64)!==0,d=(o&32)!==0;if(c&&(this.isobmffReader.pos+=2),u){let p=this.isobmffReader.readU8();this.isobmffReader.pos+=p}d&&(this.isobmffReader.pos+=2);let f=this.isobmffReader.readU8();l(f===4),this.isobmffReader.readIsomVariableInteger();let m=this.isobmffReader.readU8();l(m===64),this.isobmffReader.pos+=12;let g=this.isobmffReader.readU8();l(g===5);let b=this.isobmffReader.readIsomVariableInteger();n.info.codecDescription=this.isobmffReader.readRange(this.isobmffReader.pos,this.isobmffReader.pos+b)}break;case"stts":{let n=this.currentTrack;if(l(n),!n.sampleTable)break;this.isobmffReader.pos+=4;let s=this.isobmffReader.readU32(),o=0,c=0;for(let u=0;u<s;u++){let d=this.isobmffReader.readU32(),f=this.isobmffReader.readU32();n.sampleTable.sampleTimingEntries.push({startIndex:o,startDecodeTimestamp:c,count:d,delta:f}),o+=d,c+=d*f}}break;case"ctts":{let n=this.currentTrack;if(l(n),!n.sampleTable)break;this.isobmffReader.pos+=4;let s=this.isobmffReader.readU32(),o=0;for(let c=0;c<s;c++){let u=this.isobmffReader.readU32(),d=this.isobmffReader.readI32();n.sampleTable.sampleCompositionTimeOffsets.push({startIndex:o,count:u,offset:d}),o+=u}}break;case"stsz":{let n=this.currentTrack;if(l(n),!n.sampleTable)break;this.isobmffReader.pos+=4;let s=this.isobmffReader.readU32(),o=this.isobmffReader.readU32();if(s===0)for(let c=0;c<o;c++){let u=this.isobmffReader.readU32();n.sampleTable.sampleSizes.push(u)}else n.sampleTable.sampleSizes.push(s)}break;case"stz2":throw new Error("Unsupported.");case"stss":{let n=this.currentTrack;if(l(n),!n.sampleTable)break;this.isobmffReader.pos+=4,n.sampleTable.keySampleIndices=[];let s=this.isobmffReader.readU32();for(let o=0;o<s;o++){let c=this.isobmffReader.readU32()-1;n.sampleTable.keySampleIndices.push(c)}}break;case"stsc":{let n=this.currentTrack;if(l(n),!n.sampleTable)break;this.isobmffReader.pos+=4;let s=this.isobmffReader.readU32();for(let c=0;c<s;c++){let u=this.isobmffReader.readU32()-1,d=this.isobmffReader.readU32(),f=this.isobmffReader.readU32();n.sampleTable.sampleToChunk.push({startSampleIndex:-1,startChunkIndex:u,samplesPerChunk:d,sampleDescriptionIndex:f})}let o=0;for(let c=0;c<n.sampleTable.sampleToChunk.length;c++)if(n.sampleTable.sampleToChunk[c].startSampleIndex=o,c<n.sampleTable.sampleToChunk.length-1){let d=n.sampleTable.sampleToChunk[c+1].startChunkIndex-n.sampleTable.sampleToChunk[c].startChunkIndex;o+=d*n.sampleTable.sampleToChunk[c].samplesPerChunk}}break;case"stco":{let n=this.currentTrack;if(l(n),!n.sampleTable)break;this.isobmffReader.pos+=4;let s=this.isobmffReader.readU32();for(let o=0;o<s;o++){let c=this.isobmffReader.readU32();n.sampleTable.chunkOffsets.push(c)}}break;case"co64":{let n=this.currentTrack;if(l(n),!n.sampleTable)break;this.isobmffReader.pos+=4;let s=this.isobmffReader.readU32();for(let o=0;o<s;o++){let c=this.isobmffReader.readU64();n.sampleTable.chunkOffsets.push(c)}}break;case"mvex":this.isFragmented=!0,this.readContiguousBoxes(r.contentSize);break;case"mehd":{let n=this.isobmffReader.readU8();this.isobmffReader.pos+=3;let s=n===1?this.isobmffReader.readU64():this.isobmffReader.readU32();this.movieDurationInTimescale=s}break;case"trex":{this.isobmffReader.pos+=4;let n=this.isobmffReader.readU32(),s=this.isobmffReader.readU32(),o=this.isobmffReader.readU32(),c=this.isobmffReader.readU32(),u=this.isobmffReader.readU32();this.fragmentTrackDefaults.push({trackId:n,defaultSampleDescriptionIndex:s,defaultSampleDuration:o,defaultSampleSize:c,defaultSampleFlags:u})}break;case"tfra":{let n=this.isobmffReader.readU8();this.isobmffReader.pos+=3;let s=this.isobmffReader.readU32(),o=this.tracks.find(x=>x.id===s);if(!o)break;o.fragmentLookupTable=[];let c=this.isobmffReader.readU32(),u=(c&48)>>4,d=(c&12)>>2,f=c&3,m=this.isobmffReader,g=[m.readU8.bind(m),m.readU16.bind(m),m.readU24.bind(m),m.readU32.bind(m)],b=g[u],p=g[d],k=g[f],T=this.isobmffReader.readU32();for(let x=0;x<T;x++){let C=n===1?this.isobmffReader.readU64():this.isobmffReader.readU32(),O=n===1?this.isobmffReader.readU64():this.isobmffReader.readU32(),_=b(),I=p(),R=k();o.fragmentLookupTable.push({timestamp:C,moofOffset:O})}}break;case"moof":{this.currentFragment={moofOffset:e,moofSize:r.totalSize,implicitBaseDataOffset:e,trackData:new Map,dataStart:1/0,dataEnd:0,nextFragment:null},this.readContiguousBoxes(r.contentSize);let n=E(this.fragments,this.currentFragment.moofOffset,s=>s.moofOffset);this.fragments.splice(n+1,0,this.currentFragment);for(let[,s]of this.currentFragment.trackData){let o=s.samples[0],c=F(s.samples);this.currentFragment.dataStart=Math.min(this.currentFragment.dataStart,o.byteOffset),this.currentFragment.dataEnd=Math.max(this.currentFragment.dataEnd,c.byteOffset+c.byteSize)}this.currentFragment=null}break;case"traf":if(l(this.currentFragment),this.readContiguousBoxes(r.contentSize),this.currentTrack){let n=this.currentFragment.trackData.get(this.currentTrack.id);if(n){let s=E(this.currentTrack.fragments,this.currentFragment.moofOffset,c=>c.moofOffset);this.currentTrack.fragments.splice(s+1,0,this.currentFragment);let{currentFragmentState:o}=this.currentTrack;l(o),o.startTimestamp!==null&&(Tr(n,o.startTimestamp),n.startTimestampIsFinal=!0)}this.currentTrack.currentFragmentState=null,this.currentTrack=null}break;case"tfhd":{l(this.currentFragment),this.isobmffReader.pos+=1;let n=this.isobmffReader.readU24(),s=!!(n&1),o=!!(n&2),c=!!(n&8),u=!!(n&16),d=!!(n&32),f=!!(n&65536),m=!!(n&131072),g=this.isobmffReader.readU32(),b=this.tracks.find(k=>k.id===g);if(!b)break;let p=this.fragmentTrackDefaults.find(k=>k.trackId===g);this.currentTrack=b,b.currentFragmentState={baseDataOffset:this.currentFragment.implicitBaseDataOffset,sampleDescriptionIndex:p?.defaultSampleDescriptionIndex??null,defaultSampleDuration:p?.defaultSampleDuration??null,defaultSampleSize:p?.defaultSampleSize??null,defaultSampleFlags:p?.defaultSampleFlags??null,startTimestamp:null},s?b.currentFragmentState.baseDataOffset=this.isobmffReader.readU64():m&&(b.currentFragmentState.baseDataOffset=this.currentFragment.moofOffset),o&&(b.currentFragmentState.sampleDescriptionIndex=this.isobmffReader.readU32()),c&&(b.currentFragmentState.defaultSampleDuration=this.isobmffReader.readU32()),u&&(b.currentFragmentState.defaultSampleSize=this.isobmffReader.readU32()),d&&(b.currentFragmentState.defaultSampleFlags=this.isobmffReader.readU32()),f&&(b.currentFragmentState.defaultSampleDuration=0)}break;case"tfdt":{let n=this.currentTrack;if(!n)break;l(n.currentFragmentState);let s=this.isobmffReader.readU8();this.isobmffReader.pos+=3;let o=s===0?this.isobmffReader.readU32():this.isobmffReader.readU64();n.currentFragmentState.startTimestamp=o}break;case"trun":{let n=this.currentTrack;if(!n)break;if(l(this.currentFragment),l(n.currentFragmentState),this.currentFragment.trackData.has(n.id))throw new Error("Can't have two trun boxes for the same track in one fragment.");let s=this.isobmffReader.readU8(),o=this.isobmffReader.readU24(),c=!!(o&1),u=!!(o&4),d=!!(o&256),f=!!(o&512),m=!!(o&1024),g=!!(o&2048),b=this.isobmffReader.readU32(),p=n.currentFragmentState.baseDataOffset;c&&(p+=this.isobmffReader.readI32());let k=null;u&&(k=this.isobmffReader.readU32());let T=p;if(b===0){this.currentFragment.implicitBaseDataOffset=T;break}let x=0,C={startTimestamp:0,endTimestamp:0,samples:[],presentationTimestamps:[],startTimestampIsFinal:!1};this.currentFragment.trackData.set(n.id,C);for(let I=0;I<b;I++){let R;d?R=this.isobmffReader.readU32():(l(n.currentFragmentState.defaultSampleDuration!==null),R=n.currentFragmentState.defaultSampleDuration);let ze;f?ze=this.isobmffReader.readU32():(l(n.currentFragmentState.defaultSampleSize!==null),ze=n.currentFragmentState.defaultSampleSize);let Ue;m?Ue=this.isobmffReader.readU32():(l(n.currentFragmentState.defaultSampleFlags!==null),Ue=n.currentFragmentState.defaultSampleFlags),I===0&&k!==null&&(Ue=k);let xt=0;g&&(s===0?xt=this.isobmffReader.readU32():xt=this.isobmffReader.readI32());let Sr=!(Ue&65536);C.samples.push({presentationTimestamp:x+xt,duration:R,byteOffset:T,byteSize:ze,isKeyFrame:Sr}),T+=ze,x+=R}C.presentationTimestamps=C.samples.map((I,R)=>({presentationTimestamp:I.presentationTimestamp,sampleIndex:R})).sort((I,R)=>I.presentationTimestamp-R.presentationTimestamp);let O=C.samples[C.presentationTimestamps[0].sampleIndex],_=C.samples[F(C.presentationTimestamps).sampleIndex];C.startTimestamp=O.presentationTimestamp,C.endTimestamp=_.presentationTimestamp+_.duration,this.currentFragment.implicitBaseDataOffset=T}break}this.isobmffReader.pos=a}},pt=class{constructor(t){this.internalTrack=t;this.chunkToSampleIndex=new WeakMap;this.chunkToFragmentLocation=new WeakMap}getCodec(){throw new Error("Not implemented on base class.")}async computeDuration(){let e=(await this.getChunk(1/0,{metadataOnly:!0}))?.timestamp;return e?e/1e6:0}async getFirstChunk(t){return this.internalTrack.demuxer.isFragmented?this.performFragmentedLookup(()=>{let e=this.internalTrack.fragments[0];return{fragmentIndex:e?0:-1,sampleIndex:e?0:-1,correctSampleFound:!!e}},0,1/0,t):this.fetchChunkForSampleIndex(0,t)}roundToMicrosecond(t){return(Math.floor(t*1e6)+.99999999)/1e6}async getChunk(t,e){t=this.roundToMicrosecond(t);let r=t*this.internalTrack.timescale;if(this.internalTrack.demuxer.isFragmented)return this.performFragmentedLookup(()=>this.findSampleInFragmentsForTimestamp(r),r,r,e);{let a=this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack),n=gr(a,r);return this.fetchChunkForSampleIndex(n,e)}}async getNextChunk(t,e){if(this.internalTrack.demuxer.isFragmented){let a=this.chunkToFragmentLocation.get(t);if(a===void 0)throw new Error("Chunk was not created from this track.");let n=a.fragment.trackData.get(this.internalTrack.id),s=n.samples[a.sampleIndex],o=K(this.internalTrack.fragments,a.fragment.moofOffset,c=>c.moofOffset);return l(o!==-1),this.performFragmentedLookup(()=>{if(a.sampleIndex+1<n.samples.length)return{fragmentIndex:o,sampleIndex:a.sampleIndex+1,correctSampleFound:!0};{let c=a.fragment;for(;c.nextFragment;)if(c=c.nextFragment,c.trackData.get(this.internalTrack.id)){let d=K(this.internalTrack.fragments,c.moofOffset,f=>f.moofOffset);return l(d!==-1),{fragmentIndex:d,sampleIndex:0,correctSampleFound:!0}}return{fragmentIndex:o,sampleIndex:-1,correctSampleFound:!1}}},s.presentationTimestamp,1/0,e)}let r=this.chunkToSampleIndex.get(t);if(r===void 0)throw new Error("Chunk was not created from this track.");return this.fetchChunkForSampleIndex(r+1,e)}async getKeyChunk(t,e){t=this.roundToMicrosecond(t);let r=t*this.internalTrack.timescale;if(this.internalTrack.demuxer.isFragmented)return this.performFragmentedLookup(()=>this.findKeySampleInFragmentsForTimestamp(r),r,r,e);let a=this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack),n=gr(a,r),s=n===-1?-1:Bi(a,n);return this.fetchChunkForSampleIndex(s,e)}async getNextKeyChunk(t,e){if(this.internalTrack.demuxer.isFragmented){let s=this.chunkToFragmentLocation.get(t);if(s===void 0)throw new Error("Chunk was not created from this track.");let o=s.fragment.trackData.get(this.internalTrack.id),c=o.samples[s.sampleIndex],u=K(this.internalTrack.fragments,s.fragment.moofOffset,d=>d.moofOffset);return l(u!==-1),this.performFragmentedLookup(()=>{let d=o.samples.findIndex((f,m)=>f.isKeyFrame&&m>s.sampleIndex);if(d!==-1)return{fragmentIndex:u,sampleIndex:d,correctSampleFound:!0};{let f=s.fragment;for(;f.nextFragment;){f=f.nextFragment;let m=f.trackData.get(this.internalTrack.id);if(m){let g=K(this.internalTrack.fragments,f.moofOffset,p=>p.moofOffset);l(g!==-1);let b=m.samples.findIndex(p=>p.isKeyFrame);if(b===-1)throw new Error("Not supported: Fragment does not contain key sample.");return{fragmentIndex:g,sampleIndex:b,correctSampleFound:!0}}}return{fragmentIndex:u,sampleIndex:-1,correctSampleFound:!1}}},c.presentationTimestamp,1/0,e)}let r=this.chunkToSampleIndex.get(t);if(r===void 0)throw new Error("Chunk was not created from this track.");let a=this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack),n=Ni(a,r);return this.fetchChunkForSampleIndex(n,e)}async fetchChunkForSampleIndex(t,e){if(t===-1)return null;let r=this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack),a=Ui(r,t);if(!a)return null;let n;e.metadataOnly?n=new Uint8Array(0):(await this.internalTrack.demuxer.chunkReader.reader.loadRange(a.chunkOffset,a.chunkOffset+a.chunkSize),n=this.internalTrack.demuxer.chunkReader.readRange(a.sampleOffset,a.sampleOffset+a.sampleSize));let s=1e6*a.presentationTimestamp/this.internalTrack.timescale,o=1e6*a.duration/this.internalTrack.timescale,c=this.createChunk(n,s,o,a.isKeyFrame);return this.chunkToSampleIndex.set(c,t),c}async fetchChunkInFragment(t,e,r){if(e===-1)return null;let n=t.trackData.get(this.internalTrack.id).samples[e];l(n);let s;r.metadataOnly?s=new Uint8Array(0):(await this.internalTrack.demuxer.chunkReader.reader.loadRange(t.dataStart,t.dataEnd),s=this.internalTrack.demuxer.chunkReader.readRange(n.byteOffset,n.byteOffset+n.byteSize));let o=1e6*n.presentationTimestamp/this.internalTrack.timescale,c=1e6*n.duration/this.internalTrack.timescale,u=this.createChunk(s,o,c,n.isKeyFrame);return this.chunkToFragmentLocation.set(u,{fragment:t,sampleIndex:e}),u}findSampleInFragmentsForTimestamp(t){let e=E(this.internalTrack.fragments,t,n=>n.trackData.get(this.internalTrack.id).startTimestamp),r=-1,a=!1;if(e!==-1){let s=this.internalTrack.fragments[e].trackData.get(this.internalTrack.id),o=E(s.presentationTimestamps,t,c=>c.presentationTimestamp);l(o!==-1),r=s.presentationTimestamps[o].sampleIndex,a=t<s.endTimestamp}return{fragmentIndex:e,sampleIndex:r,correctSampleFound:a}}findKeySampleInFragmentsForTimestamp(t){let e=E(this.internalTrack.fragments,t,n=>n.trackData.get(this.internalTrack.id).startTimestamp),r=-1,a=!1;if(e!==-1){let s=this.internalTrack.fragments[e].trackData.get(this.internalTrack.id),o=Qt(s.presentationTimestamps,u=>s.samples[u.sampleIndex].isKeyFrame&&u.presentationTimestamp<=t);if(o===-1)throw new Error("Not supported: Fragment does not begin with a key sample.");r=s.presentationTimestamps[o].sampleIndex,a=t<s.endTimestamp}return{fragmentIndex:e,sampleIndex:r,correctSampleFound:a}}async performFragmentedLookup(t,e,r,a){let n=this.internalTrack.demuxer,s=await n.fragmentLookupMutex.acquire();try{let{fragmentIndex:o,sampleIndex:c,correctSampleFound:u}=t();if(u){let k=this.internalTrack.fragments[o];return this.fetchChunkInFragment(k,c,a)}let d=n.isobmffReader,f=await d.reader.source._getSize(),m=null,g=o,b=c,p=null;if(this.internalTrack.fragmentLookupTable){let k=E(this.internalTrack.fragmentLookupTable,e,T=>T.timestamp);k!==-1&&(p=this.internalTrack.fragmentLookupTable[k])}if(o===-1)d.pos=p?.moofOffset??0;else{let k=this.internalTrack.fragments[o];!p||k.moofOffset>=k.moofOffset?(d.pos=k.moofOffset+k.moofSize,m=k):d.pos=p.moofOffset}for(;d.pos<f;){if(m){let x=m.trackData.get(this.internalTrack.id);if(x&&x.startTimestamp>r)break;if(m.nextFragment){d.pos=m.nextFragment.moofOffset+m.nextFragment.moofSize,m=m.nextFragment;continue}}await d.reader.loadRange(d.pos,d.pos+16);let k=d.pos,T=d.readBoxHeader();if(T.name==="moof"){let x=K(n.fragments,k,C=>C.moofOffset);if(x===-1){d.pos=k;let C=await n.readFragment();m&&(m.nextFragment=C),m=C;let{fragmentIndex:O,sampleIndex:_,correctSampleFound:I}=t();if(I){let R=this.internalTrack.fragments[O];return this.fetchChunkInFragment(R,_,a)}O!==-1&&(g=O,b=_)}else{let C=n.fragments[x];m&&(m.nextFragment=C),m=C}}d.pos=k+T.totalSize}if(g!==-1){let k=this.internalTrack.fragments[g];return this.fetchChunkInFragment(k,b,a)}return null}finally{s()}}},Mt=class extends pt{constructor(t){super(t),this.internalTrack=t}async getCodec(){return this.internalTrack.info.codec}async getCodedWidth(){return this.internalTrack.info.width}async getCodedHeight(){return this.internalTrack.info.height}async getRotation(){return this.internalTrack.rotation}async getDecoderConfig(){return{codec:ur(this.internalTrack.info.codec,this.internalTrack.info.codecDescription),codedWidth:this.internalTrack.info.width,codedHeight:this.internalTrack.info.height,description:this.internalTrack.info.codecDescription??void 0,colorSpace:this.internalTrack.info.colorSpace??void 0}}createChunk(t,e,r,a){return new EncodedVideoChunk({data:t,timestamp:e,duration:r,type:a?"key":"delta"})}},Dt=class extends pt{constructor(t){super(t),this.internalTrack=t}async getCodec(){return this.internalTrack.info.codec}async getNumberOfChannels(){return this.internalTrack.info.numberOfChannels}async getSampleRate(){return this.internalTrack.info.sampleRate}async getDecoderConfig(){return{codec:lr(this.internalTrack.info.codec,this.internalTrack.info.codecDescription),numberOfChannels:this.internalTrack.info.numberOfChannels,sampleRate:this.internalTrack.info.sampleRate,description:this.internalTrack.info.codecDescription??void 0}}createChunk(t,e,r,a){return new EncodedAudioChunk({data:t,timestamp:e,duration:r,type:a?"key":"delta"})}},gr=(i,t)=>{let e=E(i.presentationTimestamps,t,r=>r.presentationTimestamp);return e===-1?-1:i.presentationTimestamps[e].sampleIndex},Ui=(i,t)=>{let e=E(i.sampleTimingEntries,t,p=>p.startIndex),r=i.sampleTimingEntries[e];if(!r||r.startIndex+r.count<=t)return null;let n=r.startDecodeTimestamp+(t-r.startIndex)*r.delta,s=E(i.sampleCompositionTimeOffsets,t,p=>p.startIndex),o=i.sampleCompositionTimeOffsets[s];o&&(n+=o.offset);let c=i.sampleSizes[Math.min(t,i.sampleSizes.length-1)],u=E(i.sampleToChunk,t,p=>p.startSampleIndex),d=i.sampleToChunk[u];l(d);let f=d.startChunkIndex+Math.floor((t-d.startSampleIndex)/d.samplesPerChunk),m=i.chunkOffsets[f],g=0,b=m;if(i.sampleSizes.length===1)b+=c*(t-d.startSampleIndex),g+=c*d.samplesPerChunk;else{let p=d.startSampleIndex+(f-d.startChunkIndex)*d.samplesPerChunk;for(let k=p;k<p+d.samplesPerChunk;k++){let T=i.sampleSizes[k];k<t&&(b+=T),g+=T}}return{presentationTimestamp:n,duration:r.delta,sampleOffset:b,sampleSize:c,chunkOffset:m,chunkSize:g,isKeyFrame:i.keySampleIndices?K(i.keySampleIndices,t,p=>p)!==-1:!0}},Bi=(i,t)=>{if(!i.keySampleIndices)return t;let e=E(i.keySampleIndices,t,r=>r);return i.keySampleIndices[e]??-1},Ni=(i,t)=>{if(!i.keySampleIndices)return t+1;let e=E(i.keySampleIndices,t,r=>r);return i.keySampleIndices[e+1]??-1},Tr=(i,t)=>{i.startTimestamp+=t,i.endTimestamp+=t;for(let e of i.samples)e.presentationTimestamp+=t;for(let e of i.presentationTimestamps)e.presentationTimestamp+=t};var Z=class{},Re=class extends Z{async _canReadInput(t){if(await t._mainReader.source._getSize()<8)return!1;let r=new de(t._mainReader);return r.pos=4,r.readAscii(4)==="ftyp"}_createDemuxer(t){return new ht(t)}},Oe=class extends Z{async _canReadInput(){return!1}_createDemuxer(){throw new Error("Not implemented")}},Fe=new Re,xr=Fe,Cr=Fe,bt=new Oe,Pt=bt,wr=bt,yr=[Fe,Pt];var kt=class{constructor(t){this._demuxerPromise=null;this._format=null;if(!t||typeof t!="object")throw new TypeError("options must be an object.");if(!Array.isArray(t.formats)||t.formats.some(e=>!(e instanceof Z)))throw new TypeError("options.formats must be an array of InputFormat.");if(!(t.source instanceof j))throw new TypeError("options.source must be a Source.");this._formats=t.formats,this._source=t.source,this._mainReader=new ke(t.source)}_getDemuxer(){return this._demuxerPromise??=(async()=>{await this._mainReader.loadRange(0,4096);for(let t of this._formats)if(await t._canReadInput(this))return this._format=t,t._createDemuxer(this);throw new Error("Input has an unrecognizable format.")})()}async getFormat(){return await this._getDemuxer(),l(this._format),this._format}async computeDuration(){return(await this._getDemuxer()).computeDuration()}async getTracks(){return(await this._getDemuxer()).getTracks()}async getVideoTracks(){return(await this.getTracks()).filter(e=>e.isVideoTrack())}async getPrimaryVideoTrack(){return(await this.getTracks()).find(e=>e.isVideoTrack())??null}async getAudioTracks(){return(await this.getTracks()).filter(e=>e.isAudioTrack())}async getPrimaryAudioTrack(){return(await this.getTracks()).find(e=>e.isAudioTrack())??null}async getMimeType(){return(await this._getDemuxer()).getMimeType()}};var $=i=>{if(!i||typeof i!="object")throw new TypeError("options must be an object.");if(i.metadataOnly!==void 0&&typeof i.metadataOnly!="boolean")throw new TypeError("options.metadataOnly, when defined, must be a boolean.")},N=i=>{if(typeof i!="number"||Number.isNaN(i))throw new TypeError("timestamp must be a number.")},ge=class{async*chunks(t,e=1/0){let r=[],{promise:a,resolve:n}=M(),{promise:s,resolve:o}=M(),c=!1,u=null,d=[],f=()=>Math.max(2,d.length);(async()=>{let m=t??await this.getFirstChunk();for(;m&&!c&&!(m.timestamp/1e6>=e);){if(r.length>f()){({promise:s,resolve:o}=M()),await s;continue}r.push(m),n(),{promise:a,resolve:n}=M(),m=await this.getNextChunk(m)}c=!0,n()})().catch(m=>{u||(u=m,n())});try{for(;;){if(u)throw u;if(r.length>0){yield r.shift();let m=performance.now();for(d.push(m);d.length>0&&m-d[0]>=1e3;)d.shift();o()}else if(!c)await a;else break}}finally{c=!0,o()}}},Te=class{_duplicateFrame(t){return structuredClone(t)}async*mediaFramesAtTimestamps(t){Kt(t);let e=$t(t),r=[],a=8,n=[],{promise:s,resolve:o}=M(),{promise:c,resolve:u}=M(),d=!1,f=!1,m=null,g=null,b=T=>{n.push(T),o(),{promise:s,resolve:o}=M()},p=new Error,k=await this._createDecoder(T=>{if(u(),f){T.close();return}let x=!1;for(;r.length>0&&r[0]===T.timestamp;)b(this._duplicateFrame(T)),r.shift(),x=!0;x?(g?.close(),g=T):T.close()},T=>{m||(T.stack=p.stack,m=T,o())});(async()=>{let T=this._createChunkDrain(),x=null,C=null;for await(let O of e){for(N(O);n.length+k.decodeQueueSize>a;)({promise:c,resolve:u}=M()),await c;if(f)break;let _=await T.getChunk(O);if(!_){b(null);continue}let I=await T.getKeyChunk(O);if(!I){b(null);continue}for(r.push(_.timestamp),x&&I.timestamp===x.timestamp&&_.timestamp>=C.timestamp?(l(C),_.timestamp===C.timestamp&&r.length===1&&(g&&b(this._duplicateFrame(g)),r.shift())):(x=I,C=I,k.decode(I));C.timestamp!==_.timestamp;){let R=await T.getNextChunk(C);l(R),C=R,k.decode(R)}k.decodeQueueSize>=10&&await new Promise(R=>k.addEventListener("dequeue",R,{once:!0}))}await k.flush(),k.close(),d=!0,o()})().catch(T=>{m||(m=T,o())});try{for(;;){if(m)throw m;if(n.length>0){let T=n.shift();l(T!==void 0),yield T,u()}else if(!d)await s;else break}}finally{f=!0,u();for(let T of n)T?.close();g?.close()}}async*mediaFramesInRange(t=0,e=1/0){N(t),N(e);let r=8,a=[],n=!1,s=null,{promise:o,resolve:c}=M(),{promise:u,resolve:d}=M(),f=!1,m=!1,g=null,b=new Error,p=await this._createDecoder(x=>{d();let C=x.timestamp/1e6;if(C>=e&&(m=!0),m){x.close();return}s&&(C>t?(a.push(s),n=!0):s.close()),C>=t&&(a.push(x),n=!0),s=n?null:x,a.length>0&&(c(),{promise:o,resolve:c}=M())},x=>{g||(x.stack=b.stack,g=x,c())}),k=this._createChunkDrain(),T=await k.getKeyChunk(t)??await k.getFirstChunk();if(T){(async()=>{let x=T,C=1/0;if(e<1/0){let _=await k.getChunk(e),I=_?_.type==="key"&&_.timestamp/1e6===e?_:await k.getNextKeyChunk(_):null;I&&(C=I.timestamp/1e6)}let O=k.chunks(T,C);for(await O.next();x&&!m;){if(a.length+p.decodeQueueSize>r){({promise:u,resolve:d}=M()),await u;continue}p.decode(x);let _=await O.next();if(_.done)break;x=_.value}await O.return(),await p.flush(),p.close(),!n&&s&&a.push(s),f=!0,c()})().catch(x=>{g||(g=x,c())});try{for(;;){if(g)throw g;if(a.length>0)yield a.shift(),d();else if(!f)await o;else break}}finally{m=!0,d();for(let x of a)x.close()}}}},Ve=class extends ge{constructor(t){if(!(t instanceof U))throw new TypeError("videoTrack must be an InputVideoTrack.");super(),this._videoTrack=t}getFirstChunk(t={}){return $(t),this._videoTrack._backing.getFirstChunk(t)}getChunk(t,e={}){return N(t),$(e),this._videoTrack._backing.getChunk(t,e)}getNextChunk(t,e={}){if(!(t instanceof EncodedVideoChunk))throw new TypeError("chunk must be an EncodedVideoChunk.");return $(e),this._videoTrack._backing.getNextChunk(t,e)}getKeyChunk(t,e={}){return N(t),$(e),this._videoTrack._backing.getKeyChunk(t,e)}getNextKeyChunk(t,e={}){if(!(t instanceof EncodedVideoChunk))throw new TypeError("chunk must be an EncodedVideoChunk.");return $(e),this._videoTrack._backing.getNextKeyChunk(t,e)}},Me=class extends Te{constructor(e){if(!(e instanceof U))throw new TypeError("videoTrack must be an InputVideoTrack.");super();this._decoderConfig=null;this._videoTrack=e}async _createDecoder(e,r){this._decoderConfig??=await this._videoTrack.getDecoderConfig();let a=new VideoDecoder({output:e,error:r});return a.configure(this._decoderConfig),a}_createChunkDrain(){return new Ve(this._videoTrack)}async getFrame(e){N(e);for await(let r of this.mediaFramesAtTimestamps([e]))return r;throw new Error("Internal error: Iterator returned nothing.")}frames(e=0,r=1/0){return this.mediaFramesInRange(e,r)}framesAtTimestamps(e){return this.mediaFramesAtTimestamps(e)}},gt=class{constructor(t,e){if(!(t instanceof U))throw new TypeError("videoTrack must be an InputVideoTrack.");if(e&&typeof e!="object")throw new TypeError("dimensions, when defined, must be an object.");if(e&&(!Number.isInteger(e.width)||e.width<=0))throw new TypeError("dimensions.width must be a positive integer.");if(e&&(!Number.isInteger(e.height)||e.height<=0))throw new TypeError("dimensions.height must be a positive integer.");this._videoTrack=t,this._dimensions=e,this._videoFrameDrain=new Me(t)}async _videoFrameToWrappedCanvas(t){let e=this._dimensions?.width??await this._videoTrack.getDisplayWidth(),r=this._dimensions?.height??await this._videoTrack.getDisplayHeight(),a=await this._videoTrack.getRotation(),n=document.createElement("canvas");n.width=e,n.height=r;let s=n.getContext("2d",{alpha:!1});l(s),s.translate(e/2,r/2),s.rotate(a*Math.PI/180),s.translate(-e/2,-r/2);let[o,c]=a%180===0?[e,r]:[r,e];s.drawImage(t,(e-o)/2,(r-c)/2,o,c);let u={canvas:n,timestamp:t.timestamp/1e6,duration:(t.duration??0)/1e6};return t.close(),u}async getCanvas(t){N(t);let e=await this._videoFrameDrain.getFrame(t);return e&&this._videoFrameToWrappedCanvas(e)}async*canvases(t=0,e=1/0){for await(let r of this._videoFrameDrain.frames(t,e))yield this._videoFrameToWrappedCanvas(r)}async*canvasesAtTimestamps(t){for await(let e of this._videoFrameDrain.framesAtTimestamps(t))yield e&&this._videoFrameToWrappedCanvas(e)}},De=class extends ge{constructor(t){if(!(t instanceof B))throw new TypeError("audioTrack must be an InputAudioTrack.");super(),this._audioTrack=t}getFirstChunk(t={}){return $(t),this._audioTrack._backing.getFirstChunk(t)}getChunk(t,e={}){return N(t),$(e),this._audioTrack._backing.getChunk(t,e)}getNextChunk(t,e={}){if(!(t instanceof EncodedAudioChunk))throw new TypeError("chunk must be an EncodedAudioChunk.");return $(e),this._audioTrack._backing.getNextChunk(t,e)}getKeyChunk(t,e={}){return N(t),$(e),this._audioTrack._backing.getKeyChunk(t,e)}getNextKeyChunk(t,e={}){if(!(t instanceof EncodedAudioChunk))throw new TypeError("chunk must be an EncodedAudioChunk.");return $(e),this._audioTrack._backing.getNextKeyChunk(t,e)}},Pe=class extends Te{constructor(e){if(!(e instanceof B))throw new TypeError("audioTrack must be an InputAudioTrack.");super();this._decoderConfig=null;this._audioTrack=e}async _createDecoder(e,r){this._decoderConfig??=await this._audioTrack.getDecoderConfig();let a=new AudioDecoder({output:e,error:r});return a.configure(this._decoderConfig),a}_createChunkDrain(){return new De(this._audioTrack)}async getData(e){N(e);for await(let r of this.mediaFramesAtTimestamps([e]))return r;throw new Error("Internal error: Iterator returned nothing.")}data(e=0,r=1/0){return this.mediaFramesInRange(e,r)}dataAtTimestamps(e){return this.mediaFramesAtTimestamps(e)}},Tt=class{constructor(t){if(!(t instanceof B))throw new TypeError("audioTrack must be an InputAudioTrack.");this._audioDataDrain=new Pe(t)}_audioDataToWrappedArrayBuffer(t){let e=new AudioBuffer({numberOfChannels:t.numberOfChannels,length:t.numberOfFrames,sampleRate:t.sampleRate}),r=new Float32Array(t.allocationSize({planeIndex:0,format:"f32-planar"})/4);for(let s=0;s<t.numberOfChannels;s++)t.copyTo(r,{planeIndex:s,format:"f32-planar"}),e.copyToChannel(r,s);let a=1/t.sampleRate,n={buffer:e,timestamp:Math.round(t.timestamp/1e6/a)*a};return t.close(),n}async getBuffer(t){N(t);let e=await this._audioDataDrain.getData(t);return e&&this._audioDataToWrappedArrayBuffer(e)}async*buffers(t=0,e=1/0){for await(let r of this._audioDataDrain.data(t,e))yield this._audioDataToWrappedArrayBuffer(r)}async*buffersAtTimestamps(t){for await(let e of this._audioDataDrain.dataAtTimestamps(t))yield e&&this._audioDataToWrappedArrayBuffer(e)}};return Rr(Wi);})();
if (typeof module === "object" && typeof module.exports === "object") Object.assign(module.exports, Metamuxer)
