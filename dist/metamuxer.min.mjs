function d(t){if(!t)throw new Error("Assertion failed.")}var S=t=>t&&t[t.length-1],V=t=>t>=0&&t<2**32,z=(t,i,e)=>{let r=0;for(let s=i;s<e;s++){let a=Math.floor(s/8),o=t[a],n=7-(s&7),u=(o&1<<n)>>n;r<<=1,r|=u}return r},He=(t,i,e,r)=>{for(let s=i;s<e;s++){let a=Math.floor(s/8),o=t[a],n=7-(s&7);o&=~(1<<n),o|=(r&1<<e-s-1)>>e-s-1<<n,t[a]=o}},P=t=>t instanceof ArrayBuffer?new Uint8Array(t):new Uint8Array(t.buffer,t.byteOffset,t.byteLength),y=new TextEncoder,R={bt709:1,bt470bg:5,smpte170m:6},F={bt709:1,smpte170m:6,"iec61966-2-1":13},N={rgb:0,bt709:1,bt470bg:5,smpte170m:6},oe=t=>!!t&&!!t.primaries&&!!t.transfer&&!!t.matrix&&t.fullRange!==void 0,Ce=t=>t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer||ArrayBuffer.isView(t)&&!(t instanceof DataView),W=class{constructor(){this.currentPromise=Promise.resolve()}async acquire(){let i,e=new Promise(s=>{i=s}),r=this.currentPromise;return this.currentPromise=e,await r,i}};var X=/(?:(.+?)\n)?((?:\d{2}:)?\d{2}:\d{2}.\d{3})\s+-->\s+((?:\d{2}:)?\d{2}:\d{2}.\d{3})/g,mt=/^WEBVTT(.|\n)*?\n{2}/,H=/<(?:(\d{2}):)?(\d{2}):(\d{2}).(\d{3})>/g,ne=class{constructor(i){this.preambleText=null;this.preambleEmitted=!1;this.options=i}parse(i){i=i.replaceAll(`\r
`,`
`).replaceAll("\r",`
`),X.lastIndex=0;let e;if(!this.preambleText){if(!mt.test(i)){let s=new Error("WebVTT preamble incorrect.");throw this.options.error(s),s}e=X.exec(i);let r=i.slice(0,e?.index??i.length).trimEnd();if(!r){let s=new Error("No WebVTT preamble provided.");throw this.options.error(s),s}this.preambleText=r,e&&(i=i.slice(e.index),X.lastIndex=0)}for(;e=X.exec(i);){let r=i.slice(0,e.index),s=e[1],a=e.index+e[0].length,o=i.indexOf(`
`,a)+1,n=i.slice(a,o).trim(),u=i.indexOf(`

`,a);u===-1&&(u=i.length);let c=ue(e[2]),f=ue(e[3])-c,w=i.slice(o,u).trim();i=i.slice(u).trimStart(),X.lastIndex=0;let O={timestamp:c/1e3,duration:f/1e3,text:w,identifier:s,settings:n,notes:r},C={};this.preambleEmitted||(C.config={description:this.preambleText},this.preambleEmitted=!0),this.options.output(O,C)}}},ft=/(?:(\d{2}):)?(\d{2}):(\d{2}).(\d{3})/,ue=t=>{let i=ft.exec(t);if(!i)throw new Error("Expected match.");return 60*60*1e3*Number(i[1]||"0")+60*1e3*Number(i[2])+1e3*Number(i[3])+Number(i[4])},le=t=>{let i=Math.floor(t/36e5),e=Math.floor(t%(60*60*1e3)/(60*1e3)),r=Math.floor(t%(60*1e3)/1e3),s=t%1e3;return i.toString().padStart(2,"0")+":"+e.toString().padStart(2,"0")+":"+r.toString().padStart(2,"0")+"."+s.toString().padStart(3,"0")};var G=class{constructor(i){this.writer=i;this.helper=new Uint8Array(8);this.helperView=new DataView(this.helper.buffer);this.offsets=new WeakMap}writeU32(i){this.helperView.setUint32(0,i,!1),this.writer.write(this.helper.subarray(0,4))}writeU64(i){this.helperView.setUint32(0,Math.floor(i/2**32),!1),this.helperView.setUint32(4,i,!1),this.writer.write(this.helper.subarray(0,8))}writeAscii(i){for(let e=0;e<i.length;e++)this.helperView.setUint8(e%8,i.charCodeAt(e)),e%8===7&&this.writer.write(this.helper);i.length%8!==0&&this.writer.write(this.helper.subarray(0,i.length%8))}writeBox(i){if(this.offsets.set(i,this.writer.getPos()),i.contents&&!i.children)this.writeBoxHeader(i,i.size??i.contents.byteLength+8),this.writer.write(i.contents);else{let e=this.writer.getPos();if(this.writeBoxHeader(i,0),i.contents&&this.writer.write(i.contents),i.children)for(let a of i.children)a&&this.writeBox(a);let r=this.writer.getPos(),s=i.size??r-e;this.writer.seek(e),this.writeBoxHeader(i,s),this.writer.seek(r)}}writeBoxHeader(i,e){this.writeU32(i.largeSize?1:e),this.writeAscii(i.type),i.largeSize&&this.writeU64(e)}measureBoxHeader(i){return 8+(i.largeSize?8:0)}patchBox(i){let e=this.offsets.get(i);d(e!==void 0);let r=this.writer.getPos();this.writer.seek(e),this.writeBox(i),this.writer.seek(r)}measureBox(i){if(i.contents&&!i.children)return this.measureBoxHeader(i)+i.contents.byteLength;{let e=this.measureBoxHeader(i);if(i.contents&&(e+=i.contents.byteLength),i.children)for(let r of i.children)r&&(e+=this.measureBox(r));return e}}},p=new Uint8Array(8),A=new DataView(p.buffer),T=t=>[(t%256+256)%256],h=t=>(A.setUint16(0,t,!1),[p[0],p[1]]),pt=t=>(A.setInt16(0,t,!1),[p[0],p[1]]),$e=t=>(A.setUint32(0,t,!1),[p[1],p[2],p[3]]),l=t=>(A.setUint32(0,t,!1),[p[0],p[1],p[2],p[3]]),je=t=>(A.setInt32(0,t,!1),[p[0],p[1],p[2],p[3]]),B=t=>(A.setUint32(0,Math.floor(t/2**32),!1),A.setUint32(4,t,!1),[p[0],p[1],p[2],p[3],p[4],p[5],p[6],p[7]]),Se=t=>(A.setInt16(0,2**8*t,!1),[p[0],p[1]]),_=t=>(A.setInt32(0,2**16*t,!1),[p[0],p[1],p[2],p[3]]),ke=t=>(A.setInt32(0,2**30*t,!1),[p[0],p[1],p[2],p[3]]),ge=(t,i)=>{let e=[],r=t;do{let s=r&127;r>>=7,e.length>0&&(s|=128),e.push(s),i!==void 0&&i--}while(r>0||i);return e.reverse()},g=(t,i=!1)=>{let e=Array(t.length).fill(null).map((r,s)=>t.charCodeAt(s));return i&&e.push(0),e},ye=t=>{let i=null;for(let e of t)(!i||e.timestamp>i.timestamp)&&(i=e);return i},Le=t=>{let i=t*(Math.PI/180),e=Math.cos(i),r=Math.sin(i);return[e,r,0,-r,e,0,0,0,1]},qe=Le(0),Ke=t=>[_(t[0]),_(t[1]),ke(t[2]),_(t[3]),_(t[4]),ke(t[5]),_(t[6]),_(t[7]),ke(t[8])],b=(t,i,e)=>({type:t,contents:i&&new Uint8Array(i.flat(10)),children:e}),x=(t,i,e,r,s)=>b(t,[T(i),$e(e),r??[]],s),Xe=t=>{let i=512;return t.fragmented?b("ftyp",[g("iso5"),l(i),g("iso5"),g("iso6"),g("mp41")]):b("ftyp",[g("isom"),l(i),g("isom"),t.holdsAvc?g("avc1"):[],g("mp41")])},de=t=>({type:"mdat",largeSize:t}),Ge=t=>({type:"free",size:t}),Y=(t,i,e=!1)=>b("moov",void 0,[ht(i,t),...t.map(r=>bt(r,i)),e?Xt(t):null]),ht=(t,i)=>{let e=v(Math.max(0,...i.filter(o=>o.samples.length>0).map(o=>{let n=ye(o.samples);return n.timestamp+n.duration})),ce),r=Math.max(0,...i.map(o=>o.track.id))+1,s=!V(t)||!V(e),a=s?B:l;return x("mvhd",+s,0,[a(t),a(t),l(ce),a(e),_(1),Se(1),Array(10).fill(0),Ke(qe),Array(24).fill(0),l(r)])},bt=(t,i)=>b("trak",void 0,[xt(t,i),wt(t,i)]),xt=(t,i)=>{let e=ye(t.samples),r=v(e?e.timestamp+e.duration:0,ce),s=!V(i)||!V(r),a=s?B:l,o;if(t.type==="video"){let n=t.track.metadata.rotation;o=n===void 0||typeof n=="number"?Le(n??0):n}else o=qe;return x("tkhd",+s,3,[a(i),a(i),l(t.track.id),l(0),a(r),Array(8).fill(0),h(0),h(t.track.id),Se(t.type==="audio"?1:0),h(0),Ke(o),_(t.type==="video"?t.info.width:0),_(t.type==="video"?t.info.height:0)])},wt=(t,i)=>b("mdia",void 0,[Tt(t,i),gt(t),St(t)]),Tt=(t,i)=>{let e=ye(t.samples),r=v(e?e.timestamp+e.duration:0,t.timescale),s=!V(i)||!V(r),a=s?B:l;return x("mdhd",+s,0,[a(i),a(i),l(t.timescale),a(r),h(21956),h(0)])},Ct={video:"vide",audio:"soun",subtitle:"text"},kt={video:"VideoHandler",audio:"SoundHandler",subtitle:"TextHandler"},gt=t=>x("hdlr",0,0,[g("mhlr"),g(Ct[t.type]),l(0),l(0),l(0),g(kt[t.type],!0)]),St=t=>b("minf",void 0,[At[t.type](),Ot(),Vt(t)]),yt=()=>x("vmhd",0,1,[h(0),h(0),h(0),h(0)]),vt=()=>x("smhd",0,0,[h(0),h(0)]),_t=()=>x("nmhd",0,0),At={video:yt,audio:vt,subtitle:_t},Ot=()=>b("dinf",void 0,[Et()]),Et=()=>x("dref",0,0,[l(1)],[Mt()]),Mt=()=>x("url ",0,1),Vt=t=>{let i=t.compositionTimeOffsetTable.length>1||t.compositionTimeOffsetTable.some(e=>e.sampleCompositionTimeOffset!==0);return b("stbl",void 0,[zt(t),Qt(t),$t(t),jt(t),Lt(t),qt(t),i?Kt(t):null])},zt=t=>{let i;return t.type==="video"?i=Pt(sr[t.track.source._codec],t):t.type==="audio"?i=Wt(or[t.track.source._codec],t):t.type==="subtitle"&&(i=Nt(ur[t.track.source._codec],t)),d(i),x("stsd",0,0,[l(1)],[i])},Pt=(t,i)=>b(t,[Array(6).fill(0),h(1),h(0),h(0),Array(12).fill(0),h(i.info.width),h(i.info.height),l(4718592),l(4718592),l(0),h(1),Array(32).fill(0),h(24),pt(65535)],[ar[i.track.source._codec](i),oe(i.info.decoderConfig.colorSpace)?Bt(i):null]),Bt=t=>b("colr",[g("nclx"),h(R[t.info.decoderConfig.colorSpace.primaries]),h(F[t.info.decoderConfig.colorSpace.transfer]),h(N[t.info.decoderConfig.colorSpace.matrix]),T((t.info.decoderConfig.colorSpace.fullRange?1:0)<<7)]),It=t=>t.info.decoderConfig&&b("avcC",[...P(t.info.decoderConfig.description)]),Ut=t=>t.info.decoderConfig&&b("hvcC",[...P(t.info.decoderConfig.description)]),Qe=t=>{if(!t.info.decoderConfig)return null;let i=t.info.decoderConfig;d(i.colorSpace);let e=i.codec.split("."),r=Number(e[1]),s=Number(e[2]),n=(Number(e[3])<<4)+(0<<1)+Number(i.colorSpace.fullRange);return x("vpcC",1,0,[T(r),T(s),T(n),T(2),T(2),T(2),h(0)])},Dt=()=>{let e=(1<<7)+1;return b("av1C",[e,0,0,0])},Wt=(t,i)=>b(t,[Array(6).fill(0),h(1),h(0),h(0),l(0),h(i.info.numberOfChannels),h(16),h(0),h(0),_(i.info.sampleRate)],[nr[i.track.source._codec](i)]),Rt=t=>{let e=[...P(t.info.decoderConfig.description??new ArrayBuffer(0))];return e=[...T(64),...T(21),...$e(0),...l(0),...l(0),...T(5),...ge(e.length),...e],e=[...h(1),...T(0),...T(4),...ge(e.length),...e,...T(6),...T(1),...T(2)],e=[...T(3),...ge(e.length),...e],x("esds",0,0,e)},Ft=t=>{let i=3840,e=0,r=t.info.decoderConfig?.description;if(r){d(r.byteLength<18);let s=ArrayBuffer.isView(r)?new DataView(r.buffer,r.byteOffset,r.byteLength):new DataView(r);i=s.getUint16(10,!0),e=s.getInt16(14,!0)}return b("dOps",[T(0),T(t.info.numberOfChannels),h(i),l(t.info.sampleRate),Se(e),T(0)])},Nt=(t,i)=>b(t,[Array(6).fill(0),h(1)],[lr[i.track.source._codec](i)]),Ht=t=>b("vttC",[...y.encode(t.info.config.description)]);var Qt=t=>x("stts",0,0,[l(t.timeToSampleTable.length),t.timeToSampleTable.map(i=>[l(i.sampleCount),l(i.sampleDelta)])]),$t=t=>{if(t.samples.every(e=>e.type==="key"))return null;let i=[...t.samples.entries()].filter(([,e])=>e.type==="key");return x("stss",0,0,[l(i.length),i.map(([e])=>l(e+1))])},jt=t=>x("stsc",0,0,[l(t.compactlyCodedChunkTable.length),t.compactlyCodedChunkTable.map(i=>[l(i.firstChunk),l(i.samplesPerChunk),l(1)])]),Lt=t=>x("stsz",0,0,[l(0),l(t.samples.length),t.samples.map(i=>l(i.size))]),qt=t=>t.finalizedChunks.length>0&&S(t.finalizedChunks).offset>=2**32?x("co64",0,0,[l(t.finalizedChunks.length),t.finalizedChunks.map(i=>B(i.offset))]):x("stco",0,0,[l(t.finalizedChunks.length),t.finalizedChunks.map(i=>l(i.offset))]),Kt=t=>x("ctts",0,0,[l(t.compositionTimeOffsetTable.length),t.compositionTimeOffsetTable.map(i=>[l(i.sampleCount),l(i.sampleCompositionTimeOffset)])]),Xt=t=>b("mvex",void 0,t.map(Gt)),Gt=t=>x("trex",0,0,[l(t.track.id),l(1),l(0),l(0),l(0)]),ve=(t,i)=>b("moof",void 0,[Yt(t),...i.map(Zt)]),Yt=t=>x("mfhd",0,0,[l(t)]),Ye=t=>{let i=0,e=0,r=0,s=0,a=t.type==="delta";return e|=+a,a?i|=1:i|=2,i<<24|e<<16|r<<8|s},Zt=t=>b("traf",void 0,[Jt(t),er(t),tr(t)]),Jt=t=>{d(t.currentChunk);let i=0;i|=8,i|=16,i|=32,i|=131072;let e=t.currentChunk.samples[1]??t.currentChunk.samples[0],r={duration:e.timescaleUnitsToNextSample,size:e.size,flags:Ye(e)};return x("tfhd",0,i,[l(t.track.id),l(r.duration),l(r.size),l(r.flags)])},er=t=>(d(t.currentChunk),x("tfdt",1,0,[B(v(t.currentChunk.startTimestamp,t.timescale))])),tr=t=>{d(t.currentChunk);let i=t.currentChunk.samples.map(k=>k.timescaleUnitsToNextSample),e=t.currentChunk.samples.map(k=>k.size),r=t.currentChunk.samples.map(Ye),s=t.currentChunk.samples.map(k=>v(k.timestamp-k.decodeTimestamp,t.timescale)),a=new Set(i),o=new Set(e),n=new Set(r),u=new Set(s),c=n.size===2&&r[0]!==r[1],m=a.size>1,f=o.size>1,w=!c&&n.size>1,O=u.size>1||[...u].some(k=>k!==0),C=0;return C|=1,C|=4*+c,C|=256*+m,C|=512*+f,C|=1024*+w,C|=2048*+O,x("trun",1,C,[l(t.currentChunk.samples.length),l(t.currentChunk.offset-t.currentChunk.moofOffset||0),c?l(r[0]):[],t.currentChunk.samples.map((k,D)=>[m?l(i[D]):[],f?l(e[D]):[],w?l(r[D]):[],O?je(s[D]):[]])])},Ze=t=>b("mfra",void 0,[...t.map(rr),ir()]),rr=(t,i)=>x("tfra",1,0,[l(t.track.id),l(63),l(t.finalizedChunks.length),t.finalizedChunks.map(r=>[B(v(r.startTimestamp,t.timescale)),B(r.moofOffset),l(i+1),l(1),l(1)])]),ir=()=>x("mfro",0,0,[l(0)]),Je=()=>b("vtte"),et=(t,i,e,r,s)=>b("vttc",void 0,[s!==null?b("vsid",[je(s)]):null,e!==null?b("iden",[...y.encode(e)]):null,i!==null?b("ctim",[...y.encode(le(i))]):null,r!==null?b("sttg",[...y.encode(r)]):null,b("payl",[...y.encode(t)])]),tt=t=>b("vtta",[...y.encode(t)]),sr={avc:"avc1",hevc:"hvc1",vp8:"vp08",vp9:"vp09",av1:"av01"},ar={avc:It,hevc:Ut,vp8:Qe,vp9:Qe,av1:Dt},or={aac:"mp4a",opus:"Opus"},nr={aac:Rt,opus:Ft},ur={webvtt:"wvtt"},lr={webvtt:Ht};var Q=class{constructor(i){this.mutex=new W;this.trackTimestampInfo=new WeakMap;this.output=i}beforeTrackAdd(i){}onTrackClose(i){}validateAndNormalizeTimestamp(i,e,r){let s=e/1e6,a=this.trackTimestampInfo.get(i);if(!a){if(!r)throw new Error("First frame must be a key frame.");if(this.timestampsMustStartAtZero&&s>0)throw new Error(`Timestamps must start at zero (got ${s}s).`);a={timestampOffset:s,maxTimestamp:i.source._offsetTimestamps?0:s,lastKeyFrameTimestamp:i.source._offsetTimestamps?0:s},this.trackTimestampInfo.set(i,a)}if(i.source._offsetTimestamps&&(s-=a.timestampOffset),s<0)throw new Error(`Timestamps must be non-negative (got ${s}s).`);if(s<a.lastKeyFrameTimestamp)throw new Error(`Timestamp cannot be smaller than last key frame's timestamp (got ${s}s, last key frame at ${a.lastKeyFrameTimestamp}s).`);if(r){if(s<a.maxTimestamp)throw new Error(`Key frame timestamps cannot be smaller than any timestamp that came before (got ${s}s, max timestamp was ${a.maxTimestamp}s).`);a.lastKeyFrameTimestamp=s}return a.maxTimestamp=Math.max(a.maxTimestamp,s),s}};var Z=class{constructor(){this.ensureMonotonicity=!1}start(){}},$=class extends Z{constructor(e){super();this.pos=0;this.buffer=new ArrayBuffer(2**16);this.bytes=new Uint8Array(this.buffer);this.maxPos=0;this.target=e}ensureSize(e){let r=this.buffer.byteLength;for(;r<e;)r*=2;if(r===this.buffer.byteLength)return;let s=new ArrayBuffer(r),a=new Uint8Array(s);a.set(this.bytes,0),this.buffer=s,this.bytes=a}write(e){this.ensureSize(this.pos+e.byteLength),this.bytes.set(e,this.pos),this.pos+=e.byteLength,this.maxPos=Math.max(this.maxPos,this.pos)}seek(e){this.pos=e}getPos(){return this.pos}async flush(){}async finalize(){this.ensureSize(this.pos),this.target.buffer=this.buffer.slice(0,Math.max(this.maxPos,this.pos))}getSlice(e,r){return this.bytes.slice(e,r)}},me=class extends Z{constructor(e){super();this.pos=0;this.sections=[];this.lastFlushEnd=0;this.writer=null;this.target=e}start(){this.writer=this.target._writable.getWriter()}write(e){this.sections.push({data:e.slice(),start:this.pos}),this.pos+=e.byteLength}seek(e){this.pos=e}getPos(){return this.pos}async flush(){if(d(this.writer),this.sections.length===0)return;let e=[],r=[...this.sections].sort((s,a)=>s.start-a.start);e.push({start:r[0].start,size:r[0].data.byteLength});for(let s=1;s<r.length;s++){let a=e[e.length-1],o=r[s];o.start<=a.start+a.size?a.size=Math.max(a.size,o.start+o.data.byteLength-a.start):e.push({start:o.start,size:o.data.byteLength})}for(let s of e){s.data=new Uint8Array(s.size);for(let a of this.sections)s.start<=a.start&&a.start<s.start+s.size&&s.data.set(a.data,a.start-s.start);if(this.ensureMonotonicity&&s.start!==this.lastFlushEnd)throw new Error("Internal error: Monotonicity violation.");this.writer.desiredSize!==null&&this.writer.desiredSize<=0&&await this.writer.ready,this.writer.write({type:"write",data:s.data,position:s.start}),this.lastFlushEnd=s.start+s.data.byteLength}this.sections.length=0}finalize(){return d(this.writer),this.writer.close()}},cr=2**24,dr=2,fe=class extends Z{constructor(e){super();this.pos=0;this.chunks=[];this.lastFlushEnd=0;this.writer=null;this.flushedChunkQueue=[];if(this.target=e,this.chunkSize=e._options?.chunkSize??cr,!Number.isInteger(this.chunkSize)||this.chunkSize<2**10)throw new Error("Invalid StreamTarget options: chunkSize must be an integer not smaller than 1024.")}start(){this.writer=this.target._writable.getWriter()}write(e){this.writeDataIntoChunks(e,this.pos),this.queueChunksForFlush(),this.pos+=e.byteLength}seek(e){this.pos=e}getPos(){return this.pos}writeDataIntoChunks(e,r){let s=this.chunks.findIndex(c=>c.start<=r&&r<c.start+this.chunkSize);s===-1&&(s=this.createChunk(r));let a=this.chunks[s],o=r-a.start,n=e.subarray(0,Math.min(this.chunkSize-o,e.byteLength));a.data.set(n,o);let u={start:o,end:o+n.byteLength};if(this.insertSectionIntoChunk(a,u),a.written[0].start===0&&a.written[0].end===this.chunkSize&&(a.shouldFlush=!0),this.chunks.length>dr){for(let c=0;c<this.chunks.length-1;c++)this.chunks[c].shouldFlush=!0;this.queueChunksForFlush()}n.byteLength<e.byteLength&&this.writeDataIntoChunks(e.subarray(n.byteLength),r+n.byteLength)}insertSectionIntoChunk(e,r){let s=0,a=e.written.length-1,o=-1;for(;s<=a;){let n=Math.floor(s+(a-s+1)/2);e.written[n].start<=r.start?(s=n+1,o=n):a=n-1}for(e.written.splice(o+1,0,r),(o===-1||e.written[o].end<r.start)&&o++;o<e.written.length-1&&e.written[o].end>=e.written[o+1].start;)e.written[o].end=Math.max(e.written[o].end,e.written[o+1].end),e.written.splice(o+1,1)}createChunk(e){let s={start:Math.floor(e/this.chunkSize)*this.chunkSize,data:new Uint8Array(this.chunkSize),written:[],shouldFlush:!1};return this.chunks.push(s),this.chunks.sort((a,o)=>a.start-o.start),this.chunks.indexOf(s)}queueChunksForFlush(e=!1){d(this.writer);for(let r=0;r<this.chunks.length;r++){let s=this.chunks[r];if(!(!s.shouldFlush&&!e)){for(let a of s.written){if(this.ensureMonotonicity&&s.start+a.start!==this.lastFlushEnd)throw new Error("Internal error: Monotonicity violation.");this.flushedChunkQueue.push({type:"write",data:s.data.subarray(a.start,a.end),position:s.start+a.start}),this.lastFlushEnd=s.start+a.end}this.chunks.splice(r--,1)}}}async flush(){if(d(this.writer),this.flushedChunkQueue.length!==0){for(let e of this.flushedChunkQueue)this.writer.desiredSize!==null&&this.writer.desiredSize<=0&&await this.writer.ready,this.writer.write(e);this.flushedChunkQueue.length=0}}async finalize(){return d(this.writer),this.queueChunksForFlush(!0),await this.flush(),this.writer.close()}};var I=class{constructor(){this._output=null}},J=class extends I{constructor(){super(...arguments);this.buffer=null}_createWriter(){return new $(this)}},_e=class extends I{constructor(i,e={}){if(super(),!(i instanceof WritableStream))throw new TypeError("StreamTarget requires a WritableStream instance.");if(e!=null&&typeof e!="object")throw new TypeError("StreamTarget options, when provided, must be an object.");if(e.chunked!==void 0&&typeof e.chunked!="boolean")throw new TypeError("options.chunked, when provided, must be a boolean.");if(e.chunkSize!==void 0&&(!Number.isInteger(e.chunkSize)||e.chunkSize<=0))throw new TypeError("options.chunkSize, when provided, must be a positive integer.");this._writable=i,this._options=e}_createWriter(){return this._options.chunked?new fe(this):new me(this)}};var rt=[{maxMacroblocks:99,maxBitrate:64e3,level:10},{maxMacroblocks:396,maxBitrate:192e3,level:11},{maxMacroblocks:396,maxBitrate:384e3,level:12},{maxMacroblocks:396,maxBitrate:768e3,level:13},{maxMacroblocks:396,maxBitrate:2e6,level:20},{maxMacroblocks:792,maxBitrate:4e6,level:21},{maxMacroblocks:1620,maxBitrate:4e6,level:22},{maxMacroblocks:1620,maxBitrate:1e7,level:30},{maxMacroblocks:3600,maxBitrate:14e6,level:31},{maxMacroblocks:5120,maxBitrate:2e7,level:32},{maxMacroblocks:8192,maxBitrate:2e7,level:40},{maxMacroblocks:8192,maxBitrate:5e7,level:41},{maxMacroblocks:8704,maxBitrate:5e7,level:42},{maxMacroblocks:22080,maxBitrate:135e6,level:50},{maxMacroblocks:36864,maxBitrate:24e7,level:51},{maxMacroblocks:36864,maxBitrate:24e7,level:52},{maxMacroblocks:139264,maxBitrate:24e7,level:60},{maxMacroblocks:139264,maxBitrate:48e7,level:61},{maxMacroblocks:139264,maxBitrate:8e8,level:62}],it=[{maxPictureSize:36864,maxBitrate:128e3,tier:"L",level:30},{maxPictureSize:122880,maxBitrate:15e5,tier:"L",level:60},{maxPictureSize:245760,maxBitrate:3e6,tier:"L",level:63},{maxPictureSize:552960,maxBitrate:6e6,tier:"L",level:90},{maxPictureSize:983040,maxBitrate:1e7,tier:"L",level:93},{maxPictureSize:2228224,maxBitrate:12e6,tier:"L",level:120},{maxPictureSize:2228224,maxBitrate:3e7,tier:"H",level:120},{maxPictureSize:2228224,maxBitrate:2e7,tier:"L",level:123},{maxPictureSize:2228224,maxBitrate:5e7,tier:"H",level:123},{maxPictureSize:8912896,maxBitrate:25e6,tier:"L",level:150},{maxPictureSize:8912896,maxBitrate:1e8,tier:"H",level:150},{maxPictureSize:8912896,maxBitrate:4e7,tier:"L",level:153},{maxPictureSize:8912896,maxBitrate:16e7,tier:"H",level:153},{maxPictureSize:8912896,maxBitrate:6e7,tier:"L",level:156},{maxPictureSize:8912896,maxBitrate:24e7,tier:"H",level:156},{maxPictureSize:35651584,maxBitrate:6e7,tier:"L",level:180},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:180},{maxPictureSize:35651584,maxBitrate:12e7,tier:"L",level:183},{maxPictureSize:35651584,maxBitrate:48e7,tier:"H",level:183},{maxPictureSize:35651584,maxBitrate:24e7,tier:"L",level:186},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:186}],st=[{maxPictureSize:36864,maxBitrate:2e5,level:10},{maxPictureSize:73728,maxBitrate:8e5,level:11},{maxPictureSize:122880,maxBitrate:18e5,level:20},{maxPictureSize:245760,maxBitrate:36e5,level:21},{maxPictureSize:552960,maxBitrate:72e5,level:30},{maxPictureSize:983040,maxBitrate:12e6,level:31},{maxPictureSize:2228224,maxBitrate:18e6,level:40},{maxPictureSize:2228224,maxBitrate:3e7,level:41},{maxPictureSize:8912896,maxBitrate:6e7,level:50},{maxPictureSize:8912896,maxBitrate:12e7,level:51},{maxPictureSize:8912896,maxBitrate:18e7,level:52},{maxPictureSize:35651584,maxBitrate:18e7,level:60},{maxPictureSize:35651584,maxBitrate:24e7,level:61},{maxPictureSize:35651584,maxBitrate:48e7,level:62}],at=[{maxPictureSize:147456,maxBitrate:15e5,tier:"M",level:0},{maxPictureSize:278784,maxBitrate:3e6,tier:"M",level:1},{maxPictureSize:665856,maxBitrate:6e6,tier:"M",level:4},{maxPictureSize:1065024,maxBitrate:1e7,tier:"M",level:5},{maxPictureSize:2359296,maxBitrate:12e6,tier:"M",level:8},{maxPictureSize:2359296,maxBitrate:3e7,tier:"H",level:8},{maxPictureSize:2359296,maxBitrate:2e7,tier:"M",level:9},{maxPictureSize:2359296,maxBitrate:5e7,tier:"H",level:9},{maxPictureSize:8912896,maxBitrate:3e7,tier:"M",level:12},{maxPictureSize:8912896,maxBitrate:1e8,tier:"H",level:12},{maxPictureSize:8912896,maxBitrate:4e7,tier:"M",level:13},{maxPictureSize:8912896,maxBitrate:16e7,tier:"H",level:13},{maxPictureSize:8912896,maxBitrate:6e7,tier:"M",level:14},{maxPictureSize:8912896,maxBitrate:24e7,tier:"H",level:14},{maxPictureSize:35651584,maxBitrate:6e7,tier:"M",level:15},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:15},{maxPictureSize:35651584,maxBitrate:6e7,tier:"M",level:16},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:16},{maxPictureSize:35651584,maxBitrate:1e8,tier:"M",level:17},{maxPictureSize:35651584,maxBitrate:48e7,tier:"H",level:17},{maxPictureSize:35651584,maxBitrate:16e7,tier:"M",level:18},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:18},{maxPictureSize:35651584,maxBitrate:16e7,tier:"M",level:19},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:19}],ot=(t,i,e,r)=>{if(t==="avc"){let a=Math.ceil(i/16)*Math.ceil(e/16),o=rt.find(f=>a<=f.maxMacroblocks&&r<=f.maxBitrate)??S(rt),n=o?o.level:0,u="64".padStart(2,"0"),c="00",m=n.toString(16).padStart(2,"0");return`avc1.${u}${c}${m}`}else if(t==="hevc"){let s=0,a=1,o="6",n=i*e,u=it.find(f=>n<=f.maxPictureSize&&r<=f.maxBitrate)??S(it);return`hev1.${s===0?"":String.fromCharCode(65+s-1)}${a}.${o}.${u.tier}${u.level}.B0`}else{if(t==="vp8")return"vp8";if(t==="vp9"){let s="00",a=i*e,o=st.find(u=>a<=u.maxPictureSize&&r<=u.maxBitrate)??S(st);return`vp09.${s}.${o.level}.08`}else if(t==="av1"){let a=i*e,o=at.find(u=>a<=u.maxPictureSize&&r<=u.maxBitrate)??S(at);return`av01.0.${o.level.toString().padStart(2,"0")}${o.tier}.08`}}throw new TypeError(`Unhandled codec '${t}'.`)},nt=(t,i,e)=>{if(t==="aac")return i>=2&&e<=24e3?"mp4a.40.29":e<=24e3?"mp4a.40.5":"mp4a.40.2";if(t==="opus")return"opus";if(t==="vorbis")return"vorbis";throw new TypeError(`Unhandled codec '${t}'.`)},pe=t=>{if(!t)throw new TypeError("Video chunk metadata must be provided.");if(typeof t!="object")throw new TypeError("Video chunk metadata must be an object.");if(!t.decoderConfig)throw new TypeError("Video chunk metadata must include a decoder configuration.");if(typeof t.decoderConfig!="object")throw new TypeError("Video chunk metadata decoder configuration must be an object.");if(typeof t.decoderConfig.codec!="string")throw new TypeError("Video chunk metadata decoder configuration must specify a codec string.");if(!Number.isInteger(t.decoderConfig.codedWidth)||t.decoderConfig.codedWidth<=0)throw new TypeError("Video chunk metadata decoder configuration must specify a valid codedWidth (positive integer).");if(!Number.isInteger(t.decoderConfig.codedHeight)||t.decoderConfig.codedHeight<=0)throw new TypeError("Video chunk metadata decoder configuration must specify a valid codedHeight (positive integer).");if(t.decoderConfig.description!==void 0&&!Ce(t.decoderConfig.description))throw new TypeError("Video chunk metadata decoder configuration description, when defined, must be an ArrayBuffer or an ArrayBuffer view.");if(t.decoderConfig.colorSpace!==void 0){let{colorSpace:i}=t.decoderConfig;if(typeof i!="object")throw new TypeError("Video chunk metadata decoder configuration colorSpace, when provided, must be an object.");let e=Object.keys(R);if(i.primaries!=null&&!e.includes(i.primaries))throw new TypeError(`Video chunk metadata decoder configuration colorSpace primaries, when defined, must be one of ${e.join(", ")}.`);let r=Object.keys(F);if(i.transfer!=null&&!r.includes(i.transfer))throw new TypeError(`Video chunk metadata decoder configuration colorSpace transfer, when defined, must be one of ${r.join(", ")}.`);let s=Object.keys(N);if(i.matrix!=null&&!s.includes(i.matrix))throw new TypeError(`Video chunk metadata decoder configuration colorSpace matrix, when defined, must be one of ${s.join(", ")}.`);if(i.fullRange!=null&&typeof i.fullRange!="boolean")throw new TypeError("Video chunk metadata decoder configuration colorSpace fullRange, when defined, must be a boolean.")}if((t.decoderConfig.codec.startsWith("avc1")||t.decoderConfig.codec.startsWith("avc3"))&&!t.decoderConfig.description)throw new TypeError("Video chunk metadata decoder configuration for AVC must include a description, which is expected to be an AVCDecoderConfigurationRecord as specified in ISO 14496-15.");if((t.decoderConfig.codec.startsWith("hev1")||t.decoderConfig.codec.startsWith("hvc1"))&&!t.decoderConfig.description)throw new TypeError("Video chunk metadata decoder configuration for HEVC must include a description, which is expected to be an HEVCDecoderConfigurationRecord as specified in ISO 14496-15.");if((t.decoderConfig.codec==="vp8"||t.decoderConfig.codec.startsWith("vp09"))&&t.decoderConfig.colorSpace===void 0)throw new TypeError("Video chunk metadata decoder configuration for VP8/VP9 must include a colorSpace.")},he=t=>{if(!t)throw new TypeError("Audio chunk metadata must be provided.");if(typeof t!="object")throw new TypeError("Audio chunk metadata must be an object.");if(!t.decoderConfig)throw new TypeError("Audio chunk metadata must include a decoder configuration.");if(typeof t.decoderConfig!="object")throw new TypeError("Audio chunk metadata decoder configuration must be an object.");if(typeof t.decoderConfig.codec!="string")throw new TypeError("Audio chunk metadata decoder configuration must specify a codec string.");if(!Number.isInteger(t.decoderConfig.sampleRate)||t.decoderConfig.sampleRate<=0)throw new TypeError("Audio chunk metadata decoder configuration must specify a valid sampleRate (positive integer).");if(!Number.isInteger(t.decoderConfig.numberOfChannels)||t.decoderConfig.numberOfChannels<=0)throw new TypeError("Audio chunk metadata decoder configuration must specify a valid numberOfChannels (positive integer).");if(t.decoderConfig.description!==void 0&&!Ce(t.decoderConfig.description))throw new TypeError("Audio chunk metadata decoder configuration description, when defined, must be an ArrayBuffer or an ArrayBuffer view.");if(t.decoderConfig.codec==="opus"&&t.decoderConfig.description&&t.decoderConfig.description.byteLength<18)throw new TypeError("Invalid decoder description provided for Opus; must be at least 18 bytes long.")},be=t=>{if(!t)throw new TypeError("Subtitle metadata must be provided.");if(typeof t!="object")throw new TypeError("Subtitle metadata must be an object.");if(!t.config)throw new TypeError("Subtitle metadata must include a config object.");if(typeof t.config!="object")throw new TypeError("Subtitle metadata config must be an object.");if(typeof t.config.description!="string")throw new TypeError("Subtitle metadata config description must be a string.")};var ce=1e3,mr=2082844800,v=(t,i,e=!0)=>{let r=t*i;return e?Math.round(r):r},xe=class extends Q{constructor(e,r){super(e);this.timestampsMustStartAtZero=!0;this.auxTarget=new J;this.auxWriter=this.auxTarget._createWriter();this.auxBoxWriter=new G(this.auxWriter);this.ftypSize=null;this.mdat=null;this.trackDatas=[];this.creationTime=Math.floor(Date.now()/1e3)+mr;this.finalizedChunks=[];this.nextFragmentNumber=1;this.writer=e._writer,this.boxWriter=new G(this.writer),this.fastStart=r._options.fastStart??(this.writer instanceof $?"in-memory":!1),(this.fastStart==="in-memory"||this.fastStart==="fragmented")&&(this.writer.ensureMonotonicity=!0)}async start(){let e=await this.mutex.acquire(),r=this.output._tracks.some(s=>s.type==="video"&&s.source._codec==="avc");this.boxWriter.writeBox(Xe({holdsAvc:r,fragmented:this.fastStart==="fragmented"})),this.ftypSize=this.writer.getPos(),this.fastStart==="in-memory"?this.mdat=de(!1):this.fastStart==="fragmented"||(this.mdat=de(!0),this.boxWriter.writeBox(this.mdat)),await this.writer.flush(),e()}getVideoTrackData(e,r){let s=this.trackDatas.find(o=>o.track===e);if(s)return s;pe(r),d(r),d(r.decoderConfig),d(r.decoderConfig.codedWidth!==void 0),d(r.decoderConfig.codedHeight!==void 0);let a={track:e,type:"video",info:{width:r.decoderConfig.codedWidth,height:r.decoderConfig.codedHeight,decoderConfig:r.decoderConfig},timescale:e.metadata.frameRate??57600,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[]};return this.trackDatas.push(a),this.trackDatas.sort((o,n)=>o.track.id-n.track.id),a}getAudioTrackData(e,r){let s=this.trackDatas.find(o=>o.track===e);if(s)return s;he(r),d(r),d(r.decoderConfig);let a={track:e,type:"audio",info:{numberOfChannels:r.decoderConfig.numberOfChannels,sampleRate:r.decoderConfig.sampleRate,decoderConfig:r.decoderConfig},timescale:r.decoderConfig.sampleRate,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[]};return this.trackDatas.push(a),this.trackDatas.sort((o,n)=>o.track.id-n.track.id),a}getSubtitleTrackData(e,r){let s=this.trackDatas.find(o=>o.track===e);if(s)return s;be(r),d(r),d(r.config);let a={track:e,type:"subtitle",info:{config:r.config},timescale:1e3,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[],lastCueEndTimestamp:0,cueQueue:[],nextSourceId:0,cueToSourceId:new WeakMap};return this.trackDatas.push(a),this.trackDatas.sort((o,n)=>o.track.id-n.track.id),this.validateAndNormalizeTimestamp(e,0,!0),a}async addEncodedVideoChunk(e,r,s){let a=await this.mutex.acquire();try{let o=this.getVideoTrackData(e,s),n=new Uint8Array(r.byteLength);r.copyTo(n);let u=this.validateAndNormalizeTimestamp(o.track,r.timestamp,r.type==="key"),c=this.createSampleForTrack(o,n,u,(r.duration??0)/1e6,r.type);await this.registerSample(o,c)}finally{a()}}async addEncodedAudioChunk(e,r,s){let a=await this.mutex.acquire();try{let o=this.getAudioTrackData(e,s),n=new Uint8Array(r.byteLength);r.copyTo(n);let u=this.validateAndNormalizeTimestamp(o.track,r.timestamp,r.type==="key"),c=this.createSampleForTrack(o,n,u,(r.duration??0)/1e6,r.type);await this.registerSample(o,c)}finally{a()}}async addSubtitleCue(e,r,s){let a=await this.mutex.acquire();try{let o=this.getSubtitleTrackData(e,s);this.validateAndNormalizeTimestamp(o.track,1e6*r.timestamp,!0),e.source._codec==="webvtt"&&(o.cueQueue.push(r),await this.processWebVTTCues(o,r.timestamp))}finally{a()}}async processWebVTTCues(e,r){for(;e.cueQueue.length>0;){let s=new Set([]);for(let m of e.cueQueue)d(m.timestamp<=r),d(e.lastCueEndTimestamp<=m.timestamp+m.duration),s.add(Math.max(m.timestamp,e.lastCueEndTimestamp)),s.add(m.timestamp+m.duration);let a=[...s].sort((m,f)=>m-f),o=a[0],n=a[1]??o;if(r<n)break;if(e.lastCueEndTimestamp<o){this.auxWriter.seek(0);let m=Je();this.auxBoxWriter.writeBox(m);let f=this.auxWriter.getSlice(0,this.auxWriter.getPos()),w=this.createSampleForTrack(e,f,e.lastCueEndTimestamp,o-e.lastCueEndTimestamp,"key");await this.registerSample(e,w),e.lastCueEndTimestamp=o}this.auxWriter.seek(0);for(let m=0;m<e.cueQueue.length;m++){let f=e.cueQueue[m];if(f.timestamp>=n)break;H.lastIndex=0;let w=H.test(f.text),O=f.timestamp+f.duration,C=e.cueToSourceId.get(f);if(C===void 0&&n<O&&(C=e.nextSourceId++,e.cueToSourceId.set(f,C)),f.notes){let D=tt(f.notes);this.auxBoxWriter.writeBox(D)}let k=et(f.text,w?o:null,f.identifier??null,f.settings??null,C??null);this.auxBoxWriter.writeBox(k),O===n&&e.cueQueue.splice(m--,1)}let u=this.auxWriter.getSlice(0,this.auxWriter.getPos()),c=this.createSampleForTrack(e,u,o,n-o,"key");await this.registerSample(e,c),e.lastCueEndTimestamp=n}}createSampleForTrack(e,r,s,a,o){return{timestamp:s,decodeTimestamp:s,duration:a,data:r,size:r.byteLength,type:o,timescaleUnitsToNextSample:v(a,e.timescale)}}processTimestamps(e){if(e.timestampProcessingQueue.length===0)return;let r=e.timestampProcessingQueue.map(s=>s.timestamp).sort((s,a)=>s-a);for(let s=0;s<e.timestampProcessingQueue.length;s++){let a=e.timestampProcessingQueue[s];a.decodeTimestamp=r[s];let o=v(a.timestamp-a.decodeTimestamp,e.timescale),n=v(a.duration,e.timescale);if(e.lastTimescaleUnits!==null){d(e.lastSample);let u=v(a.decodeTimestamp,e.timescale,!1),c=Math.round(u-e.lastTimescaleUnits);if(e.lastTimescaleUnits+=c,e.lastSample.timescaleUnitsToNextSample=c,this.fastStart!=="fragmented"){let m=S(e.timeToSampleTable);if(d(m),m.sampleCount===1){m.sampleDelta=c;let w=e.timeToSampleTable[e.timeToSampleTable.length-2];w&&w.sampleDelta===c&&(w.sampleCount++,e.timeToSampleTable.pop(),m=w)}else m.sampleDelta!==c&&(m.sampleCount--,e.timeToSampleTable.push(m={sampleCount:1,sampleDelta:c}));m.sampleDelta===n?m.sampleCount++:e.timeToSampleTable.push({sampleCount:1,sampleDelta:n});let f=S(e.compositionTimeOffsetTable);d(f),f.sampleCompositionTimeOffset===o?f.sampleCount++:e.compositionTimeOffsetTable.push({sampleCount:1,sampleCompositionTimeOffset:o})}}else e.lastTimescaleUnits=0,this.fastStart!=="fragmented"&&(e.timeToSampleTable.push({sampleCount:1,sampleDelta:n}),e.compositionTimeOffsetTable.push({sampleCount:1,sampleCompositionTimeOffset:o}));e.lastSample=a}e.timestampProcessingQueue.length=0}async registerSample(e,r){this.fastStart==="fragmented"?(e.sampleQueue.push(r),await this.interleaveSamples()):await this.addSampleToTrack(e,r)}async addSampleToTrack(e,r){r.type==="key"&&this.processTimestamps(e),this.fastStart!=="fragmented"&&e.samples.push(r);let s=!1;if(!e.currentChunk)s=!0;else{let a=r.timestamp-e.currentChunk.startTimestamp;if(this.fastStart==="fragmented"){let o=this.trackDatas.every(n=>{if(e===n)return r.type==="key";let u=n.sampleQueue[0];return u&&u.type==="key"});a>=1&&o&&(s=!0,await this.finalizeFragment())}else s=a>=.5}s&&(e.currentChunk&&await this.finalizeCurrentChunk(e),e.currentChunk={startTimestamp:r.timestamp,samples:[],offset:null,moofOffset:null}),d(e.currentChunk),e.currentChunk.samples.push(r),e.timestampProcessingQueue.push(r)}async finalizeCurrentChunk(e){if(d(this.fastStart!=="fragmented"),!!e.currentChunk){if(e.finalizedChunks.push(e.currentChunk),this.finalizedChunks.push(e.currentChunk),(e.compactlyCodedChunkTable.length===0||S(e.compactlyCodedChunkTable).samplesPerChunk!==e.currentChunk.samples.length)&&e.compactlyCodedChunkTable.push({firstChunk:e.finalizedChunks.length,samplesPerChunk:e.currentChunk.samples.length}),this.fastStart==="in-memory"){e.currentChunk.offset=0;return}e.currentChunk.offset=this.writer.getPos();for(let r of e.currentChunk.samples)d(r.data),this.writer.write(r.data),r.data=null;await this.writer.flush()}}async interleaveSamples(){d(this.fastStart==="fragmented");for(let e of this.output._tracks)if(!e.source._closed&&!this.trackDatas.some(r=>r.track===e))return;e:for(;;){let e=null,r=1/0;for(let a of this.trackDatas){if(a.sampleQueue.length===0&&!a.track.source._closed)break e;a.sampleQueue.length>0&&a.sampleQueue[0].timestamp<r&&(e=a,r=a.sampleQueue[0].timestamp)}if(!e)break;let s=e.sampleQueue.shift();await this.addSampleToTrack(e,s)}}async finalizeFragment(e=!0){d(this.fastStart==="fragmented");let r=this.nextFragmentNumber++;if(r===1){let u=Y(this.trackDatas,this.creationTime,!0);this.boxWriter.writeBox(u)}let s=this.writer.getPos(),a=ve(r,this.trackDatas);this.boxWriter.writeBox(a);{let u=de(!1),c=0;for(let f of this.trackDatas){d(f.currentChunk);for(let w of f.currentChunk.samples)c+=w.size}let m=this.boxWriter.measureBox(u)+c;m>=2**32&&(u.largeSize=!0,m=this.boxWriter.measureBox(u)+c),u.size=m,this.boxWriter.writeBox(u)}for(let u of this.trackDatas){u.currentChunk.offset=this.writer.getPos(),u.currentChunk.moofOffset=s;for(let c of u.currentChunk.samples)this.writer.write(c.data),c.data=null}let o=this.writer.getPos();this.writer.seek(this.boxWriter.offsets.get(a));let n=ve(r,this.trackDatas);this.boxWriter.writeBox(n),this.writer.seek(o);for(let u of this.trackDatas)u.finalizedChunks.push(u.currentChunk),this.finalizedChunks.push(u.currentChunk),u.currentChunk=null;e&&await this.writer.flush()}async onTrackClose(e){let r=await this.mutex.acquire();if(e.type==="subtitle"&&e.source._codec==="webvtt"){let s=this.trackDatas.find(a=>a.track===e);s&&await this.processWebVTTCues(s,1/0)}this.fastStart==="fragmented"&&await this.interleaveSamples(),r()}async finalize(){let e=await this.mutex.acquire();for(let r of this.trackDatas)r.type==="subtitle"&&r.track.source._codec==="webvtt"&&await this.processWebVTTCues(r,1/0);if(this.fastStart==="fragmented"){for(let r of this.trackDatas){for(let s of r.sampleQueue)await this.addSampleToTrack(r,s);this.processTimestamps(r)}await this.finalizeFragment(!1)}else for(let r of this.trackDatas)this.processTimestamps(r),await this.finalizeCurrentChunk(r);if(this.fastStart==="in-memory"){d(this.mdat);let r;for(let a=0;a<2;a++){let o=Y(this.trackDatas,this.creationTime),n=this.boxWriter.measureBox(o);r=this.boxWriter.measureBox(this.mdat);let u=this.writer.getPos()+n+r;for(let c of this.finalizedChunks){c.offset=u;for(let{data:m}of c.samples)d(m),u+=m.byteLength,r+=m.byteLength}if(u<2**32)break;r>=2**32&&(this.mdat.largeSize=!0)}let s=Y(this.trackDatas,this.creationTime);this.boxWriter.writeBox(s),this.mdat.size=r,this.boxWriter.writeBox(this.mdat);for(let a of this.finalizedChunks)for(let o of a.samples)d(o.data),this.writer.write(o.data),o.data=null}else if(this.fastStart==="fragmented"){let r=this.writer.getPos(),s=Ze(this.trackDatas);this.boxWriter.writeBox(s);let a=this.writer.getPos()-r;this.writer.seek(this.writer.getPos()-4),this.boxWriter.writeU32(a)}else{d(this.mdat),d(this.ftypSize!==null);let r=this.boxWriter.offsets.get(this.mdat);d(r!==void 0);let s=this.writer.getPos()-r;this.mdat.size=s,this.mdat.largeSize=s>=2**32,this.boxWriter.patchBox(this.mdat);let a=Y(this.trackDatas,this.creationTime);if(typeof this.fastStart=="object"){this.writer.seek(this.ftypSize),this.boxWriter.writeBox(a);let o=r-this.writer.getPos();this.boxWriter.writeBox(Ge(o))}else this.boxWriter.writeBox(a)}e()}};var ee=class{constructor(i){this.value=i}},j=class{constructor(i){this.value=i}},te=class{constructor(i){this.value=i}};var Ae=t=>t<256?1:t<65536?2:t<1<<24?3:t<2**32?4:t<2**40?5:6,Oe=t=>t>=-64&&t<64?1:t>=-8192&&t<8192?2:t>=-(1<<20)&&t<1<<20?3:t>=-(1<<27)&&t<1<<27?4:t>=-(2**34)&&t<2**34?5:6,ut=t=>{if(t<127)return 1;if(t<16383)return 2;if(t<(1<<21)-1)return 3;if(t<(1<<28)-1)return 4;if(t<2**35-1)return 5;if(t<2**42-1)return 6;throw new Error("EBML VINT size not supported "+t)};var Ee=2**15,lt="https://github.com/Vanilagy/webm-muxer",ct=6,dt=5,fr={avc:"V_MPEG4/ISO/AVC",hevc:"V_MPEGH/ISO/HEVC",vp8:"V_VP8",vp9:"V_VP9",av1:"V_AV1",aac:"A_AAC",opus:"A_OPUS",webvtt:"S_TEXT/WEBVTT"},pr={video:1,audio:2,subtitle:17},we=class extends Q{constructor(e,r){super(e);this.timestampsMustStartAtZero=!1;this.helper=new Uint8Array(8);this.helperView=new DataView(this.helper.buffer);this.offsets=new WeakMap;this.dataOffsets=new WeakMap;this.trackDatas=[];this.segment=null;this.segmentInfo=null;this.seekHead=null;this.tracksElement=null;this.segmentDuration=null;this.cues=null;this.currentCluster=null;this.currentClusterMsTimestamp=null;this.trackDatasInCurrentCluster=new Set;this.duration=0;this.writer=e._writer,this.format=r,this.format._options.streamable&&(this.writer.ensureMonotonicity=!0)}writeByte(e){this.helperView.setUint8(0,e),this.writer.write(this.helper.subarray(0,1))}writeFloat32(e){this.helperView.setFloat32(0,e,!1),this.writer.write(this.helper.subarray(0,4))}writeFloat64(e){this.helperView.setFloat64(0,e,!1),this.writer.write(this.helper)}writeUnsignedInt(e,r=Ae(e)){let s=0;switch(r){case 6:this.helperView.setUint8(s++,e/2**40|0);case 5:this.helperView.setUint8(s++,e/2**32|0);case 4:this.helperView.setUint8(s++,e>>24);case 3:this.helperView.setUint8(s++,e>>16);case 2:this.helperView.setUint8(s++,e>>8);case 1:this.helperView.setUint8(s++,e);break;default:throw new Error("Bad UINT size "+r)}this.writer.write(this.helper.subarray(0,s))}writeSignedInt(e,r=Oe(e)){e<0&&(e+=2**(r*8)),this.writeUnsignedInt(e,r)}writeEBMLVarInt(e,r=ut(e)){let s=0;switch(r){case 1:this.helperView.setUint8(s++,128|e);break;case 2:this.helperView.setUint8(s++,64|e>>8),this.helperView.setUint8(s++,e);break;case 3:this.helperView.setUint8(s++,32|e>>16),this.helperView.setUint8(s++,e>>8),this.helperView.setUint8(s++,e);break;case 4:this.helperView.setUint8(s++,16|e>>24),this.helperView.setUint8(s++,e>>16),this.helperView.setUint8(s++,e>>8),this.helperView.setUint8(s++,e);break;case 5:this.helperView.setUint8(s++,8|e/2**32&7),this.helperView.setUint8(s++,e>>24),this.helperView.setUint8(s++,e>>16),this.helperView.setUint8(s++,e>>8),this.helperView.setUint8(s++,e);break;case 6:this.helperView.setUint8(s++,4|e/2**40&3),this.helperView.setUint8(s++,e/2**32|0),this.helperView.setUint8(s++,e>>24),this.helperView.setUint8(s++,e>>16),this.helperView.setUint8(s++,e>>8),this.helperView.setUint8(s++,e);break;default:throw new Error("Bad EBML VINT size "+r)}this.writer.write(this.helper.subarray(0,s))}writeString(e){this.writer.write(new Uint8Array(e.split("").map(r=>r.charCodeAt(0))))}writeEBML(e){if(e!==null){if(e instanceof Uint8Array)this.writer.write(e);else if(Array.isArray(e))for(let r of e)this.writeEBML(r);else if(this.offsets.set(e,this.writer.getPos()),this.writeUnsignedInt(e.id),Array.isArray(e.data)){let r=this.writer.getPos(),s=e.size===-1?1:e.size??4;e.size===-1?this.writeByte(255):this.writer.seek(this.writer.getPos()+s);let a=this.writer.getPos();if(this.dataOffsets.set(e,a),this.writeEBML(e.data),e.size!==-1){let o=this.writer.getPos()-a,n=this.writer.getPos();this.writer.seek(r),this.writeEBMLVarInt(o,s),this.writer.seek(n)}}else if(typeof e.data=="number"){let r=e.size??Ae(e.data);this.writeEBMLVarInt(r),this.writeUnsignedInt(e.data,r)}else if(typeof e.data=="string")this.writeEBMLVarInt(e.data.length),this.writeString(e.data);else if(e.data instanceof Uint8Array)this.writeEBMLVarInt(e.data.byteLength,e.size),this.writer.write(e.data);else if(e.data instanceof ee)this.writeEBMLVarInt(4),this.writeFloat32(e.data.value);else if(e.data instanceof j)this.writeEBMLVarInt(8),this.writeFloat64(e.data.value);else if(e.data instanceof te){let r=e.size??Oe(e.data.value);this.writeEBMLVarInt(r),this.writeSignedInt(e.data.value,r)}}}beforeTrackAdd(e){if(this.format instanceof L)if(e.type==="video"){if(!["vp8","vp9","av1"].includes(e.source._codec))throw new Error("WebM only supports VP8, VP9 and AV1 as video codecs. Switching to MKV removes this restriction.")}else if(e.type==="audio"){if(!["opus","vorbis"].includes(e.source._codec))throw new Error("WebM only supports Opus and Vorbis as audio codecs. Switching to MKV removes this restriction.")}else if(e.type==="subtitle"){if(e.source._codec!=="webvtt")throw new Error("WebM only supports WebVTT as subtitle codec. Switching to MKV removes this restriction.")}else throw new Error("WebM only supports video, audio and subtitle tracks. Switching to MKV removes this restriction.")}async start(){let e=await this.mutex.acquire();this.writeEBMLHeader(),this.format._options.streamable||this.createSeekHead(),this.createSegmentInfo(),this.createCues(),await this.writer.flush(),e()}writeEBMLHeader(){let e={id:440786851,data:[{id:17030,data:1},{id:17143,data:1},{id:17138,data:4},{id:17139,data:8},{id:17026,data:this.format instanceof L?"webm":"matroska"},{id:17031,data:2},{id:17029,data:2}]};this.writeEBML(e)}createSeekHead(){let e=new Uint8Array([28,83,187,107]),r=new Uint8Array([21,73,169,102]),s=new Uint8Array([22,84,174,107]),a={id:290298740,data:[{id:19899,data:[{id:21419,data:e},{id:21420,size:5,data:0}]},{id:19899,data:[{id:21419,data:r},{id:21420,size:5,data:0}]},{id:19899,data:[{id:21419,data:s},{id:21420,size:5,data:0}]}]};this.seekHead=a}createSegmentInfo(){let e={id:17545,data:new j(0)};this.segmentDuration=e;let r={id:357149030,data:[{id:2807729,data:1e6},{id:19840,data:lt},{id:22337,data:lt},this.format._options.streamable?null:e]};this.segmentInfo=r}createTracks(){let e={id:374648427,data:[]};this.tracksElement=e;for(let r of this.trackDatas)e.data.push({id:174,data:[{id:215,data:r.track.id},{id:29637,data:r.track.id},{id:131,data:pr[r.type]},{id:134,data:fr[r.track.source._codec]},...r.type==="video"?[r.info.decoderConfig.description?{id:25506,data:P(r.info.decoderConfig.description)}:null,r.track.metadata.frameRate?{id:2352003,data:1e9/r.track.metadata.frameRate}:null,{id:224,data:[{id:176,data:r.info.width},{id:186,data:r.info.height},(()=>{if(r.info.decoderConfig.colorSpace){let s=r.info.decoderConfig.colorSpace;return oe(s)?{id:21936,data:[{id:21937,data:N[s.matrix]},{id:21946,data:F[s.transfer]},{id:21947,data:R[s.primaries]},{id:21945,data:[1,2][Number(s.fullRange)]}]}:null}return null})()]}]:[],...r.type==="audio"?[r.info.decoderConfig.description?{id:25506,data:P(r.info.decoderConfig.description)}:null,{id:225,data:[{id:181,data:new ee(r.info.sampleRate)},{id:159,data:r.info.numberOfChannels}]}]:[],...r.type==="subtitle"?[{id:25506,data:y.encode(r.info.config.description)}]:[]]})}createSegment(){let e={id:408125543,size:this.format._options.streamable?-1:ct,data:[this.format._options.streamable?null:this.seekHead,this.segmentInfo,this.tracksElement]};this.segment=e,this.writeEBML(e)}createCues(){this.cues={id:475249515,data:[]}}get segmentDataOffset(){return d(this.segment),this.dataOffsets.get(this.segment)}getVideoTrackData(e,r){let s=this.trackDatas.find(o=>o.track===e);if(s)return s;pe(r),d(r),d(r.decoderConfig),d(r.decoderConfig.codedWidth!==void 0),d(r.decoderConfig.codedHeight!==void 0);let a={track:e,type:"video",info:{width:r.decoderConfig.codedWidth,height:r.decoderConfig.codedHeight,decoderConfig:r.decoderConfig},chunkQueue:[],lastWrittenMsTimestamp:null};return this.trackDatas.push(a),this.trackDatas.sort((o,n)=>o.track.id-n.track.id),a}getAudioTrackData(e,r){let s=this.trackDatas.find(o=>o.track===e);if(s)return s;he(r),d(r),d(r.decoderConfig);let a={track:e,type:"audio",info:{numberOfChannels:r.decoderConfig.numberOfChannels,sampleRate:r.decoderConfig.sampleRate,decoderConfig:r.decoderConfig},chunkQueue:[],lastWrittenMsTimestamp:null};return this.trackDatas.push(a),this.trackDatas.sort((o,n)=>o.track.id-n.track.id),a}getSubtitleTrackData(e,r){let s=this.trackDatas.find(o=>o.track===e);if(s)return s;be(r),d(r),d(r.config);let a={track:e,type:"subtitle",info:{config:r.config},chunkQueue:[],lastWrittenMsTimestamp:null};return this.trackDatas.push(a),this.trackDatas.sort((o,n)=>o.track.id-n.track.id),a}async addEncodedVideoChunk(e,r,s){let a=await this.mutex.acquire();try{let o=this.getVideoTrackData(e,s),n=new Uint8Array(r.byteLength);r.copyTo(n);let u=this.validateAndNormalizeTimestamp(o.track,r.timestamp,r.type==="key"),c=this.createInternalChunk(n,u,(r.duration??0)/1e6,r.type);e.source._codec==="vp9"&&this.fixVP9ColorSpace(o,c),o.chunkQueue.push(c),await this.interleaveChunks()}finally{a()}}async addEncodedAudioChunk(e,r,s){let a=await this.mutex.acquire();try{let o=this.getAudioTrackData(e,s),n=new Uint8Array(r.byteLength);r.copyTo(n);let u=this.validateAndNormalizeTimestamp(o.track,r.timestamp,r.type==="key"),c=this.createInternalChunk(n,u,(r.duration??0)/1e6,r.type);o.chunkQueue.push(c),await this.interleaveChunks()}finally{a()}}async addSubtitleCue(e,r,s){let a=await this.mutex.acquire();try{let o=this.getSubtitleTrackData(e,s),n=this.validateAndNormalizeTimestamp(o.track,1e6*r.timestamp,!0),u=r.text,c=Math.floor(n*1e3);H.lastIndex=0,u=u.replace(H,O=>{let k=ue(O.slice(1,-1))-c;return`<${le(k)}>`});let m=y.encode(u),f=`${r.settings??""}
${r.identifier??""}
${r.notes??""}`,w=this.createInternalChunk(m,n,r.duration,"key",f.trim()?y.encode(f):null);o.chunkQueue.push(w),await this.interleaveChunks()}finally{a()}}async interleaveChunks(){for(let e of this.output._tracks)if(!e.source._closed&&!this.trackDatas.some(r=>r.track===e))return;e:for(;;){let e=null,r=1/0;for(let a of this.trackDatas){if(a.chunkQueue.length===0&&!a.track.source._closed)break e;a.chunkQueue.length>0&&a.chunkQueue[0].timestamp<r&&(e=a,r=a.chunkQueue[0].timestamp)}if(!e)break;let s=e.chunkQueue.shift();this.writeBlock(e,s)}await this.writer.flush()}fixVP9ColorSpace(e,r){if(r.type!=="key"||!e.info.decoderConfig.colorSpace||!e.info.decoderConfig.colorSpace.matrix)return;let s=0;if(z(r.data,0,2)!==2)return;s+=2;let a=(z(r.data,s+1,s+2)<<1)+z(r.data,s+0,s+1);s+=2,a===3&&s++;let o=z(r.data,s+0,s+1);if(s++,o)return;let n=z(r.data,s+0,s+1);if(s++,n!==0)return;s+=2;let u=z(r.data,s+0,s+24);if(s+=24,u!==4817730)return;a>=2&&s++;let c={rgb:7,bt709:2,bt470bg:1,smpte170m:3}[e.info.decoderConfig.colorSpace.matrix];He(r.data,s+0,s+3,c)}createInternalChunk(e,r,s,a,o=null){return{data:e,type:a,timestamp:r,duration:s,additions:o}}writeBlock(e,r){this.segment||(this.createTracks(),this.createSegment());let s=Math.floor(1e3*r.timestamp),a=this.trackDatas.every(f=>{if(f.track.source._closed)return!0;if(e===f)return r.type==="key";let w=f.chunkQueue[0];return w&&w.type==="key"});(!this.currentCluster||a&&s-this.currentClusterMsTimestamp>=1e3)&&this.createNewCluster(s);let o=s-this.currentClusterMsTimestamp;if(o<0)return;if(o>=Ee)throw new Error(`Current Matroska cluster exceeded its maximum allowed length of ${Ee} milliseconds. In order to produce a correct WebM file, you must pass in a key frame at least every ${Ee} milliseconds.`);let u=new Uint8Array(4),c=new DataView(u.buffer);c.setUint8(0,128|e.track.id),c.setInt16(1,o,!1);let m=Math.floor(1e3*r.duration);if(m===0&&!r.additions){c.setUint8(3,+(r.type==="key")<<7);let f={id:163,data:[u,r.data]};this.writeEBML(f)}else{let f={id:160,data:[{id:161,data:[u,r.data]},r.type==="delta"?{id:251,data:new te(e.lastWrittenMsTimestamp-s)}:null,r.additions?{id:30113,data:[{id:166,data:[{id:165,data:r.additions},{id:238,data:1}]}]}:null,m>0?{id:155,data:m}:null]};this.writeEBML(f)}this.duration=Math.max(this.duration,s+m),e.lastWrittenMsTimestamp=s,this.trackDatasInCurrentCluster.add(e)}createNewCluster(e){this.currentCluster&&!this.format._options.streamable&&this.finalizeCurrentCluster(),this.currentCluster={id:524531317,size:this.format._options.streamable?-1:dt,data:[{id:231,data:e}]},this.writeEBML(this.currentCluster),this.currentClusterMsTimestamp=e,this.trackDatasInCurrentCluster.clear()}finalizeCurrentCluster(){d(this.currentCluster);let e=this.writer.getPos()-this.dataOffsets.get(this.currentCluster),r=this.writer.getPos();this.writer.seek(this.offsets.get(this.currentCluster)+4),this.writeEBMLVarInt(e,dt),this.writer.seek(r);let s=this.offsets.get(this.currentCluster)-this.segmentDataOffset;d(this.cues),this.cues.data.push({id:187,data:[{id:179,data:this.currentClusterMsTimestamp},...[...this.trackDatasInCurrentCluster].map(a=>({id:183,data:[{id:247,data:a.track.id},{id:241,data:s}]}))]})}async onTrackClose(){let e=await this.mutex.acquire();await this.interleaveChunks(),e()}async finalize(){let e=await this.mutex.acquire();this.segment||(this.createTracks(),this.createSegment());for(let r of this.trackDatas)for(;r.chunkQueue.length>0;)this.writeBlock(r,r.chunkQueue.shift());if(!this.format._options.streamable&&this.currentCluster&&this.finalizeCurrentCluster(),d(this.cues),this.writeEBML(this.cues),!this.format._options.streamable){let r=this.writer.getPos(),s=this.writer.getPos()-this.segmentDataOffset;this.writer.seek(this.offsets.get(this.segment)+4),this.writeEBMLVarInt(s,ct),this.segmentDuration.data=new j(this.duration),this.writer.seek(this.offsets.get(this.segmentDuration)),this.writeEBML(this.segmentDuration),this.seekHead.data[0].data[1].data=this.offsets.get(this.cues)-this.segmentDataOffset,this.seekHead.data[1].data[1].data=this.offsets.get(this.segmentInfo)-this.segmentDataOffset,this.seekHead.data[2].data[1].data=this.offsets.get(this.tracksElement)-this.segmentDataOffset,this.writer.seek(this.offsets.get(this.seekHead)),this.writeEBML(this.seekHead),this.writer.seek(r)}e()}};var U=class{},Me=class extends U{constructor(i={}){if(!i||typeof i!="object")throw new TypeError("options must be an object.");if(i.fastStart!==void 0&&![!1,"in-memory","fragmented"].includes(i.fastStart))throw new TypeError('options.fastStart, when provided, must be false, "in-memory", or "fragmented".');super(),this._options=i}_createMuxer(i){return new xe(i,this)}},Te=class extends U{constructor(i={}){if(!i||typeof i!="object")throw new TypeError("options must be an object.");if(i.streamable!==void 0&&typeof i.streamable!="boolean")throw new TypeError("options.streamable, when provided, must be a boolean.");super(),this._options=i}_createMuxer(i){return new we(i,this)}},L=class extends Te{};var re=["avc","hevc","vp8","vp9","av1"],ie=["aac","opus"],Ve=["webvtt"],q=class{constructor(){this._connectedTrack=null;this._closed=!1;this._offsetTimestamps=!1}_ensureValidDigest(){if(!this._connectedTrack)throw new Error("Cannot call digest without connecting the source to an output track.");if(!this._connectedTrack.output._started)throw new Error("Cannot call digest before output has been started.");if(this._connectedTrack.output._finalizing)throw new Error("Cannot call digest after output has started finalizing.");if(this._closed)throw new Error("Cannot call digest after source has been closed.")}_start(){}async _flush(){}close(){if(this._closed)throw new Error("Source already closed.");if(!this._connectedTrack)throw new Error("Cannot call close without connecting the source to an output track.");if(!this._connectedTrack.output._started)throw new Error("Cannot call close before output has been started.");this._closed=!0,!this._connectedTrack.output._finalizing&&this._connectedTrack.output._muxer.onTrackClose(this._connectedTrack)}},E=class extends q{constructor(e){super();this._connectedTrack=null;if(!re.includes(e))throw new TypeError(`Invalid video codec '${e}'. Must be one of: ${re.join(", ")}.`);this._codec=e}},ze=class extends E{constructor(i){super(i)}digest(i,e){if(!(i instanceof EncodedVideoChunk))throw new TypeError("chunk must be an EncodedVideoChunk.");return this._ensureValidDigest(),this._connectedTrack.output._muxer.addEncodedVideoChunk(this._connectedTrack,i,e)}},hr=5,br=t=>{if(!t||typeof t!="object")throw new TypeError("Codec config must be an object.");if(!re.includes(t.codec))throw new TypeError(`Invalid video codec '${t.codec}'. Must be one of: ${re.join(", ")}.`);if(!Number.isInteger(t.bitrate)||t.bitrate<=0)throw new TypeError("config.bitrate must be a positive integer.");if(t.latencyMode!==void 0&&["quality","realtime"].includes(t.latencyMode))throw new TypeError("config.latencyMode, when provided, must be 'quality' or 'realtime'.")},se=class{constructor(i,e){this.source=i;this.codecConfig=e;this.encoder=null;this.muxer=null;this.lastMultipleOfKeyFrameInterval=-1;this.lastWidth=null;this.lastHeight=null;br(e)}async digest(i){if(this.source._ensureValidDigest(),this.lastWidth!==null&&this.lastHeight!==null){if(i.codedWidth!==this.lastWidth||i.codedHeight!==this.lastHeight)throw new Error(`Video frame size must remain constant. Expected ${this.lastWidth}x${this.lastHeight}, got ${i.codedWidth}x${i.codedHeight}.`)}else this.lastWidth=i.codedWidth,this.lastHeight=i.codedHeight;this.ensureEncoder(i),d(this.encoder);let e=Math.floor(i.timestamp/1e6/hr);this.encoder.encode(i,{keyFrame:e!==this.lastMultipleOfKeyFrameInterval}),this.lastMultipleOfKeyFrameInterval=e,this.encoder.encodeQueueSize>=4&&await new Promise(r=>this.encoder.addEventListener("dequeue",r,{once:!0})),await this.muxer.mutex.currentPromise}ensureEncoder(i){this.encoder||(this.encoder=new VideoEncoder({output:(e,r)=>this.muxer.addEncodedVideoChunk(this.source._connectedTrack,e,r),error:e=>console.error("Video encode error:",e)}),this.encoder.configure({codec:ot(this.codecConfig.codec,i.codedWidth,i.codedHeight,this.codecConfig.bitrate),width:i.codedWidth,height:i.codedHeight,bitrate:this.codecConfig.bitrate,framerate:this.source._connectedTrack?.metadata.frameRate,latencyMode:this.codecConfig.latencyMode}),d(this.source._connectedTrack),this.muxer=this.source._connectedTrack.output._muxer)}async flush(){this.encoder&&(await this.encoder.flush(),this.encoder.close())}},Pe=class extends E{constructor(i){super(i.codec),this._encoder=new se(this,i)}digest(i){if(!(i instanceof VideoFrame))throw new TypeError("videoFrame must be a VideoFrame.");return this._encoder.digest(i)}_flush(){return this._encoder.flush()}},Be=class extends E{constructor(i,e){if(!(i instanceof HTMLCanvasElement))throw new TypeError("canvas must be an HTMLCanvasElement.");super(e.codec),this._encoder=new se(this,e),this._canvas=i}digest(i,e=0){if(!Number.isFinite(i)||i<0)throw new TypeError("timestamp must be a non-negative number.");if(!Number.isFinite(e)||e<0)throw new TypeError("duration must be a non-negative number.");let r=new VideoFrame(this._canvas,{timestamp:Math.round(1e6*i),duration:Math.round(1e6*e),alpha:"discard"}),s=this._encoder.digest(r);return r.close(),s}_flush(){return this._encoder.flush()}},Ie=class extends E{constructor(e,r){if(!(e instanceof MediaStreamTrack)||e.kind!=="video")throw new TypeError("track must be a video MediaStreamTrack.");r={...r,latencyMode:"realtime"};super(r.codec);this._abortController=null;this._offsetTimestamps=!0;this._encoder=new se(this,r),this._track=e}_start(){this._abortController=new AbortController;let e=new MediaStreamTrackProcessor({track:this._track}),r=new WritableStream({write:s=>{this._encoder.digest(s),s.close()}});e.readable.pipeTo(r,{signal:this._abortController.signal}).catch(s=>{s instanceof DOMException&&s.name==="AbortError"||console.error("Pipe error:",s)})}async _flush(){this._abortController&&(this._abortController.abort(),this._abortController=null),await this._encoder.flush()}},M=class extends q{constructor(e){super();this._connectedTrack=null;if(!ie.includes(e))throw new TypeError(`Invalid audio codec '${e}'. Must be one of: ${ie.join(", ")}.`);this._codec=e}},Ue=class extends M{constructor(i){super(i)}digest(i,e){if(!(i instanceof EncodedAudioChunk))throw new TypeError("chunk must be an EncodedAudioChunk.");return this._ensureValidDigest(),this._connectedTrack.output._muxer.addEncodedAudioChunk(this._connectedTrack,i,e)}},xr=t=>{if(!t||typeof t!="object")throw new TypeError("Codec config must be an object.");if(!ie.includes(t.codec))throw new TypeError(`Invalid audio codec '${t.codec}'. Must be one of: ${ie.join(", ")}.`);if(!Number.isInteger(t.bitrate)||t.bitrate<=0)throw new TypeError("config.bitrate must be a positive integer.")},ae=class{constructor(i,e){this.source=i;this.codecConfig=e;this.encoder=null;this.muxer=null;this.lastNumberOfChannels=null;this.lastSampleRate=null;xr(e)}async digest(i){if(this.source._ensureValidDigest(),this.lastNumberOfChannels!==null&&this.lastSampleRate!==null){if(i.numberOfChannels!==this.lastNumberOfChannels||i.sampleRate!==this.lastSampleRate)throw new Error(`Audio parameters must remain constant. Expected ${this.lastNumberOfChannels} channels at ${this.lastSampleRate} Hz, got ${i.numberOfChannels} channels at ${i.sampleRate} Hz.`)}else this.lastNumberOfChannels=i.numberOfChannels,this.lastSampleRate=i.sampleRate;this.ensureEncoder(i),d(this.encoder),this.encoder.encode(i),this.encoder.encodeQueueSize>=4&&await new Promise(e=>this.encoder.addEventListener("dequeue",e,{once:!0})),await this.muxer.mutex.currentPromise}ensureEncoder(i){this.encoder||(this.encoder=new AudioEncoder({output:(e,r)=>this.muxer.addEncodedAudioChunk(this.source._connectedTrack,e,r),error:e=>console.error("Audio encode error:",e)}),this.encoder.configure({codec:nt(this.codecConfig.codec,i.numberOfChannels,i.sampleRate),numberOfChannels:i.numberOfChannels,sampleRate:i.sampleRate,bitrate:this.codecConfig.bitrate}),d(this.source._connectedTrack),this.muxer=this.source._connectedTrack.output._muxer)}async flush(){this.encoder&&(await this.encoder.flush(),this.encoder.close())}},De=class extends M{constructor(i){super(i.codec),this._encoder=new ae(this,i)}digest(i){if(!(i instanceof AudioData))throw new TypeError("audioData must be an AudioData.");return this._encoder.digest(i)}_flush(){return this._encoder.flush()}},We=class extends M{constructor(e){super(e.codec);this._accumulatedFrameCount=0;this._encoder=new ae(this,e)}digest(e){if(!(e instanceof AudioBuffer))throw new TypeError("audioBuffer must be an AudioBuffer.");let r=e.numberOfChannels,s=e.sampleRate,a=e.length,o=new Float32Array(r*a);for(let c=0;c<r;c++){let m=e.getChannelData(c);o.set(m,c*a)}let n=new AudioData({format:"f32-planar",sampleRate:s,numberOfFrames:a,numberOfChannels:r,timestamp:Math.round(1e6*this._accumulatedFrameCount/s),data:o}),u=this._encoder.digest(n);return n.close(),this._accumulatedFrameCount+=a,u}_flush(){return this._encoder.flush()}},Re=class extends M{constructor(e,r){if(!(e instanceof MediaStreamTrack)||e.kind!=="audio")throw new TypeError("track must be an audio MediaStreamTrack.");super(r.codec);this._abortController=null;this._offsetTimestamps=!0;this._encoder=new ae(this,r),this._track=e}_start(){this._abortController=new AbortController;let e=new MediaStreamTrackProcessor({track:this._track}),r=new WritableStream({write:s=>{this._encoder.digest(s),s.close()}});e.readable.pipeTo(r,{signal:this._abortController.signal}).catch(s=>{s instanceof DOMException&&s.name==="AbortError"||console.error("Pipe error:",s)})}async _flush(){this._abortController&&(this._abortController.abort(),this._abortController=null),await this._encoder.flush()}},K=class extends q{constructor(e){super();this._connectedTrack=null;if(!Ve.includes(e))throw new TypeError(`Invalid subtitle codec '${e}'. Must be one of: ${Ve.join(", ")}.`);this._codec=e}},Fe=class extends K{constructor(i){super(i),this._parser=new ne({codec:i,output:(e,r)=>this._connectedTrack?.output._muxer.addSubtitleCue(this._connectedTrack,e,r),error:e=>console.error("Subtitle parse error:",e)})}digest(i){if(typeof i!="string")throw new TypeError("text must be a string.");return this._ensureValidDigest(),this._parser.parse(i),this._connectedTrack.output._muxer.mutex.currentPromise}};var Ne=class{constructor(i){this._tracks=[];this._started=!1;this._finalizing=!1;this._mutex=new W;if(!i||typeof i!="object")throw new TypeError("options must be an object.");if(!(i.format instanceof U))throw new TypeError("options.format must be an OutputFormat.");if(!(i.target instanceof I))throw new TypeError("options.target must be a Target.");if(i.target._output)throw new Error("Target is already used for another output.");i.target._output=this,this._writer=i.target._createWriter(),this._muxer=i.format._createMuxer(this)}addVideoTrack(i,e={}){if(!(i instanceof E))throw new TypeError("source must be a VideoSource.");if(!e||typeof e!="object")throw new TypeError("metadata must be an object.");if(typeof e.rotation=="number"&&![0,90,180,270].includes(e.rotation))throw new TypeError(`Invalid video rotation: ${e.rotation}. Has to be 0, 90, 180 or 270.`);if(Array.isArray(e.rotation)&&(e.rotation.length!==9||e.rotation.some(r=>!Number.isFinite(r))))throw new TypeError(`Invalid video transformation matrix: ${e.rotation.join()}`);if(e.frameRate!==void 0&&(!Number.isInteger(e.frameRate)||e.frameRate<=0))throw new TypeError(`Invalid video frame rate: ${e.frameRate}. Must be a positive integer.`);this._addTrack("video",i,e)}addAudioTrack(i,e={}){if(!(i instanceof M))throw new TypeError("source must be an AudioSource.");if(!e||typeof e!="object")throw new TypeError("metadata must be an object.");this._addTrack("audio",i,e)}addSubtitleTrack(i,e={}){if(!(i instanceof K))throw new TypeError("source must be a SubtitleSource.");if(!e||typeof e!="object")throw new TypeError("metadata must be an object.");this._addTrack("subtitle",i,e)}_addTrack(i,e,r){if(this._started)throw new Error("Cannot add track after output has started.");if(e._connectedTrack)throw new Error("Source is already used for a track.");let s={id:this._tracks.length+1,output:this,type:i,source:e,metadata:r};this._muxer.beforeTrackAdd(s),this._tracks.push(s),e._connectedTrack=s}async start(){if(this._started)throw new Error("Output already started.");this._started=!0,this._writer.start();let i=await this._mutex.acquire();await this._muxer.start();for(let e of this._tracks)e.source._start();i()}async finalize(){if(!this._started)throw new Error("Cannot finalize before starting.");if(this._finalizing)throw new Error("Cannot call finalize twice.");this._finalizing=!0;let i=await this._mutex.acquire(),e=this._tracks.map(r=>r.source._flush());await Promise.all(e),await this._muxer.finalize(),await this._writer.flush(),await this._writer.finalize(),i()}};export{ie as AUDIO_CODECS,J as ArrayBufferTarget,We as AudioBufferSource,De as AudioDataSource,M as AudioSource,Be as CanvasSource,Ue as EncodedAudioChunkSource,ze as EncodedVideoChunkSource,q as MediaSource,Re as MediaStreamAudioTrackSource,Ie as MediaStreamVideoTrackSource,Te as MkvOutputFormat,Me as Mp4OutputFormat,Ne as Output,U as OutputFormat,Ve as SUBTITLE_CODECS,_e as StreamTarget,K as SubtitleSource,I as Target,Fe as TextSubtitleSource,re as VIDEO_CODECS,Pe as VideoFrameSource,E as VideoSource,L as WebMOutputFormat};
