function l(r){if(!r)throw new Error("Assertion failed.")}var y=r=>r&&r[r.length-1],M=r=>r>=0&&r<2**32,R=(r,e,t)=>{let i=0;for(let s=e;s<t;s++){let o=Math.floor(s/8),n=r[o],a=7-(s&7),c=(n&1<<a)>>a;i<<=1,i|=c}return i},bt=(r,e,t,i)=>{for(let s=e;s<t;s++){let o=Math.floor(s/8),n=r[o],a=7-(s&7);n&=~(1<<a),n|=(i&1<<t-s-1)>>t-s-1<<a,r[o]=n}},P=r=>r instanceof ArrayBuffer?new Uint8Array(r):new Uint8Array(r.buffer,r.byteOffset,r.byteLength),v=new TextEncoder,Be=r=>Object.fromEntries(Object.entries(r).map(([e,t])=>[t,e])),z={bt709:1,bt470bg:5,smpte170m:6},kt=Be(z),B={bt709:1,smpte170m:6,"iec61966-2-1":13},gt=Be(B),U={rgb:0,bt709:1,bt470bg:5,smpte170m:6},Tt=Be(U),fe=r=>!!r&&!!r.primaries&&!!r.transfer&&!!r.matrix&&r.fullRange!==void 0,Ue=r=>r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer||ArrayBuffer.isView(r)&&!(r instanceof DataView),H=class{currentPromise=Promise.resolve();async acquire(){let e,t=new Promise(s=>{e=s}),i=this.currentPromise;return this.currentPromise=t,await i,e}},V=r=>{let e=r*(Math.PI/180),t=Math.cos(e),i=Math.sin(e);return[t,i,0,-i,t,0,0,0,1]},De=V(0),xt=r=>[...r].map(e=>e.toString(16).padStart(2,"0")).join(""),Ct=r=>(r=r>>1&1431655765|(r&1431655765)<<1,r=r>>2&858993459|(r&858993459)<<2,r=r>>4&252645135|(r&252645135)<<4,r=r>>8&16711935|(r&16711935)<<8,r=r>>16&65535|(r&65535)<<16,r>>>0),wt=(r,e,t)=>{let i=0,s=r.length-1,o=-1;for(;i<=s;){let n=i+s>>1,a=t(r[n]);a===e?(o=n,s=n-1):a<e?i=n+1:s=n-1}return o},D=(r,e,t)=>{let i=-1,s=0,o=r.length-1;for(;s<=o;){let n=s+(o-s+1)/2|0;t(r[n])<=e?(i=n,s=n+1):o=n-1}return i},Fe=()=>{let r,e;return{promise:new Promise((i,s)=>{r=i,e=s}),resolve:r,reject:e}};var ee=/(?:(.+?)\n)?((?:\d{2}:)?\d{2}:\d{2}.\d{3})\s+-->\s+((?:\d{2}:)?\d{2}:\d{2}.\d{3})/g,Gt=/^WEBVTT(.|\n)*?\n{2}/,L=/<(?:(\d{2}):)?(\d{2}):(\d{2}).(\d{3})>/g,he=class{options;preambleText=null;preambleEmitted=!1;constructor(e){this.options=e}parse(e){e=e.replaceAll(`\r
`,`
`).replaceAll("\r",`
`),ee.lastIndex=0;let t;if(!this.preambleText){if(!Gt.test(e)){let s=new Error("WebVTT preamble incorrect.");throw this.options.error(s),s}t=ee.exec(e);let i=e.slice(0,t?.index??e.length).trimEnd();if(!i){let s=new Error("No WebVTT preamble provided.");throw this.options.error(s),s}this.preambleText=i,t&&(e=e.slice(t.index),ee.lastIndex=0)}for(;t=ee.exec(e);){let i=e.slice(0,t.index),s=t[1],o=t.index+t[0].length,n=e.indexOf(`
`,o)+1,a=e.slice(o,n).trim(),c=e.indexOf(`

`,o);c===-1&&(c=e.length);let u=pe(t[2]),f=pe(t[3])-u,T=e.slice(n,c).trim();e=e.slice(c).trimStart(),ee.lastIndex=0;let C={timestamp:u/1e3,duration:f/1e3,text:T,identifier:s,settings:a,notes:i},k={};this.preambleEmitted||(k.config={description:this.preambleText},this.preambleEmitted=!0),this.options.output(C,k)}}},Yt=/(?:(\d{2}):)?(\d{2}):(\d{2}).(\d{3})/,pe=r=>{let e=Yt.exec(r);if(!e)throw new Error("Expected match.");return 60*60*1e3*Number(e[1]||"0")+60*1e3*Number(e[2])+1e3*Number(e[3])+Number(e[4])},be=r=>{let e=Math.floor(r/36e5),t=Math.floor(r%(60*60*1e3)/(60*1e3)),i=Math.floor(r%(60*1e3)/1e3),s=r%1e3;return e.toString().padStart(2,"0")+":"+t.toString().padStart(2,"0")+":"+i.toString().padStart(2,"0")+"."+s.toString().padStart(3,"0")};var te=class{constructor(e){this.writer=e}helper=new Uint8Array(8);helperView=new DataView(this.helper.buffer);offsets=new WeakMap;writeU32(e){this.helperView.setUint32(0,e,!1),this.writer.write(this.helper.subarray(0,4))}writeU64(e){this.helperView.setUint32(0,Math.floor(e/2**32),!1),this.helperView.setUint32(4,e,!1),this.writer.write(this.helper.subarray(0,8))}writeAscii(e){for(let t=0;t<e.length;t++)this.helperView.setUint8(t%8,e.charCodeAt(t)),t%8===7&&this.writer.write(this.helper);e.length%8!==0&&this.writer.write(this.helper.subarray(0,e.length%8))}writeBox(e){if(this.offsets.set(e,this.writer.getPos()),e.contents&&!e.children)this.writeBoxHeader(e,e.size??e.contents.byteLength+8),this.writer.write(e.contents);else{let t=this.writer.getPos();if(this.writeBoxHeader(e,0),e.contents&&this.writer.write(e.contents),e.children)for(let o of e.children)o&&this.writeBox(o);let i=this.writer.getPos(),s=e.size??i-t;this.writer.seek(t),this.writeBoxHeader(e,s),this.writer.seek(i)}}writeBoxHeader(e,t){this.writeU32(e.largeSize?1:t),this.writeAscii(e.type),e.largeSize&&this.writeU64(t)}measureBoxHeader(e){return 8+(e.largeSize?8:0)}patchBox(e){let t=this.offsets.get(e);l(t!==void 0);let i=this.writer.getPos();this.writer.seek(t),this.writeBox(e),this.writer.seek(i)}measureBox(e){if(e.contents&&!e.children)return this.measureBoxHeader(e)+e.contents.byteLength;{let t=this.measureBoxHeader(e);if(e.contents&&(t+=e.contents.byteLength),e.children)for(let i of e.children)i&&(t+=this.measureBox(i));return t}}},h=new Uint8Array(8),E=new DataView(h.buffer),x=r=>[(r%256+256)%256],p=r=>(E.setUint16(0,r,!1),[h[0],h[1]]),Zt=r=>(E.setInt16(0,r,!1),[h[0],h[1]]),yt=r=>(E.setUint32(0,r,!1),[h[1],h[2],h[3]]),m=r=>(E.setUint32(0,r,!1),[h[0],h[1],h[2],h[3]]),vt=r=>(E.setInt32(0,r,!1),[h[0],h[1],h[2],h[3]]),F=r=>(E.setUint32(0,Math.floor(r/2**32),!1),E.setUint32(4,r,!1),[h[0],h[1],h[2],h[3],h[4],h[5],h[6],h[7]]),He=r=>(E.setInt16(0,2**8*r,!1),[h[0],h[1]]),A=r=>(E.setInt32(0,2**16*r,!1),[h[0],h[1],h[2],h[3]]),We=r=>(E.setInt32(0,2**30*r,!1),[h[0],h[1],h[2],h[3]]),Ne=(r,e)=>{let t=[],i=r;do{let s=i&127;i>>=7,t.length>0&&(s|=128),t.push(s),e!==void 0&&e--}while(i>0||e);return t.reverse()},S=(r,e=!1)=>{let t=Array(r.length).fill(null).map((i,s)=>r.charCodeAt(s));return e&&t.push(0),t},Le=r=>{let e=null;for(let t of r)(!e||t.timestamp>e.timestamp)&&(e=t);return e},_t=r=>[A(r[0]),A(r[1]),We(r[2]),A(r[3]),A(r[4]),We(r[5]),A(r[6]),A(r[7]),We(r[8])],b=(r,e,t)=>({type:r,contents:e&&new Uint8Array(e.flat(10)),children:t}),g=(r,e,t,i,s)=>b(r,[x(e),yt(t),i??[]],s),At=r=>r.fragmented?b("ftyp",[S("iso5"),m(512),S("iso5"),S("iso6"),S("mp41")]):b("ftyp",[S("isom"),m(512),S("isom"),r.holdsAvc?S("avc1"):[],S("mp41")]),ge=r=>({type:"mdat",largeSize:r}),Et=r=>({type:"free",size:r}),re=(r,e,t=!1)=>b("moov",void 0,[Jt(e,r),...r.map(i=>er(i,e)),t?Rr(r):null]),Jt=(r,e)=>{let t=_(Math.max(0,...e.filter(n=>n.samples.length>0).map(n=>{let a=Le(n.samples);return a.timestamp+a.duration})),ke),i=Math.max(0,...e.map(n=>n.track.id))+1,s=!M(r)||!M(t),o=s?F:m;return g("mvhd",+s,0,[o(r),o(r),m(ke),o(t),A(1),He(1),Array(10).fill(0),_t(De),Array(24).fill(0),m(i)])},er=(r,e)=>b("trak",void 0,[tr(r,e),rr(r,e)]),tr=(r,e)=>{let t=Le(r.samples),i=_(t?t.timestamp+t.duration:0,ke),s=!M(e)||!M(i),o=s?F:m,n;if(r.type==="video"){let a=r.track.metadata.rotation;n=a===void 0||typeof a=="number"?V(a??0):a}else n=De;return g("tkhd",+s,3,[o(e),o(e),m(r.track.id),m(0),o(i),Array(8).fill(0),p(0),p(r.track.id),He(r.type==="audio"?1:0),p(0),_t(n),A(r.type==="video"?r.info.width:0),A(r.type==="video"?r.info.height:0)])},rr=(r,e)=>b("mdia",void 0,[ir(r,e),nr(r),ar(r)]),ir=(r,e)=>{let t=Le(r.samples),i=_(t?t.timestamp+t.duration:0,r.timescale),s=!M(e)||!M(i),o=s?F:m;return g("mdhd",+s,0,[o(e),o(e),m(r.timescale),o(i),p(21956),p(0)])},sr={video:"vide",audio:"soun",subtitle:"text"},or={video:"VideoHandler",audio:"SoundHandler",subtitle:"TextHandler"},nr=r=>g("hdlr",0,0,[S("mhlr"),S(sr[r.type]),m(0),m(0),m(0),S(or[r.type],!0)]),ar=r=>b("minf",void 0,[lr[r.type](),mr(),pr(r)]),cr=()=>g("vmhd",0,1,[p(0),p(0),p(0),p(0)]),ur=()=>g("smhd",0,0,[p(0),p(0)]),dr=()=>g("nmhd",0,0),lr={video:cr,audio:ur,subtitle:dr},mr=()=>b("dinf",void 0,[fr()]),fr=()=>g("dref",0,0,[m(1)],[hr()]),hr=()=>g("url ",0,1),pr=r=>{let e=r.compositionTimeOffsetTable.length>1||r.compositionTimeOffsetTable.some(t=>t.sampleCompositionTimeOffset!==0);return b("stbl",void 0,[br(r),Ar(r),Er(r),Ir(r),Or(r),Vr(r),e?Mr(r):null])},br=r=>{let e;return r.type==="video"?e=kr(Hr[r.track.source._codec],r):r.type==="audio"?e=wr($r[r.track.source._codec],r):r.type==="subtitle"&&(e=vr(jr[r.track.source._codec],r)),l(e),g("stsd",0,0,[m(1)],[e])},kr=(r,e)=>b(r,[Array(6).fill(0),p(1),p(0),p(0),Array(12).fill(0),p(e.info.width),p(e.info.height),m(4718592),m(4718592),m(0),p(1),Array(32).fill(0),p(24),Zt(65535)],[Lr[e.track.source._codec](e),fe(e.info.decoderConfig.colorSpace)?gr(e):null]),gr=r=>b("colr",[S("nclx"),p(z[r.info.decoderConfig.colorSpace.primaries]),p(B[r.info.decoderConfig.colorSpace.transfer]),p(U[r.info.decoderConfig.colorSpace.matrix]),x((r.info.decoderConfig.colorSpace.fullRange?1:0)<<7)]),Tr=r=>r.info.decoderConfig&&b("avcC",[...P(r.info.decoderConfig.description)]),xr=r=>r.info.decoderConfig&&b("hvcC",[...P(r.info.decoderConfig.description)]),St=r=>{if(!r.info.decoderConfig)return null;let e=r.info.decoderConfig;l(e.colorSpace);let t=e.codec.split("."),i=Number(t[1]),s=Number(t[2]),a=(Number(t[3])<<4)+(0<<1)+Number(e.colorSpace.fullRange);return g("vpcC",1,0,[x(i),x(s),x(a),x(2),x(2),x(2),p(0)])},Cr=()=>b("av1C",[129,0,0,0]),wr=(r,e)=>b(r,[Array(6).fill(0),p(1),p(0),p(0),m(0),p(e.info.numberOfChannels),p(16),p(0),p(0),A(e.info.sampleRate)],[Qr[e.track.source._codec](e)]),Sr=r=>{let t=[...P(r.info.decoderConfig.description??new ArrayBuffer(0))];return t=[...x(64),...x(21),...yt(0),...m(0),...m(0),...x(5),...Ne(t.length),...t],t=[...p(1),...x(0),...x(4),...Ne(t.length),...t,...x(6),...x(1),...x(2)],t=[...x(3),...Ne(t.length),...t],g("esds",0,0,t)},yr=r=>{let e=3840,t=0,i=r.info.decoderConfig?.description;if(i){l(i.byteLength>=18);let s=ArrayBuffer.isView(i)?new DataView(i.buffer,i.byteOffset,i.byteLength):new DataView(i);e=s.getUint16(10,!0),t=s.getInt16(14,!0)}return b("dOps",[x(0),x(r.info.numberOfChannels),p(e),m(r.info.sampleRate),He(t),x(0)])},vr=(r,e)=>b(r,[Array(6).fill(0),p(1)],[Kr[e.track.source._codec](e)]),_r=r=>b("vttC",[...v.encode(r.info.config.description)]);var Ar=r=>g("stts",0,0,[m(r.timeToSampleTable.length),r.timeToSampleTable.map(e=>[m(e.sampleCount),m(e.sampleDelta)])]),Er=r=>{if(r.samples.every(t=>t.type==="key"))return null;let e=[...r.samples.entries()].filter(([,t])=>t.type==="key");return g("stss",0,0,[m(e.length),e.map(([t])=>m(t+1))])},Ir=r=>g("stsc",0,0,[m(r.compactlyCodedChunkTable.length),r.compactlyCodedChunkTable.map(e=>[m(e.firstChunk),m(e.samplesPerChunk),m(1)])]),Or=r=>g("stsz",0,0,[m(0),m(r.samples.length),r.samples.map(e=>m(e.size))]),Vr=r=>r.finalizedChunks.length>0&&y(r.finalizedChunks).offset>=2**32?g("co64",0,0,[m(r.finalizedChunks.length),r.finalizedChunks.map(e=>F(e.offset))]):g("stco",0,0,[m(r.finalizedChunks.length),r.finalizedChunks.map(e=>m(e.offset))]),Mr=r=>g("ctts",0,0,[m(r.compositionTimeOffsetTable.length),r.compositionTimeOffsetTable.map(e=>[m(e.sampleCount),m(e.sampleCompositionTimeOffset)])]),Rr=r=>b("mvex",void 0,r.map(Pr)),Pr=r=>g("trex",0,0,[m(r.track.id),m(1),m(0),m(0),m(0)]),$e=(r,e)=>b("moof",void 0,[zr(r),...e.map(Br)]),zr=r=>g("mfhd",0,0,[m(r)]),It=r=>{let e=0,t=0,i=0,s=0,o=r.type==="delta";return t|=+o,o?e|=1:e|=2,e<<24|t<<16|i<<8|s},Br=r=>b("traf",void 0,[Ur(r),Dr(r),Fr(r)]),Ur=r=>{l(r.currentChunk);let e=0;e|=8,e|=16,e|=32,e|=131072;let t=r.currentChunk.samples[1]??r.currentChunk.samples[0],i={duration:t.timescaleUnitsToNextSample,size:t.size,flags:It(t)};return g("tfhd",0,e,[m(r.track.id),m(i.duration),m(i.size),m(i.flags)])},Dr=r=>(l(r.currentChunk),g("tfdt",1,0,[F(_(r.currentChunk.startTimestamp,r.timescale))])),Fr=r=>{l(r.currentChunk);let e=r.currentChunk.samples.map(w=>w.timescaleUnitsToNextSample),t=r.currentChunk.samples.map(w=>w.size),i=r.currentChunk.samples.map(It),s=r.currentChunk.samples.map(w=>_(w.timestamp-w.decodeTimestamp,r.timescale)),o=new Set(e),n=new Set(t),a=new Set(i),c=new Set(s),u=a.size===2&&i[0]!==i[1],d=o.size>1,f=n.size>1,T=!u&&a.size>1,C=c.size>1||[...c].some(w=>w!==0),k=0;return k|=1,k|=4*+u,k|=256*+d,k|=512*+f,k|=1024*+T,k|=2048*+C,g("trun",1,k,[m(r.currentChunk.samples.length),m(r.currentChunk.offset-r.currentChunk.moofOffset||0),u?m(i[0]):[],r.currentChunk.samples.map((w,me)=>[d?m(e[me]):[],f?m(t[me]):[],T?m(i[me]):[],C?vt(s[me]):[]])])},Ot=r=>b("mfra",void 0,[...r.map(Wr),Nr()]),Wr=(r,e)=>g("tfra",1,0,[m(r.track.id),m(63),m(r.finalizedChunks.length),r.finalizedChunks.map(i=>[F(_(i.startTimestamp,r.timescale)),F(i.moofOffset),m(e+1),m(1),m(1)])]),Nr=()=>g("mfro",0,0,[m(0)]),Vt=()=>b("vtte"),Mt=(r,e,t,i,s)=>b("vttc",void 0,[s!==null?b("vsid",[vt(s)]):null,t!==null?b("iden",[...v.encode(t)]):null,e!==null?b("ctim",[...v.encode(be(e))]):null,i!==null?b("sttg",[...v.encode(i)]):null,b("payl",[...v.encode(r)])]),Rt=r=>b("vtta",[...v.encode(r)]),Hr={avc:"avc1",hevc:"hvc1",vp8:"vp08",vp9:"vp09",av1:"av01"},Lr={avc:Tr,hevc:xr,vp8:St,vp9:St,av1:Cr},$r={aac:"mp4a",opus:"Opus"},Qr={aac:Sr,opus:yr},jr={webvtt:"wvtt"},Kr={webvtt:_r};var $=class{output;mutex=new H;constructor(e){this.output=e}beforeTrackAdd(e){}onTrackClose(e){}trackTimestampInfo=new WeakMap;validateAndNormalizeTimestamp(e,t,i){let s=t/1e6,o=this.trackTimestampInfo.get(e);if(!o){if(!i)throw new Error("First frame must be a key frame.");if(this.timestampsMustStartAtZero&&s>0)throw new Error(`Timestamps must start at zero (got ${s}s).`);o={timestampOffset:s,maxTimestamp:e.source._offsetTimestamps?0:s,lastKeyFrameTimestamp:e.source._offsetTimestamps?0:s},this.trackTimestampInfo.set(e,o)}if(e.source._offsetTimestamps&&(s-=o.timestampOffset),s<0)throw new Error(`Timestamps must be non-negative (got ${s}s).`);if(s<o.lastKeyFrameTimestamp)throw new Error(`Timestamp cannot be smaller than last key frame's timestamp (got ${s}s, last key frame at ${o.lastKeyFrameTimestamp}s).`);if(i){if(s<o.maxTimestamp)throw new Error(`Key frame timestamps cannot be smaller than any timestamp that came before (got ${s}s, max timestamp was ${o.maxTimestamp}s).`);o.lastKeyFrameTimestamp=s}return o.maxTimestamp=Math.max(o.maxTimestamp,s),s}};var ie=class{ensureMonotonicity=!1;start(){}},Q=class extends ie{pos=0;target;buffer=new ArrayBuffer(2**16);bytes=new Uint8Array(this.buffer);maxPos=0;constructor(e){super(),this.target=e}ensureSize(e){let t=this.buffer.byteLength;for(;t<e;)t*=2;if(t===this.buffer.byteLength)return;let i=new ArrayBuffer(t),s=new Uint8Array(i);s.set(this.bytes,0),this.buffer=i,this.bytes=s}write(e){this.ensureSize(this.pos+e.byteLength),this.bytes.set(e,this.pos),this.pos+=e.byteLength,this.maxPos=Math.max(this.maxPos,this.pos)}seek(e){this.pos=e}getPos(){return this.pos}async flush(){}async finalize(){this.ensureSize(this.pos),this.target.buffer=this.buffer.slice(0,Math.max(this.maxPos,this.pos))}getSlice(e,t){return this.bytes.slice(e,t)}},Te=class extends ie{pos=0;target;sections=[];lastFlushEnd=0;writer=null;constructor(e){super(),this.target=e}start(){this.writer=this.target._writable.getWriter()}write(e){this.sections.push({data:e.slice(),start:this.pos}),this.pos+=e.byteLength}seek(e){this.pos=e}getPos(){return this.pos}async flush(){if(l(this.writer),this.sections.length===0)return;let e=[],t=[...this.sections].sort((i,s)=>i.start-s.start);e.push({start:t[0].start,size:t[0].data.byteLength});for(let i=1;i<t.length;i++){let s=e[e.length-1],o=t[i];o.start<=s.start+s.size?s.size=Math.max(s.size,o.start+o.data.byteLength-s.start):e.push({start:o.start,size:o.data.byteLength})}for(let i of e){i.data=new Uint8Array(i.size);for(let s of this.sections)i.start<=s.start&&s.start<i.start+i.size&&i.data.set(s.data,s.start-i.start);if(this.ensureMonotonicity&&i.start!==this.lastFlushEnd)throw new Error("Internal error: Monotonicity violation.");this.writer.desiredSize!==null&&this.writer.desiredSize<=0&&await this.writer.ready,this.writer.write({type:"write",data:i.data,position:i.start}),this.lastFlushEnd=i.start+i.data.byteLength}this.sections.length=0}finalize(){return l(this.writer),this.writer.close()}},qr=2**24,Xr=2,xe=class extends ie{pos=0;target;chunkSize;chunks=[];lastFlushEnd=0;writer=null;flushedChunkQueue=[];constructor(e){if(super(),this.target=e,this.chunkSize=e._options?.chunkSize??qr,!Number.isInteger(this.chunkSize)||this.chunkSize<2**10)throw new Error("Invalid StreamTarget options: chunkSize must be an integer not smaller than 1024.")}start(){this.writer=this.target._writable.getWriter()}write(e){this.writeDataIntoChunks(e,this.pos),this.queueChunksForFlush(),this.pos+=e.byteLength}seek(e){this.pos=e}getPos(){return this.pos}writeDataIntoChunks(e,t){let i=this.chunks.findIndex(c=>c.start<=t&&t<c.start+this.chunkSize);i===-1&&(i=this.createChunk(t));let s=this.chunks[i],o=t-s.start,n=e.subarray(0,Math.min(this.chunkSize-o,e.byteLength));s.data.set(n,o);let a={start:o,end:o+n.byteLength};if(this.insertSectionIntoChunk(s,a),s.written[0].start===0&&s.written[0].end===this.chunkSize&&(s.shouldFlush=!0),this.chunks.length>Xr){for(let c=0;c<this.chunks.length-1;c++)this.chunks[c].shouldFlush=!0;this.queueChunksForFlush()}n.byteLength<e.byteLength&&this.writeDataIntoChunks(e.subarray(n.byteLength),t+n.byteLength)}insertSectionIntoChunk(e,t){let i=0,s=e.written.length-1,o=-1;for(;i<=s;){let n=Math.floor(i+(s-i+1)/2);e.written[n].start<=t.start?(i=n+1,o=n):s=n-1}for(e.written.splice(o+1,0,t),(o===-1||e.written[o].end<t.start)&&o++;o<e.written.length-1&&e.written[o].end>=e.written[o+1].start;)e.written[o].end=Math.max(e.written[o].end,e.written[o+1].end),e.written.splice(o+1,1)}createChunk(e){let i={start:Math.floor(e/this.chunkSize)*this.chunkSize,data:new Uint8Array(this.chunkSize),written:[],shouldFlush:!1};return this.chunks.push(i),this.chunks.sort((s,o)=>s.start-o.start),this.chunks.indexOf(i)}queueChunksForFlush(e=!1){l(this.writer);for(let t=0;t<this.chunks.length;t++){let i=this.chunks[t];if(!(!i.shouldFlush&&!e)){for(let s of i.written){if(this.ensureMonotonicity&&i.start+s.start!==this.lastFlushEnd)throw new Error("Internal error: Monotonicity violation.");this.flushedChunkQueue.push({type:"write",data:i.data.subarray(s.start,s.end),position:i.start+s.start}),this.lastFlushEnd=i.start+s.end}this.chunks.splice(t--,1)}}}async flush(){if(l(this.writer),this.flushedChunkQueue.length!==0){for(let e of this.flushedChunkQueue)this.writer.desiredSize!==null&&this.writer.desiredSize<=0&&await this.writer.ready,this.writer.write(e);this.flushedChunkQueue.length=0}}async finalize(){return l(this.writer),this.queueChunksForFlush(!0),await this.flush(),this.writer.close()}};var W=class{_output=null},se=class extends W{buffer=null;_createWriter(){return new Q(this)}},Qe=class extends W{_writable;_options;constructor(e,t={}){if(super(),!(e instanceof WritableStream))throw new TypeError("StreamTarget requires a WritableStream instance.");if(t!=null&&typeof t!="object")throw new TypeError("StreamTarget options, when provided, must be an object.");if(t.chunked!==void 0&&typeof t.chunked!="boolean")throw new TypeError("options.chunked, when provided, must be a boolean.");if(t.chunkSize!==void 0&&(!Number.isInteger(t.chunkSize)||t.chunkSize<=0))throw new TypeError("options.chunkSize, when provided, must be a positive integer.");this._writable=e,this._options=t}_createWriter(){return this._options.chunked?new xe(this):new Te(this)}};var j=["avc","hevc","vp8","vp9","av1"],K=["aac","opus"],Ce=["webvtt"],Pt=[{maxMacroblocks:99,maxBitrate:64e3,level:10},{maxMacroblocks:396,maxBitrate:192e3,level:11},{maxMacroblocks:396,maxBitrate:384e3,level:12},{maxMacroblocks:396,maxBitrate:768e3,level:13},{maxMacroblocks:396,maxBitrate:2e6,level:20},{maxMacroblocks:792,maxBitrate:4e6,level:21},{maxMacroblocks:1620,maxBitrate:4e6,level:22},{maxMacroblocks:1620,maxBitrate:1e7,level:30},{maxMacroblocks:3600,maxBitrate:14e6,level:31},{maxMacroblocks:5120,maxBitrate:2e7,level:32},{maxMacroblocks:8192,maxBitrate:2e7,level:40},{maxMacroblocks:8192,maxBitrate:5e7,level:41},{maxMacroblocks:8704,maxBitrate:5e7,level:42},{maxMacroblocks:22080,maxBitrate:135e6,level:50},{maxMacroblocks:36864,maxBitrate:24e7,level:51},{maxMacroblocks:36864,maxBitrate:24e7,level:52},{maxMacroblocks:139264,maxBitrate:24e7,level:60},{maxMacroblocks:139264,maxBitrate:48e7,level:61},{maxMacroblocks:139264,maxBitrate:8e8,level:62}],zt=[{maxPictureSize:36864,maxBitrate:128e3,tier:"L",level:30},{maxPictureSize:122880,maxBitrate:15e5,tier:"L",level:60},{maxPictureSize:245760,maxBitrate:3e6,tier:"L",level:63},{maxPictureSize:552960,maxBitrate:6e6,tier:"L",level:90},{maxPictureSize:983040,maxBitrate:1e7,tier:"L",level:93},{maxPictureSize:2228224,maxBitrate:12e6,tier:"L",level:120},{maxPictureSize:2228224,maxBitrate:3e7,tier:"H",level:120},{maxPictureSize:2228224,maxBitrate:2e7,tier:"L",level:123},{maxPictureSize:2228224,maxBitrate:5e7,tier:"H",level:123},{maxPictureSize:8912896,maxBitrate:25e6,tier:"L",level:150},{maxPictureSize:8912896,maxBitrate:1e8,tier:"H",level:150},{maxPictureSize:8912896,maxBitrate:4e7,tier:"L",level:153},{maxPictureSize:8912896,maxBitrate:16e7,tier:"H",level:153},{maxPictureSize:8912896,maxBitrate:6e7,tier:"L",level:156},{maxPictureSize:8912896,maxBitrate:24e7,tier:"H",level:156},{maxPictureSize:35651584,maxBitrate:6e7,tier:"L",level:180},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:180},{maxPictureSize:35651584,maxBitrate:12e7,tier:"L",level:183},{maxPictureSize:35651584,maxBitrate:48e7,tier:"H",level:183},{maxPictureSize:35651584,maxBitrate:24e7,tier:"L",level:186},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:186}],Bt=[{maxPictureSize:36864,maxBitrate:2e5,level:10},{maxPictureSize:73728,maxBitrate:8e5,level:11},{maxPictureSize:122880,maxBitrate:18e5,level:20},{maxPictureSize:245760,maxBitrate:36e5,level:21},{maxPictureSize:552960,maxBitrate:72e5,level:30},{maxPictureSize:983040,maxBitrate:12e6,level:31},{maxPictureSize:2228224,maxBitrate:18e6,level:40},{maxPictureSize:2228224,maxBitrate:3e7,level:41},{maxPictureSize:8912896,maxBitrate:6e7,level:50},{maxPictureSize:8912896,maxBitrate:12e7,level:51},{maxPictureSize:8912896,maxBitrate:18e7,level:52},{maxPictureSize:35651584,maxBitrate:18e7,level:60},{maxPictureSize:35651584,maxBitrate:24e7,level:61},{maxPictureSize:35651584,maxBitrate:48e7,level:62}],Ut=[{maxPictureSize:147456,maxBitrate:15e5,tier:"M",level:0},{maxPictureSize:278784,maxBitrate:3e6,tier:"M",level:1},{maxPictureSize:665856,maxBitrate:6e6,tier:"M",level:4},{maxPictureSize:1065024,maxBitrate:1e7,tier:"M",level:5},{maxPictureSize:2359296,maxBitrate:12e6,tier:"M",level:8},{maxPictureSize:2359296,maxBitrate:3e7,tier:"H",level:8},{maxPictureSize:2359296,maxBitrate:2e7,tier:"M",level:9},{maxPictureSize:2359296,maxBitrate:5e7,tier:"H",level:9},{maxPictureSize:8912896,maxBitrate:3e7,tier:"M",level:12},{maxPictureSize:8912896,maxBitrate:1e8,tier:"H",level:12},{maxPictureSize:8912896,maxBitrate:4e7,tier:"M",level:13},{maxPictureSize:8912896,maxBitrate:16e7,tier:"H",level:13},{maxPictureSize:8912896,maxBitrate:6e7,tier:"M",level:14},{maxPictureSize:8912896,maxBitrate:24e7,tier:"H",level:14},{maxPictureSize:35651584,maxBitrate:6e7,tier:"M",level:15},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:15},{maxPictureSize:35651584,maxBitrate:6e7,tier:"M",level:16},{maxPictureSize:35651584,maxBitrate:24e7,tier:"H",level:16},{maxPictureSize:35651584,maxBitrate:1e8,tier:"M",level:17},{maxPictureSize:35651584,maxBitrate:48e7,tier:"H",level:17},{maxPictureSize:35651584,maxBitrate:16e7,tier:"M",level:18},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:18},{maxPictureSize:35651584,maxBitrate:16e7,tier:"M",level:19},{maxPictureSize:35651584,maxBitrate:8e8,tier:"H",level:19}],Dt=(r,e,t,i)=>{if(r==="avc"){let o=Math.ceil(e/16)*Math.ceil(t/16),n=Pt.find(f=>o<=f.maxMacroblocks&&i<=f.maxBitrate)??y(Pt),a=n?n.level:0,c="64".padStart(2,"0"),u="00",d=a.toString(16).padStart(2,"0");return`avc1.${c}${u}${d}`}else if(r==="hevc"){let s="",n="6",a=e*t,c=zt.find(d=>a<=d.maxPictureSize&&i<=d.maxBitrate)??y(zt);return`hev1.${s}1.${n}.${c.tier}${c.level}.B0`}else{if(r==="vp8")return"vp8";if(r==="vp9"){let s="00",o=e*t,n=Bt.find(c=>o<=c.maxPictureSize&&i<=c.maxBitrate)??y(Bt);return`vp09.${s}.${n.level}.08`}else if(r==="av1"){let o=e*t,n=Ut.find(c=>o<=c.maxPictureSize&&i<=c.maxBitrate)??y(Ut);return`av01.0.${n.level.toString().padStart(2,"0")}${n.tier}.08`}}throw new TypeError(`Unhandled codec '${r}'.`)},Ft=(r,e)=>{if(r==="avc"){if(!e||e.byteLength<4)throw new TypeError("AVC description must be at least 4 bytes long.");return`avc1.${xt(e.subarray(1,4))}`}else if(r==="hevc"){if(!e)throw new TypeError("HEVC description must be provided.");let t=new DataView(e.buffer,e.byteOffset,e.byteLength),i="hev1.",s=e[1]>>6&3,o=e[1]&31;i+=["","A","B","C"][s]+o,i+=".";let n=Ct(t.getUint32(2));i+=n.toString(16),i+=".";let a=e[1]>>5&1,c=e[12];i+=a===0?"L":"H",i+=c,i+=".";let u=[];for(let d=0;d<6;d++){let f=e[d+13];u.push(f)}for(;u[u.length-1]===0;)u.pop();return i+=u.map(d=>d.toString(16)).join("."),i}throw new TypeError(`Unhandled codec '${r}'.`)},Wt=(r,e,t)=>{if(r==="aac")return e>=2&&t<=24e3?"mp4a.40.29":t<=24e3?"mp4a.40.5":"mp4a.40.2";if(r==="opus")return"opus";if(r==="vorbis")return"vorbis";throw new TypeError(`Unhandled codec '${r}'.`)},Nt=(r,e)=>{if(r==="aac"){if(!e||e.byteLength<2)throw new TypeError("AAC description must be at least 2 bytes long.");return`mp4a.40.${e[0]>>3}`}else{if(r==="opus")return"opus";if(r==="vorbis")return"vorbis"}throw new TypeError(`Unhandled codec '${r}'.`)},Ht=r=>r==="avc"?{avc:{format:"avc"}}:r==="hevc"?{hevc:{format:"hevc"}}:{},Lt=r=>r==="aac"?{aac:{format:"aac"}}:r==="opus"?{opus:{format:"opus"}}:{},we=r=>{if(!r)throw new TypeError("Video chunk metadata must be provided.");if(typeof r!="object")throw new TypeError("Video chunk metadata must be an object.");if(!r.decoderConfig)throw new TypeError("Video chunk metadata must include a decoder configuration.");if(typeof r.decoderConfig!="object")throw new TypeError("Video chunk metadata decoder configuration must be an object.");if(typeof r.decoderConfig.codec!="string")throw new TypeError("Video chunk metadata decoder configuration must specify a codec string.");if(!Number.isInteger(r.decoderConfig.codedWidth)||r.decoderConfig.codedWidth<=0)throw new TypeError("Video chunk metadata decoder configuration must specify a valid codedWidth (positive integer).");if(!Number.isInteger(r.decoderConfig.codedHeight)||r.decoderConfig.codedHeight<=0)throw new TypeError("Video chunk metadata decoder configuration must specify a valid codedHeight (positive integer).");if(r.decoderConfig.description!==void 0&&!Ue(r.decoderConfig.description))throw new TypeError("Video chunk metadata decoder configuration description, when defined, must be an ArrayBuffer or an ArrayBuffer view.");if(r.decoderConfig.colorSpace!==void 0){let{colorSpace:e}=r.decoderConfig;if(typeof e!="object")throw new TypeError("Video chunk metadata decoder configuration colorSpace, when provided, must be an object.");let t=Object.keys(z);if(e.primaries!=null&&!t.includes(e.primaries))throw new TypeError(`Video chunk metadata decoder configuration colorSpace primaries, when defined, must be one of ${t.join(", ")}.`);let i=Object.keys(B);if(e.transfer!=null&&!i.includes(e.transfer))throw new TypeError(`Video chunk metadata decoder configuration colorSpace transfer, when defined, must be one of ${i.join(", ")}.`);let s=Object.keys(U);if(e.matrix!=null&&!s.includes(e.matrix))throw new TypeError(`Video chunk metadata decoder configuration colorSpace matrix, when defined, must be one of ${s.join(", ")}.`);if(e.fullRange!=null&&typeof e.fullRange!="boolean")throw new TypeError("Video chunk metadata decoder configuration colorSpace fullRange, when defined, must be a boolean.")}if((r.decoderConfig.codec.startsWith("avc1")||r.decoderConfig.codec.startsWith("avc3"))&&!r.decoderConfig.description)throw new TypeError("Video chunk metadata decoder configuration for AVC must include a description, which is expected to be an AVCDecoderConfigurationRecord as specified in ISO 14496-15.");if((r.decoderConfig.codec.startsWith("hev1")||r.decoderConfig.codec.startsWith("hvc1"))&&!r.decoderConfig.description)throw new TypeError("Video chunk metadata decoder configuration for HEVC must include a description, which is expected to be an HEVCDecoderConfigurationRecord as specified in ISO 14496-15.");if((r.decoderConfig.codec==="vp8"||r.decoderConfig.codec.startsWith("vp09"))&&r.decoderConfig.colorSpace===void 0)throw new TypeError("Video chunk metadata decoder configuration for VP8/VP9 must include a colorSpace.")},Se=r=>{if(!r)throw new TypeError("Audio chunk metadata must be provided.");if(typeof r!="object")throw new TypeError("Audio chunk metadata must be an object.");if(!r.decoderConfig)throw new TypeError("Audio chunk metadata must include a decoder configuration.");if(typeof r.decoderConfig!="object")throw new TypeError("Audio chunk metadata decoder configuration must be an object.");if(typeof r.decoderConfig.codec!="string")throw new TypeError("Audio chunk metadata decoder configuration must specify a codec string.");if(!Number.isInteger(r.decoderConfig.sampleRate)||r.decoderConfig.sampleRate<=0)throw new TypeError("Audio chunk metadata decoder configuration must specify a valid sampleRate (positive integer).");if(!Number.isInteger(r.decoderConfig.numberOfChannels)||r.decoderConfig.numberOfChannels<=0)throw new TypeError("Audio chunk metadata decoder configuration must specify a valid numberOfChannels (positive integer).");if(r.decoderConfig.description!==void 0&&!Ue(r.decoderConfig.description))throw new TypeError("Audio chunk metadata decoder configuration description, when defined, must be an ArrayBuffer or an ArrayBuffer view.");if(r.decoderConfig.codec.startsWith("mp4a")&&!r.decoderConfig.description)throw new TypeError("Audio chunk metadata decoder configuration for AAC must include a description, which is expected to be an AudioSpecificConfig as specified in ISO 14496-3.");if(r.decoderConfig.codec==="opus"&&r.decoderConfig.description&&r.decoderConfig.description.byteLength<18)throw new TypeError("Invalid decoder description provided for Opus; must be at least 18 bytes long.")},ye=r=>{if(!r)throw new TypeError("Subtitle metadata must be provided.");if(typeof r!="object")throw new TypeError("Subtitle metadata must be an object.");if(!r.config)throw new TypeError("Subtitle metadata must include a config object.");if(typeof r.config!="object")throw new TypeError("Subtitle metadata config must be an object.");if(typeof r.config.description!="string")throw new TypeError("Subtitle metadata config description must be a string.")};var ke=1e3,Gr=2082844800,_=(r,e,t=!0)=>{let i=r*e;return t?Math.round(i):i},ve=class extends ${timestampsMustStartAtZero=!0;writer;boxWriter;fastStart;auxTarget=new se;auxWriter=this.auxTarget._createWriter();auxBoxWriter=new te(this.auxWriter);ftypSize=null;mdat=null;trackDatas=[];creationTime=Math.floor(Date.now()/1e3)+Gr;finalizedChunks=[];nextFragmentNumber=1;constructor(e,t){super(e),this.writer=e._writer,this.boxWriter=new te(this.writer);let i=this.writer instanceof Q?"in-memory":!1;this.fastStart=t._options.fastStart??i,(this.fastStart==="in-memory"||this.fastStart==="fragmented")&&(this.writer.ensureMonotonicity=!0)}async start(){let e=await this.mutex.acquire(),t=this.output._tracks.some(i=>i.type==="video"&&i.source._codec==="avc");this.boxWriter.writeBox(At({holdsAvc:t,fragmented:this.fastStart==="fragmented"})),this.ftypSize=this.writer.getPos(),this.fastStart==="in-memory"?this.mdat=ge(!1):this.fastStart==="fragmented"||(this.mdat=ge(!0),this.boxWriter.writeBox(this.mdat)),await this.writer.flush(),e()}getVideoTrackData(e,t){let i=this.trackDatas.find(o=>o.track===e);if(i)return i;we(t),l(t),l(t.decoderConfig),l(t.decoderConfig.codedWidth!==void 0),l(t.decoderConfig.codedHeight!==void 0);let s={track:e,type:"video",info:{width:t.decoderConfig.codedWidth,height:t.decoderConfig.codedHeight,decoderConfig:t.decoderConfig},timescale:e.metadata.frameRate??57600,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[]};return this.trackDatas.push(s),this.trackDatas.sort((o,n)=>o.track.id-n.track.id),s}getAudioTrackData(e,t){let i=this.trackDatas.find(o=>o.track===e);if(i)return i;Se(t),l(t),l(t.decoderConfig);let s={track:e,type:"audio",info:{numberOfChannels:t.decoderConfig.numberOfChannels,sampleRate:t.decoderConfig.sampleRate,decoderConfig:t.decoderConfig},timescale:t.decoderConfig.sampleRate,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[]};return this.trackDatas.push(s),this.trackDatas.sort((o,n)=>o.track.id-n.track.id),s}getSubtitleTrackData(e,t){let i=this.trackDatas.find(o=>o.track===e);if(i)return i;ye(t),l(t),l(t.config);let s={track:e,type:"subtitle",info:{config:t.config},timescale:1e3,samples:[],sampleQueue:[],timestampProcessingQueue:[],timeToSampleTable:[],compositionTimeOffsetTable:[],lastTimescaleUnits:null,lastSample:null,finalizedChunks:[],currentChunk:null,compactlyCodedChunkTable:[],lastCueEndTimestamp:0,cueQueue:[],nextSourceId:0,cueToSourceId:new WeakMap};return this.trackDatas.push(s),this.trackDatas.sort((o,n)=>o.track.id-n.track.id),this.validateAndNormalizeTimestamp(e,0,!0),s}async addEncodedVideoChunk(e,t,i){let s=await this.mutex.acquire();try{let o=this.getVideoTrackData(e,i),n=new Uint8Array(t.byteLength);t.copyTo(n);let a=this.validateAndNormalizeTimestamp(o.track,t.timestamp,t.type==="key"),c=this.createSampleForTrack(o,n,a,(t.duration??0)/1e6,t.type);await this.registerSample(o,c)}finally{s()}}async addEncodedAudioChunk(e,t,i){let s=await this.mutex.acquire();try{let o=this.getAudioTrackData(e,i),n=new Uint8Array(t.byteLength);t.copyTo(n);let a=t.type,c=this.validateAndNormalizeTimestamp(o.track,t.timestamp,a==="key"),u=this.createSampleForTrack(o,n,c,(t.duration??0)/1e6,a);await this.registerSample(o,u)}finally{s()}}async addSubtitleCue(e,t,i){let s=await this.mutex.acquire();try{let o=this.getSubtitleTrackData(e,i);this.validateAndNormalizeTimestamp(o.track,1e6*t.timestamp,!0),e.source._codec==="webvtt"&&(o.cueQueue.push(t),await this.processWebVTTCues(o,t.timestamp))}finally{s()}}async processWebVTTCues(e,t){for(;e.cueQueue.length>0;){let i=new Set([]);for(let u of e.cueQueue)l(u.timestamp<=t),l(e.lastCueEndTimestamp<=u.timestamp+u.duration),i.add(Math.max(u.timestamp,e.lastCueEndTimestamp)),i.add(u.timestamp+u.duration);let s=[...i].sort((u,d)=>u-d),o=s[0],n=s[1]??o;if(t<n)break;if(e.lastCueEndTimestamp<o){this.auxWriter.seek(0);let u=Vt();this.auxBoxWriter.writeBox(u);let d=this.auxWriter.getSlice(0,this.auxWriter.getPos()),f=this.createSampleForTrack(e,d,e.lastCueEndTimestamp,o-e.lastCueEndTimestamp,"key");await this.registerSample(e,f),e.lastCueEndTimestamp=o}this.auxWriter.seek(0);for(let u=0;u<e.cueQueue.length;u++){let d=e.cueQueue[u];if(d.timestamp>=n)break;L.lastIndex=0;let f=L.test(d.text),T=d.timestamp+d.duration,C=e.cueToSourceId.get(d);if(C===void 0&&n<T&&(C=e.nextSourceId++,e.cueToSourceId.set(d,C)),d.notes){let w=Rt(d.notes);this.auxBoxWriter.writeBox(w)}let k=Mt(d.text,f?o:null,d.identifier??null,d.settings??null,C??null);this.auxBoxWriter.writeBox(k),T===n&&e.cueQueue.splice(u--,1)}let a=this.auxWriter.getSlice(0,this.auxWriter.getPos()),c=this.createSampleForTrack(e,a,o,n-o,"key");await this.registerSample(e,c),e.lastCueEndTimestamp=n}}createSampleForTrack(e,t,i,s,o){return{timestamp:i,decodeTimestamp:i,duration:s,data:t,size:t.byteLength,type:o,timescaleUnitsToNextSample:_(s,e.timescale)}}processTimestamps(e){if(e.timestampProcessingQueue.length===0)return;let t=e.timestampProcessingQueue.map(i=>i.timestamp).sort((i,s)=>i-s);for(let i=0;i<e.timestampProcessingQueue.length;i++){let s=e.timestampProcessingQueue[i];s.decodeTimestamp=t[i];let o=_(s.timestamp-s.decodeTimestamp,e.timescale),n=_(s.duration,e.timescale);if(e.lastTimescaleUnits!==null){l(e.lastSample);let a=_(s.decodeTimestamp,e.timescale,!1),c=Math.round(a-e.lastTimescaleUnits);if(e.lastTimescaleUnits+=c,e.lastSample.timescaleUnitsToNextSample=c,this.fastStart!=="fragmented"){let u=y(e.timeToSampleTable);if(l(u),u.sampleCount===1){u.sampleDelta=c;let f=e.timeToSampleTable[e.timeToSampleTable.length-2];f&&f.sampleDelta===c&&(f.sampleCount++,e.timeToSampleTable.pop(),u=f)}else u.sampleDelta!==c&&(u.sampleCount--,e.timeToSampleTable.push(u={sampleCount:1,sampleDelta:c}));u.sampleDelta===n?u.sampleCount++:e.timeToSampleTable.push({sampleCount:1,sampleDelta:n});let d=y(e.compositionTimeOffsetTable);l(d),d.sampleCompositionTimeOffset===o?d.sampleCount++:e.compositionTimeOffsetTable.push({sampleCount:1,sampleCompositionTimeOffset:o})}}else e.lastTimescaleUnits=0,this.fastStart!=="fragmented"&&(e.timeToSampleTable.push({sampleCount:1,sampleDelta:n}),e.compositionTimeOffsetTable.push({sampleCount:1,sampleCompositionTimeOffset:o}));e.lastSample=s}e.timestampProcessingQueue.length=0}async registerSample(e,t){this.fastStart==="fragmented"?(e.sampleQueue.push(t),await this.interleaveSamples()):await this.addSampleToTrack(e,t)}async addSampleToTrack(e,t){t.type==="key"&&this.processTimestamps(e),this.fastStart!=="fragmented"&&e.samples.push(t);let i=!1;if(!e.currentChunk)i=!0;else{let s=t.timestamp-e.currentChunk.startTimestamp;if(this.fastStart==="fragmented"){let o=this.trackDatas.every(n=>{if(e===n)return t.type==="key";let a=n.sampleQueue[0];return a&&a.type==="key"});s>=1&&o&&(i=!0,await this.finalizeFragment())}else i=s>=.5}i&&(e.currentChunk&&await this.finalizeCurrentChunk(e),e.currentChunk={startTimestamp:t.timestamp,samples:[],offset:null,moofOffset:null}),l(e.currentChunk),e.currentChunk.samples.push(t),e.timestampProcessingQueue.push(t)}async finalizeCurrentChunk(e){if(l(this.fastStart!=="fragmented"),!!e.currentChunk){if(e.finalizedChunks.push(e.currentChunk),this.finalizedChunks.push(e.currentChunk),(e.compactlyCodedChunkTable.length===0||y(e.compactlyCodedChunkTable).samplesPerChunk!==e.currentChunk.samples.length)&&e.compactlyCodedChunkTable.push({firstChunk:e.finalizedChunks.length,samplesPerChunk:e.currentChunk.samples.length}),this.fastStart==="in-memory"){e.currentChunk.offset=0;return}e.currentChunk.offset=this.writer.getPos();for(let t of e.currentChunk.samples)l(t.data),this.writer.write(t.data),t.data=null;await this.writer.flush()}}async interleaveSamples(){l(this.fastStart==="fragmented");for(let e of this.output._tracks)if(!e.source._closed&&!this.trackDatas.some(t=>t.track===e))return;e:for(;;){let e=null,t=1/0;for(let s of this.trackDatas){if(s.sampleQueue.length===0&&!s.track.source._closed)break e;s.sampleQueue.length>0&&s.sampleQueue[0].timestamp<t&&(e=s,t=s.sampleQueue[0].timestamp)}if(!e)break;let i=e.sampleQueue.shift();await this.addSampleToTrack(e,i)}}async finalizeFragment(e=!0){l(this.fastStart==="fragmented");let t=this.nextFragmentNumber++;if(t===1){let a=re(this.trackDatas,this.creationTime,!0);this.boxWriter.writeBox(a)}let i=this.writer.getPos(),s=$e(t,this.trackDatas);this.boxWriter.writeBox(s);{let a=ge(!1),c=0;for(let d of this.trackDatas){l(d.currentChunk);for(let f of d.currentChunk.samples)c+=f.size}let u=this.boxWriter.measureBox(a)+c;u>=2**32&&(a.largeSize=!0,u=this.boxWriter.measureBox(a)+c),a.size=u,this.boxWriter.writeBox(a)}for(let a of this.trackDatas){a.currentChunk.offset=this.writer.getPos(),a.currentChunk.moofOffset=i;for(let c of a.currentChunk.samples)this.writer.write(c.data),c.data=null}let o=this.writer.getPos();this.writer.seek(this.boxWriter.offsets.get(s));let n=$e(t,this.trackDatas);this.boxWriter.writeBox(n),this.writer.seek(o);for(let a of this.trackDatas)a.finalizedChunks.push(a.currentChunk),this.finalizedChunks.push(a.currentChunk),a.currentChunk=null;e&&await this.writer.flush()}async onTrackClose(e){let t=await this.mutex.acquire();if(e.type==="subtitle"&&e.source._codec==="webvtt"){let i=this.trackDatas.find(s=>s.track===e);i&&await this.processWebVTTCues(i,1/0)}this.fastStart==="fragmented"&&await this.interleaveSamples(),t()}async finalize(){let e=await this.mutex.acquire();for(let t of this.trackDatas)t.type==="subtitle"&&t.track.source._codec==="webvtt"&&await this.processWebVTTCues(t,1/0);if(this.fastStart==="fragmented"){for(let t of this.trackDatas){for(let i of t.sampleQueue)await this.addSampleToTrack(t,i);this.processTimestamps(t)}await this.finalizeFragment(!1)}else for(let t of this.trackDatas)this.processTimestamps(t),await this.finalizeCurrentChunk(t);if(this.fastStart==="in-memory"){l(this.mdat);let t;for(let s=0;s<2;s++){let o=re(this.trackDatas,this.creationTime),n=this.boxWriter.measureBox(o);t=this.boxWriter.measureBox(this.mdat);let a=this.writer.getPos()+n+t;for(let c of this.finalizedChunks){c.offset=a;for(let{data:u}of c.samples)l(u),a+=u.byteLength,t+=u.byteLength}if(a<2**32)break;t>=2**32&&(this.mdat.largeSize=!0)}let i=re(this.trackDatas,this.creationTime);this.boxWriter.writeBox(i),this.mdat.size=t,this.boxWriter.writeBox(this.mdat);for(let s of this.finalizedChunks)for(let o of s.samples)l(o.data),this.writer.write(o.data),o.data=null}else if(this.fastStart==="fragmented"){let t=this.writer.getPos(),i=Ot(this.trackDatas);this.boxWriter.writeBox(i);let s=this.writer.getPos()-t;this.writer.seek(this.writer.getPos()-4),this.boxWriter.writeU32(s)}else{l(this.mdat),l(this.ftypSize!==null);let t=this.boxWriter.offsets.get(this.mdat);l(t!==void 0);let i=this.writer.getPos()-t;this.mdat.size=i,this.mdat.largeSize=i>=2**32,this.boxWriter.patchBox(this.mdat);let s=re(this.trackDatas,this.creationTime);if(typeof this.fastStart=="object"){this.writer.seek(this.ftypSize),this.boxWriter.writeBox(s);let o=t-this.writer.getPos();this.boxWriter.writeBox(Et(o))}else this.boxWriter.writeBox(s)}e()}};var oe=class{value;constructor(e){this.value=e}},q=class{value;constructor(e){this.value=e}},ne=class{value;constructor(e){this.value=e}};var je=r=>r<256?1:r<65536?2:r<1<<24?3:r<2**32?4:r<2**40?5:6,Ke=r=>r>=-64&&r<64?1:r>=-8192&&r<8192?2:r>=-(1<<20)&&r<1<<20?3:r>=-(1<<27)&&r<1<<27?4:r>=-(2**34)&&r<2**34?5:6,$t=r=>{if(r<127)return 1;if(r<16383)return 2;if(r<(1<<21)-1)return 3;if(r<(1<<28)-1)return 4;if(r<2**35-1)return 5;if(r<2**42-1)return 6;throw new Error("EBML VINT size not supported "+r)};var qe=2**15,Qt="https://github.com/Vanilagy/webm-muxer",jt=6,Kt=5,Yr={avc:"V_MPEG4/ISO/AVC",hevc:"V_MPEGH/ISO/HEVC",vp8:"V_VP8",vp9:"V_VP9",av1:"V_AV1",aac:"A_AAC",opus:"A_OPUS",webvtt:"S_TEXT/WEBVTT"},Zr={video:1,audio:2,subtitle:17},_e=class extends ${timestampsMustStartAtZero=!1;writer;format;helper=new Uint8Array(8);helperView=new DataView(this.helper.buffer);offsets=new WeakMap;dataOffsets=new WeakMap;trackDatas=[];segment=null;segmentInfo=null;seekHead=null;tracksElement=null;segmentDuration=null;cues=null;currentCluster=null;currentClusterMsTimestamp=null;trackDatasInCurrentCluster=new Set;duration=0;constructor(e,t){super(e),this.writer=e._writer,this.format=t,this.format._options.streamable&&(this.writer.ensureMonotonicity=!0)}writeByte(e){this.helperView.setUint8(0,e),this.writer.write(this.helper.subarray(0,1))}writeFloat32(e){this.helperView.setFloat32(0,e,!1),this.writer.write(this.helper.subarray(0,4))}writeFloat64(e){this.helperView.setFloat64(0,e,!1),this.writer.write(this.helper)}writeUnsignedInt(e,t=je(e)){let i=0;switch(t){case 6:this.helperView.setUint8(i++,e/2**40|0);case 5:this.helperView.setUint8(i++,e/2**32|0);case 4:this.helperView.setUint8(i++,e>>24);case 3:this.helperView.setUint8(i++,e>>16);case 2:this.helperView.setUint8(i++,e>>8);case 1:this.helperView.setUint8(i++,e);break;default:throw new Error("Bad UINT size "+t)}this.writer.write(this.helper.subarray(0,i))}writeSignedInt(e,t=Ke(e)){e<0&&(e+=2**(t*8)),this.writeUnsignedInt(e,t)}writeEBMLVarInt(e,t=$t(e)){let i=0;switch(t){case 1:this.helperView.setUint8(i++,128|e);break;case 2:this.helperView.setUint8(i++,64|e>>8),this.helperView.setUint8(i++,e);break;case 3:this.helperView.setUint8(i++,32|e>>16),this.helperView.setUint8(i++,e>>8),this.helperView.setUint8(i++,e);break;case 4:this.helperView.setUint8(i++,16|e>>24),this.helperView.setUint8(i++,e>>16),this.helperView.setUint8(i++,e>>8),this.helperView.setUint8(i++,e);break;case 5:this.helperView.setUint8(i++,8|e/2**32&7),this.helperView.setUint8(i++,e>>24),this.helperView.setUint8(i++,e>>16),this.helperView.setUint8(i++,e>>8),this.helperView.setUint8(i++,e);break;case 6:this.helperView.setUint8(i++,4|e/2**40&3),this.helperView.setUint8(i++,e/2**32|0),this.helperView.setUint8(i++,e>>24),this.helperView.setUint8(i++,e>>16),this.helperView.setUint8(i++,e>>8),this.helperView.setUint8(i++,e);break;default:throw new Error("Bad EBML VINT size "+t)}this.writer.write(this.helper.subarray(0,i))}writeString(e){this.writer.write(new Uint8Array(e.split("").map(t=>t.charCodeAt(0))))}writeEBML(e){if(e!==null){if(e instanceof Uint8Array)this.writer.write(e);else if(Array.isArray(e))for(let t of e)this.writeEBML(t);else if(this.offsets.set(e,this.writer.getPos()),this.writeUnsignedInt(e.id),Array.isArray(e.data)){let t=this.writer.getPos(),i=e.size===-1?1:e.size??4;e.size===-1?this.writeByte(255):this.writer.seek(this.writer.getPos()+i);let s=this.writer.getPos();if(this.dataOffsets.set(e,s),this.writeEBML(e.data),e.size!==-1){let o=this.writer.getPos()-s,n=this.writer.getPos();this.writer.seek(t),this.writeEBMLVarInt(o,i),this.writer.seek(n)}}else if(typeof e.data=="number"){let t=e.size??je(e.data);this.writeEBMLVarInt(t),this.writeUnsignedInt(e.data,t)}else if(typeof e.data=="string")this.writeEBMLVarInt(e.data.length),this.writeString(e.data);else if(e.data instanceof Uint8Array)this.writeEBMLVarInt(e.data.byteLength,e.size),this.writer.write(e.data);else if(e.data instanceof oe)this.writeEBMLVarInt(4),this.writeFloat32(e.data.value);else if(e.data instanceof q)this.writeEBMLVarInt(8),this.writeFloat64(e.data.value);else if(e.data instanceof ne){let t=e.size??Ke(e.data.value);this.writeEBMLVarInt(t),this.writeSignedInt(e.data.value,t)}}}beforeTrackAdd(e){if(this.format instanceof X)if(e.type==="video"){if(!["vp8","vp9","av1"].includes(e.source._codec))throw new Error("WebM only supports VP8, VP9 and AV1 as video codecs. Switching to MKV removes this restriction.")}else if(e.type==="audio"){if(!["opus","vorbis"].includes(e.source._codec))throw new Error("WebM only supports Opus and Vorbis as audio codecs. Switching to MKV removes this restriction.")}else if(e.type==="subtitle"){if(e.source._codec!=="webvtt")throw new Error("WebM only supports WebVTT as subtitle codec. Switching to MKV removes this restriction.")}else throw new Error("WebM only supports video, audio and subtitle tracks. Switching to MKV removes this restriction.")}async start(){let e=await this.mutex.acquire();this.writeEBMLHeader(),this.format._options.streamable||this.createSeekHead(),this.createSegmentInfo(),this.createCues(),await this.writer.flush(),e()}writeEBMLHeader(){let e={id:440786851,data:[{id:17030,data:1},{id:17143,data:1},{id:17138,data:4},{id:17139,data:8},{id:17026,data:this.format instanceof X?"webm":"matroska"},{id:17031,data:2},{id:17029,data:2}]};this.writeEBML(e)}createSeekHead(){let e=new Uint8Array([28,83,187,107]),t=new Uint8Array([21,73,169,102]),i=new Uint8Array([22,84,174,107]),s={id:290298740,data:[{id:19899,data:[{id:21419,data:e},{id:21420,size:5,data:0}]},{id:19899,data:[{id:21419,data:t},{id:21420,size:5,data:0}]},{id:19899,data:[{id:21419,data:i},{id:21420,size:5,data:0}]}]};this.seekHead=s}createSegmentInfo(){let e={id:17545,data:new q(0)};this.segmentDuration=e;let t={id:357149030,data:[{id:2807729,data:1e6},{id:19840,data:Qt},{id:22337,data:Qt},this.format._options.streamable?null:e]};this.segmentInfo=t}createTracks(){let e={id:374648427,data:[]};this.tracksElement=e;for(let t of this.trackDatas)e.data.push({id:174,data:[{id:215,data:t.track.id},{id:29637,data:t.track.id},{id:131,data:Zr[t.type]},{id:134,data:Yr[t.track.source._codec]},t.type==="video"?this.videoSpecificTrackInfo(t):null,t.type==="audio"?this.audioSpecificTrackInfo(t):null,t.type==="subtitle"?this.subtitleSpecificTrackInfo(t):null]})}videoSpecificTrackInfo(e){let t=[e.info.decoderConfig.description?{id:25506,data:P(e.info.decoderConfig.description)}:null,e.track.metadata.frameRate?{id:2352003,data:1e9/e.track.metadata.frameRate}:null],i=e.info.decoderConfig.colorSpace,s={id:224,data:[{id:176,data:e.info.width},{id:186,data:e.info.height},fe(i)?{id:21936,data:[{id:21937,data:U[i.matrix]},{id:21946,data:B[i.transfer]},{id:21947,data:z[i.primaries]},{id:21945,data:i.fullRange?2:1}]}:null]};return t.push(s),t}audioSpecificTrackInfo(e){return[e.info.decoderConfig.description?{id:25506,data:P(e.info.decoderConfig.description)}:null,{id:225,data:[{id:181,data:new oe(e.info.sampleRate)},{id:159,data:e.info.numberOfChannels}]}]}subtitleSpecificTrackInfo(e){return[{id:25506,data:v.encode(e.info.config.description)}]}createSegment(){let e={id:408125543,size:this.format._options.streamable?-1:jt,data:[this.format._options.streamable?null:this.seekHead,this.segmentInfo,this.tracksElement]};this.segment=e,this.writeEBML(e)}createCues(){this.cues={id:475249515,data:[]}}get segmentDataOffset(){return l(this.segment),this.dataOffsets.get(this.segment)}getVideoTrackData(e,t){let i=this.trackDatas.find(o=>o.track===e);if(i)return i;we(t),l(t),l(t.decoderConfig),l(t.decoderConfig.codedWidth!==void 0),l(t.decoderConfig.codedHeight!==void 0);let s={track:e,type:"video",info:{width:t.decoderConfig.codedWidth,height:t.decoderConfig.codedHeight,decoderConfig:t.decoderConfig},chunkQueue:[],lastWrittenMsTimestamp:null};return this.trackDatas.push(s),this.trackDatas.sort((o,n)=>o.track.id-n.track.id),s}getAudioTrackData(e,t){let i=this.trackDatas.find(o=>o.track===e);if(i)return i;Se(t),l(t),l(t.decoderConfig);let s={track:e,type:"audio",info:{numberOfChannels:t.decoderConfig.numberOfChannels,sampleRate:t.decoderConfig.sampleRate,decoderConfig:t.decoderConfig},chunkQueue:[],lastWrittenMsTimestamp:null};return this.trackDatas.push(s),this.trackDatas.sort((o,n)=>o.track.id-n.track.id),s}getSubtitleTrackData(e,t){let i=this.trackDatas.find(o=>o.track===e);if(i)return i;ye(t),l(t),l(t.config);let s={track:e,type:"subtitle",info:{config:t.config},chunkQueue:[],lastWrittenMsTimestamp:null};return this.trackDatas.push(s),this.trackDatas.sort((o,n)=>o.track.id-n.track.id),s}async addEncodedVideoChunk(e,t,i){let s=await this.mutex.acquire();try{let o=this.getVideoTrackData(e,i),n=new Uint8Array(t.byteLength);t.copyTo(n);let a=t.type==="key",c=this.validateAndNormalizeTimestamp(o.track,t.timestamp,a),u=this.createInternalChunk(n,c,(t.duration??0)/1e6,t.type);e.source._codec==="vp9"&&this.fixVP9ColorSpace(o,u),o.chunkQueue.push(u),await this.interleaveChunks()}finally{s()}}async addEncodedAudioChunk(e,t,i){let s=await this.mutex.acquire();try{let o=this.getAudioTrackData(e,i),n=new Uint8Array(t.byteLength);t.copyTo(n);let a=t.type,c=a==="key",u=this.validateAndNormalizeTimestamp(o.track,t.timestamp,c),d=this.createInternalChunk(n,u,(t.duration??0)/1e6,a);o.chunkQueue.push(d),await this.interleaveChunks()}finally{s()}}async addSubtitleCue(e,t,i){let s=await this.mutex.acquire();try{let o=this.getSubtitleTrackData(e,i),n=this.validateAndNormalizeTimestamp(o.track,1e6*t.timestamp,!0),a=t.text,c=Math.floor(n*1e3);L.lastIndex=0,a=a.replace(L,T=>{let k=pe(T.slice(1,-1))-c;return`<${be(k)}>`});let u=v.encode(a),d=`${t.settings??""}
${t.identifier??""}
${t.notes??""}`,f=this.createInternalChunk(u,n,t.duration,"key",d.trim()?v.encode(d):null);o.chunkQueue.push(f),await this.interleaveChunks()}finally{s()}}async interleaveChunks(){for(let e of this.output._tracks)if(!e.source._closed&&!this.trackDatas.some(t=>t.track===e))return;e:for(;;){let e=null,t=1/0;for(let s of this.trackDatas){if(s.chunkQueue.length===0&&!s.track.source._closed)break e;s.chunkQueue.length>0&&s.chunkQueue[0].timestamp<t&&(e=s,t=s.chunkQueue[0].timestamp)}if(!e)break;let i=e.chunkQueue.shift();this.writeBlock(e,i)}await this.writer.flush()}fixVP9ColorSpace(e,t){if(t.type!=="key"||!e.info.decoderConfig.colorSpace||!e.info.decoderConfig.colorSpace.matrix)return;let i=0;if(R(t.data,0,2)!==2)return;i+=2;let s=(R(t.data,i+1,i+2)<<1)+R(t.data,i+0,i+1);i+=2,s===3&&i++;let o=R(t.data,i+0,i+1);if(i++,o)return;let n=R(t.data,i+0,i+1);if(i++,n!==0)return;i+=2;let a=R(t.data,i+0,i+24);if(i+=24,a!==4817730)return;s>=2&&i++;let c={rgb:7,bt709:2,bt470bg:1,smpte170m:3}[e.info.decoderConfig.colorSpace.matrix];bt(t.data,i+0,i+3,c)}createInternalChunk(e,t,i,s,o=null){return{data:e,type:s,timestamp:t,duration:i,additions:o}}writeBlock(e,t){this.segment||(this.createTracks(),this.createSegment());let i=Math.floor(1e3*t.timestamp),s=this.trackDatas.every(d=>{if(d.track.source._closed)return!0;if(e===d)return t.type==="key";let f=d.chunkQueue[0];return f&&f.type==="key"});(!this.currentCluster||s&&i-this.currentClusterMsTimestamp>=1e3)&&this.createNewCluster(i);let o=i-this.currentClusterMsTimestamp;if(o<0)return;if(o>=qe)throw new Error(`Current Matroska cluster exceeded its maximum allowed length of ${qe} milliseconds. In order to produce a correct WebM file, you must pass in a key frame at least every ${qe} milliseconds.`);let a=new Uint8Array(4),c=new DataView(a.buffer);c.setUint8(0,128|e.track.id),c.setInt16(1,o,!1);let u=Math.floor(1e3*t.duration);if(u===0&&!t.additions){c.setUint8(3,+(t.type==="key")<<7);let d={id:163,data:[a,t.data]};this.writeEBML(d)}else{let d={id:160,data:[{id:161,data:[a,t.data]},t.type==="delta"?{id:251,data:new ne(e.lastWrittenMsTimestamp-i)}:null,t.additions?{id:30113,data:[{id:166,data:[{id:165,data:t.additions},{id:238,data:1}]}]}:null,u>0?{id:155,data:u}:null]};this.writeEBML(d)}this.duration=Math.max(this.duration,i+u),e.lastWrittenMsTimestamp=i,this.trackDatasInCurrentCluster.add(e)}createNewCluster(e){this.currentCluster&&!this.format._options.streamable&&this.finalizeCurrentCluster(),this.currentCluster={id:524531317,size:this.format._options.streamable?-1:Kt,data:[{id:231,data:e}]},this.writeEBML(this.currentCluster),this.currentClusterMsTimestamp=e,this.trackDatasInCurrentCluster.clear()}finalizeCurrentCluster(){l(this.currentCluster);let e=this.writer.getPos()-this.dataOffsets.get(this.currentCluster),t=this.writer.getPos();this.writer.seek(this.offsets.get(this.currentCluster)+4),this.writeEBMLVarInt(e,Kt),this.writer.seek(t);let i=this.offsets.get(this.currentCluster)-this.segmentDataOffset;l(this.cues),this.cues.data.push({id:187,data:[{id:179,data:this.currentClusterMsTimestamp},...[...this.trackDatasInCurrentCluster].map(s=>({id:183,data:[{id:247,data:s.track.id},{id:241,data:i}]}))]})}async onTrackClose(){let e=await this.mutex.acquire();await this.interleaveChunks(),e()}async finalize(){let e=await this.mutex.acquire();this.segment||(this.createTracks(),this.createSegment());for(let t of this.trackDatas)for(;t.chunkQueue.length>0;)this.writeBlock(t,t.chunkQueue.shift());if(!this.format._options.streamable&&this.currentCluster&&this.finalizeCurrentCluster(),l(this.cues),this.writeEBML(this.cues),!this.format._options.streamable){let t=this.writer.getPos(),i=this.writer.getPos()-this.segmentDataOffset;this.writer.seek(this.offsets.get(this.segment)+4),this.writeEBMLVarInt(i,jt),this.segmentDuration.data=new q(this.duration),this.writer.seek(this.offsets.get(this.segmentDuration)),this.writeEBML(this.segmentDuration),this.seekHead.data[0].data[1].data=this.offsets.get(this.cues)-this.segmentDataOffset,this.seekHead.data[1].data[1].data=this.offsets.get(this.segmentInfo)-this.segmentDataOffset,this.seekHead.data[2].data[1].data=this.offsets.get(this.tracksElement)-this.segmentDataOffset,this.writer.seek(this.offsets.get(this.seekHead)),this.writeEBML(this.seekHead),this.writer.seek(t)}e()}};var N=class{},Xe=class extends N{_options;constructor(e={}){if(!e||typeof e!="object")throw new TypeError("options must be an object.");if(e.fastStart!==void 0&&![!1,"in-memory","fragmented"].includes(e.fastStart))throw new TypeError('options.fastStart, when provided, must be false, "in-memory", or "fragmented".');super(),this._options=e}_createMuxer(e){return new ve(e,this)}},Ae=class extends N{_options;constructor(e={}){if(!e||typeof e!="object")throw new TypeError("options must be an object.");if(e.streamable!==void 0&&typeof e.streamable!="boolean")throw new TypeError("options.streamable, when provided, must be a boolean.");super(),this._options=e}_createMuxer(e){return new _e(e,this)}},X=class extends Ae{};var G=class{_connectedTrack=null;_closed=!1;_offsetTimestamps=!1;_ensureValidDigest(){if(!this._connectedTrack)throw new Error("Cannot call digest without connecting the source to an output track.");if(!this._connectedTrack.output._started)throw new Error("Cannot call digest before output has been started.");if(this._connectedTrack.output._finalizing)throw new Error("Cannot call digest after output has started finalizing.");if(this._closed)throw new Error("Cannot call digest after source has been closed.")}_start(){}async _flush(){}close(){if(this._closed)throw new Error("Source already closed.");if(!this._connectedTrack)throw new Error("Cannot call close without connecting the source to an output track.");if(!this._connectedTrack.output._started)throw new Error("Cannot call close before output has been started.");this._closed=!0,!this._connectedTrack.output._finalizing&&this._connectedTrack.output._muxer.onTrackClose(this._connectedTrack)}},I=class extends G{_connectedTrack=null;_codec;constructor(e){if(super(),!j.includes(e))throw new TypeError(`Invalid video codec '${e}'. Must be one of: ${j.join(", ")}.`);this._codec=e}},Ge=class extends I{constructor(e){super(e)}digest(e,t){if(!(e instanceof EncodedVideoChunk))throw new TypeError("chunk must be an EncodedVideoChunk.");return this._ensureValidDigest(),this._connectedTrack.output._muxer.addEncodedVideoChunk(this._connectedTrack,e,t)}},Jr=5,ei=r=>{if(!r||typeof r!="object")throw new TypeError("Codec config must be an object.");if(!j.includes(r.codec))throw new TypeError(`Invalid video codec '${r.codec}'. Must be one of: ${j.join(", ")}.`);if(!Number.isInteger(r.bitrate)||r.bitrate<=0)throw new TypeError("config.bitrate must be a positive integer.");if(r.latencyMode!==void 0&&!["quality","realtime"].includes(r.latencyMode))throw new TypeError("config.latencyMode, when provided, must be 'quality' or 'realtime'.")},ae=class{constructor(e,t){this.source=e;this.codecConfig=t;ei(t)}encoder=null;muxer=null;lastMultipleOfKeyFrameInterval=-1;lastWidth=null;lastHeight=null;async digest(e){if(this.source._ensureValidDigest(),this.lastWidth!==null&&this.lastHeight!==null){if(e.codedWidth!==this.lastWidth||e.codedHeight!==this.lastHeight)throw new Error(`Video frame size must remain constant. Expected ${this.lastWidth}x${this.lastHeight}, got ${e.codedWidth}x${e.codedHeight}.`)}else this.lastWidth=e.codedWidth,this.lastHeight=e.codedHeight;this.ensureEncoder(e),l(this.encoder);let t=Math.floor(e.timestamp/1e6/Jr);this.encoder.encode(e,{keyFrame:t!==this.lastMultipleOfKeyFrameInterval}),this.lastMultipleOfKeyFrameInterval=t,this.encoder.encodeQueueSize>=4&&await new Promise(i=>this.encoder.addEventListener("dequeue",i,{once:!0})),await this.muxer.mutex.currentPromise}ensureEncoder(e){this.encoder||(this.encoder=new VideoEncoder({output:(t,i)=>void this.muxer.addEncodedVideoChunk(this.source._connectedTrack,t,i),error:t=>console.error("Video encode error:",t)}),this.encoder.configure({codec:Dt(this.codecConfig.codec,e.codedWidth,e.codedHeight,this.codecConfig.bitrate),width:e.codedWidth,height:e.codedHeight,bitrate:this.codecConfig.bitrate,framerate:this.source._connectedTrack?.metadata.frameRate,latencyMode:this.codecConfig.latencyMode,...Ht(this.codecConfig.codec)}),l(this.source._connectedTrack),this.muxer=this.source._connectedTrack.output._muxer)}async flush(){this.encoder&&(await this.encoder.flush(),this.encoder.close())}},Ye=class extends I{_encoder;constructor(e){super(e.codec),this._encoder=new ae(this,e)}digest(e){if(!(e instanceof VideoFrame))throw new TypeError("videoFrame must be a VideoFrame.");return this._encoder.digest(e)}_flush(){return this._encoder.flush()}},Ze=class extends I{_encoder;_canvas;constructor(e,t){if(!(e instanceof HTMLCanvasElement))throw new TypeError("canvas must be an HTMLCanvasElement.");super(t.codec),this._encoder=new ae(this,t),this._canvas=e}digest(e,t=0){if(!Number.isFinite(e)||e<0)throw new TypeError("timestamp must be a non-negative number.");if(!Number.isFinite(t)||t<0)throw new TypeError("duration must be a non-negative number.");let i=new VideoFrame(this._canvas,{timestamp:Math.round(1e6*e),duration:Math.round(1e6*t),alpha:"discard"}),s=this._encoder.digest(i);return i.close(),s}_flush(){return this._encoder.flush()}},Je=class extends I{_encoder;_abortController=null;_track;_offsetTimestamps=!0;constructor(e,t){if(!(e instanceof MediaStreamTrack)||e.kind!=="video")throw new TypeError("track must be a video MediaStreamTrack.");t={...t,latencyMode:"realtime"},super(t.codec),this._encoder=new ae(this,t),this._track=e}_start(){this._abortController=new AbortController;let e=new MediaStreamTrackProcessor({track:this._track}),t=new WritableStream({write:i=>{this._encoder.digest(i),i.close()}});e.readable.pipeTo(t,{signal:this._abortController.signal}).catch(i=>{i instanceof DOMException&&i.name==="AbortError"||console.error("Pipe error:",i)})}async _flush(){this._abortController&&(this._abortController.abort(),this._abortController=null),await this._encoder.flush()}},O=class extends G{_connectedTrack=null;_codec;constructor(e){if(super(),!K.includes(e))throw new TypeError(`Invalid audio codec '${e}'. Must be one of: ${K.join(", ")}.`);this._codec=e}},et=class extends O{constructor(e){super(e)}digest(e,t){if(!(e instanceof EncodedAudioChunk))throw new TypeError("chunk must be an EncodedAudioChunk.");return this._ensureValidDigest(),this._connectedTrack.output._muxer.addEncodedAudioChunk(this._connectedTrack,e,t)}},ti=r=>{if(!r||typeof r!="object")throw new TypeError("Codec config must be an object.");if(!K.includes(r.codec))throw new TypeError(`Invalid audio codec '${r.codec}'. Must be one of: ${K.join(", ")}.`);if(!Number.isInteger(r.bitrate)||r.bitrate<=0)throw new TypeError("config.bitrate must be a positive integer.")},ce=class{constructor(e,t){this.source=e;this.codecConfig=t;ti(t)}encoder=null;muxer=null;lastNumberOfChannels=null;lastSampleRate=null;async digest(e){if(this.source._ensureValidDigest(),this.lastNumberOfChannels!==null&&this.lastSampleRate!==null){if(e.numberOfChannels!==this.lastNumberOfChannels||e.sampleRate!==this.lastSampleRate)throw new Error(`Audio parameters must remain constant. Expected ${this.lastNumberOfChannels} channels at ${this.lastSampleRate} Hz, got ${e.numberOfChannels} channels at ${e.sampleRate} Hz.`)}else this.lastNumberOfChannels=e.numberOfChannels,this.lastSampleRate=e.sampleRate;this.ensureEncoder(e),l(this.encoder),this.encoder.encode(e),this.encoder.encodeQueueSize>=4&&await new Promise(t=>this.encoder.addEventListener("dequeue",t,{once:!0})),await this.muxer.mutex.currentPromise}ensureEncoder(e){this.encoder||(this.encoder=new AudioEncoder({output:(t,i)=>void this.muxer.addEncodedAudioChunk(this.source._connectedTrack,t,i),error:t=>console.error("Audio encode error:",t)}),this.encoder.configure({codec:Wt(this.codecConfig.codec,e.numberOfChannels,e.sampleRate),numberOfChannels:e.numberOfChannels,sampleRate:e.sampleRate,bitrate:this.codecConfig.bitrate,...Lt(this.codecConfig.codec)}),l(this.source._connectedTrack),this.muxer=this.source._connectedTrack.output._muxer)}async flush(){this.encoder&&(await this.encoder.flush(),this.encoder.close())}},tt=class extends O{_encoder;constructor(e){super(e.codec),this._encoder=new ce(this,e)}digest(e){if(!(e instanceof AudioData))throw new TypeError("audioData must be an AudioData.");return this._encoder.digest(e)}_flush(){return this._encoder.flush()}},rt=class extends O{_encoder;_accumulatedFrameCount=0;constructor(e){super(e.codec),this._encoder=new ce(this,e)}digest(e){if(!(e instanceof AudioBuffer))throw new TypeError("audioBuffer must be an AudioBuffer.");let t=e.numberOfChannels,i=e.sampleRate,s=e.length,o=new Float32Array(t*s);for(let c=0;c<t;c++){let u=e.getChannelData(c);o.set(u,c*s)}let n=new AudioData({format:"f32-planar",sampleRate:i,numberOfFrames:s,numberOfChannels:t,timestamp:Math.round(1e6*this._accumulatedFrameCount/i),data:o}),a=this._encoder.digest(n);return n.close(),this._accumulatedFrameCount+=s,a}_flush(){return this._encoder.flush()}},it=class extends O{_encoder;_abortController=null;_track;_offsetTimestamps=!0;constructor(e,t){if(!(e instanceof MediaStreamTrack)||e.kind!=="audio")throw new TypeError("track must be an audio MediaStreamTrack.");super(t.codec),this._encoder=new ce(this,t),this._track=e}_start(){this._abortController=new AbortController;let e=new MediaStreamTrackProcessor({track:this._track}),t=new WritableStream({write:i=>{this._encoder.digest(i),i.close()}});e.readable.pipeTo(t,{signal:this._abortController.signal}).catch(i=>{i instanceof DOMException&&i.name==="AbortError"||console.error("Pipe error:",i)})}async _flush(){this._abortController&&(this._abortController.abort(),this._abortController=null),await this._encoder.flush()}},Y=class extends G{_connectedTrack=null;_codec;constructor(e){if(super(),!Ce.includes(e))throw new TypeError(`Invalid subtitle codec '${e}'. Must be one of: ${Ce.join(", ")}.`);this._codec=e}},st=class extends Y{_parser;constructor(e){super(e),this._parser=new he({codec:e,output:(t,i)=>this._connectedTrack?.output._muxer.addSubtitleCue(this._connectedTrack,t,i),error:t=>console.error("Subtitle parse error:",t)})}digest(e){if(typeof e!="string")throw new TypeError("text must be a string.");return this._ensureValidDigest(),this._parser.parse(e),this._connectedTrack.output._muxer.mutex.currentPromise}};var ot=class{_muxer;_writer;_tracks=[];_started=!1;_finalizing=!1;_mutex=new H;constructor(e){if(!e||typeof e!="object")throw new TypeError("options must be an object.");if(!(e.format instanceof N))throw new TypeError("options.format must be an OutputFormat.");if(!(e.target instanceof W))throw new TypeError("options.target must be a Target.");if(e.target._output)throw new Error("Target is already used for another output.");e.target._output=this,this._writer=e.target._createWriter(),this._muxer=e.format._createMuxer(this)}addVideoTrack(e,t={}){if(!(e instanceof I))throw new TypeError("source must be a VideoSource.");if(!t||typeof t!="object")throw new TypeError("metadata must be an object.");if(typeof t.rotation=="number"&&![0,90,180,270].includes(t.rotation))throw new TypeError(`Invalid video rotation: ${t.rotation}. Has to be 0, 90, 180 or 270.`);if(Array.isArray(t.rotation)&&(t.rotation.length!==9||t.rotation.some(i=>!Number.isFinite(i))))throw new TypeError(`Invalid video transformation matrix: ${t.rotation.join()}`);if(t.frameRate!==void 0&&(!Number.isInteger(t.frameRate)||t.frameRate<=0))throw new TypeError(`Invalid video frame rate: ${t.frameRate}. Must be a positive integer.`);this._addTrack("video",e,t)}addAudioTrack(e,t={}){if(!(e instanceof O))throw new TypeError("source must be an AudioSource.");if(!t||typeof t!="object")throw new TypeError("metadata must be an object.");this._addTrack("audio",e,t)}addSubtitleTrack(e,t={}){if(!(e instanceof Y))throw new TypeError("source must be a SubtitleSource.");if(!t||typeof t!="object")throw new TypeError("metadata must be an object.");this._addTrack("subtitle",e,t)}_addTrack(e,t,i){if(this._started)throw new Error("Cannot add track after output has started.");if(t._connectedTrack)throw new Error("Source is already used for a track.");let s={id:this._tracks.length+1,output:this,type:e,source:t,metadata:i};this._muxer.beforeTrackAdd(s),this._tracks.push(s),t._connectedTrack=s}async start(){if(this._started)throw new Error("Output already started.");this._started=!0,this._writer.start();let e=await this._mutex.acquire();await this._muxer.start();for(let t of this._tracks)t.source._start();e()}async finalize(){if(!this._started)throw new Error("Cannot finalize before starting.");if(this._finalizing)throw new Error("Cannot call finalize twice.");this._finalizing=!0;let e=await this._mutex.acquire(),t=this._tracks.map(i=>i.source._flush());await Promise.all(t),await this._muxer.finalize(),await this._writer.flush(),await this._writer.finalize(),e()}};var ue=class{},nt=class extends ue{constructor(t){super();this.buffer=t}async _read(t,i){return new Uint8Array(this.buffer,t,i-t)}async _getSize(){return this.buffer.byteLength}},at=class extends ue{constructor(t){super();this.blob=t}async _read(t,i){let o=await this.blob.slice(t,i).arrayBuffer();return new Uint8Array(o)}async _getSize(){return this.blob.size}};var Z=class{input;constructor(e){this.input=e}};var Ee=class{_backing;constructor(e){this._backing=e}isVideoTrack(){return this instanceof de}isAudioTrack(){return this instanceof le}getDuration(){return this._backing.getDuration()}},de=class extends Ee{_backing;constructor(e){super(e),this._backing=e}getCodec(){return this._backing.getCodec()}getWidth(){return this._backing.getWidth()}getHeight(){return this._backing.getHeight()}getRotation(){return this._backing.getRotation()}getDecoderConfig(){return this._backing.getDecoderConfig()}async getCodecMimeType(){return(await this.getDecoderConfig()).codec}},le=class extends Ee{_backing;constructor(e){super(e),this._backing=e}getCodec(){return this._backing.getCodec()}getNumberOfChannels(){return this._backing.getNumberOfChannels()}getSampleRate(){return this._backing.getSampleRate()}getDecoderConfig(){return this._backing.getDecoderConfig()}async getCodecMimeType(){return(await this.getDecoderConfig()).codec}};var J=class{constructor(e){this.reader=e}pos=0;readRange(e,t){let{view:i,offset:s}=this.reader.getViewAndOffset(e,t);return new Uint8Array(i.buffer,s,t-e)}readU8(){let{view:e,offset:t}=this.reader.getViewAndOffset(this.pos,this.pos+1);return this.pos++,e.getUint8(t)}readU16(){let{view:e,offset:t}=this.reader.getViewAndOffset(this.pos,this.pos+2);return this.pos+=2,e.getUint16(t,!1)}readU24(){let{view:e,offset:t}=this.reader.getViewAndOffset(this.pos,this.pos+3);this.pos+=3;let i=e.getUint16(t,!1),s=e.getUint8(t+2);return i*256+s}readS32(){let{view:e,offset:t}=this.reader.getViewAndOffset(this.pos,this.pos+4);return this.pos+=4,e.getInt32(t,!1)}readU32(){let{view:e,offset:t}=this.reader.getViewAndOffset(this.pos,this.pos+4);return this.pos+=4,e.getUint32(t,!1)}readI32(){let{view:e,offset:t}=this.reader.getViewAndOffset(this.pos,this.pos+4);return this.pos+=4,e.getInt32(t,!1)}readU64(){let e=this.readU32(),t=this.readU32();return e*4294967296+t}readF64(){let{view:e,offset:t}=this.reader.getViewAndOffset(this.pos,this.pos+8);return this.pos+=8,e.getFloat64(t,!1)}readFixed_16_16(){return this.readS32()/65536}readFixed_2_30(){return this.readS32()/1073741824}readAscii(e){let{view:t,offset:i}=this.reader.getViewAndOffset(this.pos,this.pos+e);this.pos+=e;let s="";for(let o=0;o<e;o++)s+=String.fromCharCode(t.getUint8(i+o));return s}readIsomVariableInteger(){let e=0;for(let t=0;t<4;t++){e<<=7;let i=this.readU8();if(e|=i&127,!(i&128))break}return e}readBoxHeader(){let e=this.readU32(),t=this.readAscii(4),i=8;return e===1&&(e=this.readU64(),i=16),{name:t,totalSize:e,headerSize:i,contentSize:e-i}}};var ri=[V(0),V(90),V(180),V(270)],Ie=class extends Z{isobmffReader;currentTrack=null;tracks=[];metadataPromise=null;movieTimescale=-1;movieDurationInTimescale=-1;constructor(e){super(e),this.isobmffReader=new J(e._reader)}async getDuration(){if(await this.readMetadata(),this.movieDurationInTimescale===-1)throw new Error("Could not read movie duration.");return this.movieDurationInTimescale/this.movieTimescale}async getTracks(){return await this.readMetadata(),this.tracks.map(e=>e.inputTrack)}async getMimeType(){await this.readMetadata();let e="video/mp4";if(this.tracks.length>0){let t=await Promise.all(this.tracks.map(s=>s.inputTrack.getCodecMimeType())),i=[...new Set(t)];e+=`; codecs="${i.join(", ")}"`}return e}readMetadata(){return this.metadataPromise??=(async()=>{let e=await this.isobmffReader.reader.getSourceSize();for(;this.isobmffReader.pos<e;){await this.isobmffReader.reader.loadRange(this.isobmffReader.pos,this.isobmffReader.pos+16);let t=this.isobmffReader.pos,i=this.isobmffReader.readBoxHeader();if(i.name==="moov"){await this.isobmffReader.reader.loadRange(this.isobmffReader.pos,this.isobmffReader.pos+i.contentSize),this.readContiguousBoxes(i.contentSize);return}this.isobmffReader.pos=t+i.totalSize}})()}getSampleTableForTrack(e){if(e.sampleTable)return e.sampleTable;let t={sampleTimingEntries:[],sampleCompositionTimeOffsets:[],sampleSizes:[],keySampleIndices:null,chunkOffsets:[],sampleToChunk:[],presentationTimestamps:[]};e.sampleTable=t,this.isobmffReader.pos=e.sampleTableOffset,this.currentTrack=e,this.traverseBox(),this.currentTrack=null;for(let i of t.sampleTimingEntries)for(let s=0;s<i.count;s++)t.presentationTimestamps.push({presentationTimestamp:i.startDecodeTimestamp+s*i.delta,sampleIndex:i.startIndex+s});for(let i of t.sampleCompositionTimeOffsets)for(let s=0;s<i.count;s++){let o=i.startIndex+s,n=t.presentationTimestamps[o];n&&(n.presentationTimestamp+=i.offset)}return t.presentationTimestamps.sort((i,s)=>i.presentationTimestamp-s.presentationTimestamp),e.sampleTable}readContiguousBoxes(e){let t=this.isobmffReader.pos;for(;this.isobmffReader.pos-t<e;)this.traverseBox()}traverseBox(){let e=this.isobmffReader.pos,t=this.isobmffReader.readBoxHeader(),i=e+t.totalSize;switch(t.name){case"mdia":case"minf":case"dinf":this.readContiguousBoxes(t.contentSize);break;case"mvhd":{let s=this.isobmffReader.readU8();this.isobmffReader.pos+=3,s===1?(this.isobmffReader.pos+=16,this.movieTimescale=this.isobmffReader.readU32(),this.movieDurationInTimescale=this.isobmffReader.readU64()):(this.isobmffReader.pos+=8,this.movieTimescale=this.isobmffReader.readU32(),this.movieDurationInTimescale=this.isobmffReader.readU32())}break;case"trak":{let s={id:-1,demuxer:this,inputTrack:null,info:null,timescale:-1,durationInTimescale:-1,rotation:0,sampleTableOffset:-1,sampleTable:null};if(this.currentTrack=s,this.readContiguousBoxes(t.contentSize),s.id!==-1&&s.timescale!==-1&&s.info!==null){if(s.info.type==="video"&&s.info.codec!==null){let o=s;s.inputTrack=new de(new ct(o)),this.tracks.push(s)}else if(s.info.type==="audio"&&s.info.codec!==null){let o=s;s.inputTrack=new le(new ut(o)),this.tracks.push(s)}}this.currentTrack=null}break;case"tkhd":{let s=this.currentTrack;l(s);let o=this.isobmffReader.readU8();if(!((this.isobmffReader.readU24()&1)!==0))break;if(o===0)this.isobmffReader.pos+=8,s.id=this.isobmffReader.readU32(),this.isobmffReader.pos+=8;else if(o===1)this.isobmffReader.pos+=16,s.id=this.isobmffReader.readU32(),this.isobmffReader.pos+=12;else throw new Error(`Incorrect track header version ${o}.`);this.isobmffReader.pos+=2*4+2+2+2+2;let c=[];c.push(this.isobmffReader.readFixed_16_16(),this.isobmffReader.readFixed_16_16()),this.isobmffReader.pos+=4,c.push(this.isobmffReader.readFixed_16_16(),this.isobmffReader.readFixed_16_16());let u=ri.findIndex(d=>d.every((f,T)=>f===c[T]));u===-1?s.rotation=0:s.rotation=90*u}break;case"mdhd":{let s=this.currentTrack;l(s);let o=this.isobmffReader.readU8();this.isobmffReader.pos+=3,o===0?(this.isobmffReader.pos+=8,s.timescale=this.isobmffReader.readU32(),s.durationInTimescale=this.isobmffReader.readU32()):o===1&&(this.isobmffReader.pos+=16,s.timescale=this.isobmffReader.readU32(),s.durationInTimescale=this.isobmffReader.readU64())}break;case"hdlr":{let s=this.currentTrack;l(s),this.isobmffReader.pos+=8;let o=this.isobmffReader.readAscii(4);o==="vide"?s.info={type:"video",width:-1,height:-1,codec:null,codecDescription:null,colorSpace:null}:o==="soun"&&(s.info={type:"audio",numberOfChannels:-1,sampleRate:-1,codec:null,codecDescription:null})}break;case"stbl":{let s=this.currentTrack;l(s),s.sampleTableOffset=e,this.readContiguousBoxes(t.contentSize)}break;case"stsd":{let s=this.currentTrack;if(l(s),s.info===null||s.sampleTable)break;let o=this.isobmffReader.readU8();this.isobmffReader.pos+=3;let n=this.isobmffReader.readU32();for(let a=0;a<n;a++){let c=this.isobmffReader.readBoxHeader();if(s.info.type==="video"){if(c.name==="avc1")s.info.codec="avc";else if(c.name==="hvc1"||c.name==="hev1")s.info.codec="hevc";else{console.warn(`Unsupported video sample entry type ${c.name}.`);break}this.isobmffReader.pos+=6*1+2+2+2+3*4,s.info.width=this.isobmffReader.readU16(),s.info.height=this.isobmffReader.readU16(),this.isobmffReader.pos+=50,this.readContiguousBoxes(e+c.totalSize-this.isobmffReader.pos)}else{if(c.name==="mp4a")s.info.codec="aac";else if(c.name.toLowerCase()==="opus")s.info.codec="opus";else{console.warn(`Unsupported audio sample entry type ${c.name}.`);break}this.isobmffReader.pos+=6*1+2;let u=this.isobmffReader.readU16();this.isobmffReader.pos+=3*2;let d=this.isobmffReader.readU16();this.isobmffReader.pos+=6;let f=this.isobmffReader.readU32()/65536;if(o===0&&u>0){if(u===1)this.isobmffReader.pos+=4*4;else if(u===2){this.isobmffReader.pos+=4,f=this.isobmffReader.readF64(),d=this.isobmffReader.readU32(),this.isobmffReader.pos+=4;let T=this.isobmffReader.readU32(),C=this.isobmffReader.readU32(),k=this.isobmffReader.readU32(),w=this.isobmffReader.readU32()}}s.info.numberOfChannels=d,s.info.sampleRate=f,this.readContiguousBoxes(e+c.totalSize-this.isobmffReader.pos)}}}break;case"avcC":{let s=this.currentTrack;l(s&&s.info),s.info.codecDescription=this.isobmffReader.readRange(this.isobmffReader.pos,this.isobmffReader.pos+t.contentSize)}break;case"hvcC":{let s=this.currentTrack;l(s&&s.info),s.info.codecDescription=this.isobmffReader.readRange(this.isobmffReader.pos,this.isobmffReader.pos+t.contentSize)}break;case"colr":{let s=this.currentTrack;if(l(s&&s.info?.type==="video"),this.isobmffReader.readAscii(4)!=="nclx")break;let n=this.isobmffReader.readU16(),a=this.isobmffReader.readU16(),c=this.isobmffReader.readU16(),u=!!(this.isobmffReader.readU8()&128);s.info.colorSpace={primaries:kt[n],transfer:gt[a],matrix:Tt[c],fullRange:u}}break;case"wave":t.totalSize>8&&this.readContiguousBoxes(t.contentSize);break;case"esds":{let s=this.currentTrack;l(s&&s.info),this.isobmffReader.pos+=4;let o=this.isobmffReader.readU8();l(o===3),this.isobmffReader.readIsomVariableInteger(),this.isobmffReader.pos+=2;let n=this.isobmffReader.readU8(),a=(n&128)!==0,c=(n&64)!==0,u=(n&32)!==0;if(a&&(this.isobmffReader.pos+=2),c){let k=this.isobmffReader.readU8();this.isobmffReader.pos+=k}u&&(this.isobmffReader.pos+=2);let d=this.isobmffReader.readU8();l(d===4),this.isobmffReader.readIsomVariableInteger();let f=this.isobmffReader.readU8();l(f===64),this.isobmffReader.pos+=12;let T=this.isobmffReader.readU8();l(T===5);let C=this.isobmffReader.readIsomVariableInteger();s.info.codecDescription=this.isobmffReader.readRange(this.isobmffReader.pos,this.isobmffReader.pos+C)}break;case"stts":{let s=this.currentTrack;if(l(s),!s.sampleTable)break;this.isobmffReader.pos+=4;let o=this.isobmffReader.readU32(),n=0,a=0;for(let c=0;c<o;c++){let u=this.isobmffReader.readU32(),d=this.isobmffReader.readU32();s.sampleTable.sampleTimingEntries.push({startIndex:n,startDecodeTimestamp:a,count:u,delta:d}),n+=u,a+=u*d}}break;case"ctts":{let s=this.currentTrack;if(l(s),!s.sampleTable)break;this.isobmffReader.pos+=4;let o=this.isobmffReader.readU32(),n=0;for(let a=0;a<o;a++){let c=this.isobmffReader.readU32(),u=this.isobmffReader.readI32();s.sampleTable.sampleCompositionTimeOffsets.push({startIndex:n,count:c,offset:u}),n+=c}}break;case"stsz":{let s=this.currentTrack;if(l(s),!s.sampleTable)break;this.isobmffReader.pos+=4;let o=this.isobmffReader.readU32(),n=this.isobmffReader.readU32();if(o===0)for(let a=0;a<n;a++){let c=this.isobmffReader.readU32();s.sampleTable.sampleSizes.push(c)}else s.sampleTable.sampleSizes.push(o)}break;case"stz2":throw new Error("Unsupported.");case"stss":{let s=this.currentTrack;if(l(s),!s.sampleTable)break;this.isobmffReader.pos+=4,s.sampleTable.keySampleIndices=[];let o=this.isobmffReader.readU32();for(let n=0;n<o;n++){let a=this.isobmffReader.readU32()-1;s.sampleTable.keySampleIndices.push(a)}}break;case"stsc":{let s=this.currentTrack;if(l(s),!s.sampleTable)break;this.isobmffReader.pos+=4;let o=this.isobmffReader.readU32();for(let a=0;a<o;a++){let c=this.isobmffReader.readU32()-1,u=this.isobmffReader.readU32(),d=this.isobmffReader.readU32();s.sampleTable.sampleToChunk.push({startSampleIndex:-1,startChunkIndex:c,samplesPerChunk:u,sampleDescriptionIndex:d})}let n=0;for(let a=0;a<s.sampleTable.sampleToChunk.length;a++)if(s.sampleTable.sampleToChunk[a].startSampleIndex=n,a<s.sampleTable.sampleToChunk.length-1){let u=s.sampleTable.sampleToChunk[a+1].startChunkIndex-s.sampleTable.sampleToChunk[a].startChunkIndex;n+=u*s.sampleTable.sampleToChunk[a].samplesPerChunk}}break;case"stco":{let s=this.currentTrack;if(l(s),!s.sampleTable)break;this.isobmffReader.pos+=4;let o=this.isobmffReader.readU32();for(let n=0;n<o;n++){let a=this.isobmffReader.readU32();s.sampleTable.chunkOffsets.push(a)}}break;case"co64":{let s=this.currentTrack;if(l(s),!s.sampleTable)break;this.isobmffReader.pos+=4;let o=this.isobmffReader.readU32();for(let n=0;n<o;n++){let a=this.isobmffReader.readU64();s.sampleTable.chunkOffsets.push(a)}}break}this.isobmffReader.pos=i}},Oe=class{constructor(e){this.internalTrack=e}chunkToSampleIndex=new WeakMap;sampleIndexToChunk=new Map;getCodec(){throw new Error("Not implemented on base class.")}async getDuration(){return this.internalTrack.durationInTimescale/this.internalTrack.timescale}},ct=class extends Oe{internalTrack;constructor(e){super(e),this.internalTrack=e}async getCodec(){return this.internalTrack.info.codec}async getWidth(){return this.internalTrack.info.width}async getHeight(){return this.internalTrack.info.height}async getRotation(){return this.internalTrack.rotation}async getDecoderConfig(){return{codec:Ft(this.internalTrack.info.codec,this.internalTrack.info.codecDescription),codedWidth:this.internalTrack.info.width,codedHeight:this.internalTrack.info.height,description:this.internalTrack.info.codecDescription??void 0,colorSpace:this.internalTrack.info.colorSpace??void 0}}async fetchChunkForSampleIndex(e){if(e===-1)return null;let t=this.sampleIndexToChunk.get(e)?.deref();if(t)return t;let i=this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack),s=ii(i,e);if(!s)return null;let o=await this.internalTrack.demuxer.isobmffReader.reader.source._read(s.byteOffset,s.byteOffset+s.byteSize),n=new EncodedVideoChunk({data:o,timestamp:1e6*s.presentationTimestamp/this.internalTrack.timescale,duration:1e6*s.duration/this.internalTrack.timescale,type:s.isKeyFrame?"key":"delta"});return this.chunkToSampleIndex.set(n,e),this.sampleIndexToChunk.set(e,new WeakRef(n)),n}async getFirstChunk(){return this.fetchChunkForSampleIndex(0)}async getChunk(e){let t=this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack),i=qt(t,e*this.internalTrack.timescale);return this.fetchChunkForSampleIndex(i)}async getNextChunk(e){let t=this.chunkToSampleIndex.get(e);if(t===void 0)throw new Error("Chunk was not created from this track.");return this.fetchChunkForSampleIndex(t+1)}async getKeyChunk(e){let t=this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack),i=qt(t,e*this.internalTrack.timescale),s=i===-1?-1:si(t,i);return this.fetchChunkForSampleIndex(s)}async getNextKeyChunk(e){let t=this.chunkToSampleIndex.get(e);if(t===void 0)throw new Error("Chunk was not created from this track.");let i=this.internalTrack.demuxer.getSampleTableForTrack(this.internalTrack),s=oi(i,t);return this.fetchChunkForSampleIndex(s)}},ut=class extends Oe{internalTrack;constructor(e){super(e),this.internalTrack=e}async getCodec(){return this.internalTrack.info.codec}async getNumberOfChannels(){return this.internalTrack.info.numberOfChannels}async getSampleRate(){return this.internalTrack.info.sampleRate}async getDecoderConfig(){return{codec:Nt(this.internalTrack.info.codec,this.internalTrack.info.codecDescription),numberOfChannels:this.internalTrack.info.numberOfChannels,sampleRate:this.internalTrack.info.sampleRate,description:this.internalTrack.info.codecDescription??void 0}}},qt=(r,e)=>{let t=D(r.presentationTimestamps,e,i=>i.presentationTimestamp);return t===-1?-1:r.presentationTimestamps[t].sampleIndex},ii=(r,e)=>{let t=D(r.sampleTimingEntries,e,k=>k.startIndex),i=r.sampleTimingEntries[t];if(!i||i.startIndex+i.count<=e)return null;let o=i.startDecodeTimestamp+(e-i.startIndex)*i.delta,n=D(r.sampleCompositionTimeOffsets,e,k=>k.startIndex),a=r.sampleCompositionTimeOffsets[n];a&&(o+=a.offset);let c=r.sampleSizes[Math.min(e,r.sampleSizes.length-1)],u=D(r.sampleToChunk,e,k=>k.startSampleIndex),d=r.sampleToChunk[u];l(d);let f=d.startChunkIndex+Math.floor((e-d.startSampleIndex)/d.samplesPerChunk),C=r.chunkOffsets[f];if(r.sampleSizes.length===1)C+=c*(e-d.startSampleIndex);else{let k=d.startSampleIndex+(f-d.startChunkIndex)*d.samplesPerChunk;for(let w=k;w<e;w++)C+=r.sampleSizes[w]}return{presentationTimestamp:o,duration:i.delta,byteOffset:C,byteSize:c,isKeyFrame:r.keySampleIndices?wt(r.keySampleIndices,e,k=>k)!==-1:!0}},si=(r,e)=>{if(!r.keySampleIndices)return e;let t=D(r.keySampleIndices,e,i=>i);return r.keySampleIndices[t]??-1},oi=(r,e)=>{if(!r.keySampleIndices)return e+1;let t=D(r.keySampleIndices,e,i=>i);return r.keySampleIndices[t+1]??-1};var Ve=class extends Z{};var Me=class{},dt=class extends Me{async _canReadInput(e){if(await e._reader.getSourceSize()<8)return!1;await e._reader.loadRange(4,8);let i=new J(e._reader);return i.pos=4,i.readAscii(4)==="ftyp"}_createDemuxer(e){return new Ie(e)}},lt=class extends Me{async _canReadInput(){return!1}_createDemuxer(e){return new Ve(e)}},Re=new dt,ni=Re,ai=Re,mt=new lt,Xt=mt,ci=mt,ui=[Re,Xt];var Pe=4096,ze=class{constructor(e){this.source=e}loadedSegments=[];sourceSizePromise=null;getSourceSize(){return this.sourceSizePromise?this.sourceSizePromise:this.sourceSizePromise=this.source._getSize()}async loadRange(e,t){let i=Math.floor(e/Pe)*Pe,s=Math.ceil(t/Pe)*Pe;s=Math.min(s,await this.getSourceSize());let o=this.loadedSegments.find(c=>c.start<=i);o&&(i=Math.max(i,o.end));let n=this.loadedSegments.find(c=>c.end>=s);if(n&&(s=Math.min(s,n.start)),i>=s)return;let a=await this.source._read(i,s);this.insertIntoLoadedSegments(i,a)}insertIntoLoadedSegments(e,t){let i={start:e,end:e+t.byteLength,bytes:t,view:new DataView(t.buffer)},s=this.loadedSegments.findLastIndex(d=>d.start<=e);this.loadedSegments.splice(s+1,0,i),(s===-1||this.loadedSegments[s].end<i.start)&&s++;let o=s,n=this.loadedSegments[o].start,a=s,c=this.loadedSegments[a].end;for(;this.loadedSegments.length-1>a&&this.loadedSegments[a+1].start<=c;)a++,c=Math.max(c,this.loadedSegments[a].end);if(o===a)return;for(let d=o;d<=a;d++){let f=this.loadedSegments[d];if(f.start===n&&f.end===c){this.loadedSegments.splice(d+1,a-d),this.loadedSegments.splice(o,d-o);return}}let u=new Uint8Array(c-n);for(let d=o;d<=a;d++){let f=this.loadedSegments[d];u.set(f.bytes,f.start-n)}this.loadedSegments.splice(o+1,a-o),this.loadedSegments[o].end=c,this.loadedSegments[o].bytes=u,this.loadedSegments[o].view=new DataView(u.buffer)}getViewAndOffset(e,t){let i=this.loadedSegments.find(s=>s.start<=e&&t<=s.end);if(!i)throw new Error(`No segment loaded for range [${e}, ${t}).`);return{view:i.view,offset:i.bytes.byteOffset+e-i.start}}};var ft=class{_formats;_reader;_demuxerPromise=null;_format=null;constructor(e){this._formats=e.formats,this._reader=new ze(e.source)}_getDemuxer(){return this._demuxerPromise??=(async()=>{for(let e of this._formats)if(await e._canReadInput(this))return this._format=e,e._createDemuxer(this);throw new Error("Input has an unrecognizable format.")})()}async getFormat(){return await this._getDemuxer(),l(this._format),this._format}async getDuration(){return(await this._getDemuxer()).getDuration()}async getTracks(){return(await this._getDemuxer()).getTracks()}async getVideoTracks(){return(await this.getTracks()).filter(t=>t.isVideoTrack())}async getPrimaryVideoTrack(){return(await this.getTracks()).find(t=>t.isVideoTrack())??null}async getAudioTracks(){return(await this.getTracks()).filter(t=>t.isAudioTrack())}async getPrimaryAudioTrack(){return(await this.getTracks()).find(t=>t.isAudioTrack())??null}async getMimeType(){return(await this._getDemuxer()).getMimeType()}};var ht=class{constructor(e){this.videoTrack=e}getFirstChunk(){return this.videoTrack._backing.getFirstChunk()}getChunk(e){return this.videoTrack._backing.getChunk(e)}getNextChunk(e){return this.videoTrack._backing.getNextChunk(e)}getKeyChunk(e){return this.videoTrack._backing.getKeyChunk(e)}getNextKeyChunk(e){return this.videoTrack._backing.getNextKeyChunk(e)}async*chunks(e=0){let t=await this.getChunk(e);for(;t;)yield t,t=await this.getNextChunk(t)}},pt=class{constructor(e){this.videoTrack=e}decoderConfig=null;async createDecoder(e){this.decoderConfig||(this.decoderConfig=await this.videoTrack.getDecoderConfig());let t=new VideoDecoder({output:e,error:i=>console.error(i)});return t.configure(this.decoderConfig),t}async getKeyFrame(e){let t=null,i=await this.createDecoder(o=>t=o),s=await this.videoTrack._backing.getKeyChunk(e);return s?(i.decode(s),await i.flush(),i.close(),t):null}async getFrame(e){let t=null,i=await this.createDecoder(a=>{a.timestamp/1e6<=e?(t?.close(),t=a):a.close()}),s=await this.videoTrack._backing.getKeyChunk(e);if(!s)return null;let o=await this.videoTrack._backing.getChunk(e);l(o),i.decode(s);let n=s;for(;n!==o;){let a=await this.videoTrack._backing.getNextChunk(n);l(a),n=a,i.decode(a),i.decodeQueueSize>=10&&await new Promise(c=>i.addEventListener("dequeue",c,{once:!0}))}return await i.flush(),i.close(),t}async*frames(e=0){let t=[],i=!1,s=null,{promise:o,resolve:n}=Fe(),a=!1,c=await this.createDecoder(f=>{if(a){f.close();return}let T=f.timestamp/1e6;s&&(T>e?(t.push(s),i=!0):s.close()),T>=e&&(t.push(f),i=!0),s=i?null:f,t.length>0&&(n(),{promise:o,resolve:n}=Fe())}),u=await this.videoTrack._backing.getKeyChunk(e);if(!u)return;let d=!1;(async()=>{let f=u;for(;f&&!a;)c.decode(f),c.decodeQueueSize>=10&&await new Promise(C=>c.addEventListener("dequeue",C,{once:!0})),f=await this.videoTrack._backing.getNextChunk(f);await c.flush(),c.close(),d=!0,n()})();try{for(;;)if(t.length>0)yield t.shift();else if(!d)await o;else break}finally{a=!0}}};export{ui as ALL_FORMATS,K as AUDIO_CODECS,nt as ArrayBufferSource,se as ArrayBufferTarget,rt as AudioBufferSource,tt as AudioDataSource,O as AudioSource,at as BlobSource,Ze as CanvasSource,et as EncodedAudioChunkSource,ht as EncodedVideoChunkDrain,Ge as EncodedVideoChunkSource,Re as ISOBMFF,ft as Input,mt as MATROSKA,Xt as MKV,ai as MOV,ni as MP4,G as MediaSource,it as MediaStreamAudioTrackSource,Je as MediaStreamVideoTrackSource,Ae as MkvOutputFormat,Xe as Mp4OutputFormat,ot as Output,N as OutputFormat,Ce as SUBTITLE_CODECS,ue as Source,Qe as StreamTarget,Y as SubtitleSource,W as Target,st as TextSubtitleSource,j as VIDEO_CODECS,pt as VideoFrameDrain,Ye as VideoFrameSource,I as VideoSource,ci as WEBM,X as WebMOutputFormat};
